Version 3.2 HI-TECH Software Intermediate Code
"22 io.h
[v _pinMode `(v ~T0 @X0 0 ef2`i`i ]
"20 soft_i2c.c
[c E10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 .. ]
[n E10 pin_label PIN_A0 PIN_A1 PIN_A2 PIN_A3 PIN_A4 PIN_A5 PIN_A6 PIN_A7 PIN_B0 PIN_B1 PIN_B2 PIN_B3 PIN_B4 PIN_B5 PIN_B6 PIN_B7 PIN_C0 PIN_C1 PIN_C2 PIN_C3 PIN_C4 PIN_C5 PIN_C6 PIN_C7 PIN_D0 PIN_D1 PIN_D2 PIN_D3 PIN_D4 PIN_D5 PIN_D6 PIN_D7 PIN_E0 PIN_E1 PIN_E2 PIN_E3 PIN_E4 PIN_E5 PIN_E6 PIN_E7  ]
"21 io.h
[v _digitalRead `(i ~T0 @X0 0 ef1`i ]
"20
[v _digitalWrite `(v ~T0 @X0 0 ef2`i`i ]
[; ;soft_i2c.h: 14: void i2cInit(void);
[; ;soft_i2c.h: 15: unsigned char i2cWriteByte(unsigned char send_start, unsigned char send_stop, unsigned char byte);
[; ;soft_i2c.h: 16: unsigned char i2cReadByte(unsigned char nack, unsigned char send_stop);
[; ;io.h: 12: enum pin_label{
[; ;io.h: 13: PIN_A0,PIN_A1,PIN_A2,PIN_A3,PIN_A4,PIN_A5,PIN_A6,PIN_A7,
[; ;io.h: 14: PIN_B0,PIN_B1,PIN_B2,PIN_B3,PIN_B4,PIN_B5,PIN_B6,PIN_B7,
[; ;io.h: 15: PIN_C0,PIN_C1,PIN_C2,PIN_C3,PIN_C4,PIN_C5,PIN_C6,PIN_C7,
[; ;io.h: 16: PIN_D0,PIN_D1,PIN_D2,PIN_D3,PIN_D4,PIN_D5,PIN_D6,PIN_D7,
[; ;io.h: 17: PIN_E0,PIN_E1,PIN_E2,PIN_E3,PIN_E4,PIN_E5,PIN_E6,PIN_E7
[; ;io.h: 18: };
[; ;io.h: 20: void digitalWrite(int pin, int value);
[; ;io.h: 21: int digitalRead(int pin);
[; ;io.h: 22: void pinMode(int pin, int type);
"18 soft_i2c.c
[v _i2cInit `(v ~T0 @X0 1 ef ]
{
[; ;soft_i2c.c: 18: void i2cInit(void) {
[e :U _i2cInit ]
[f ]
[; ;soft_i2c.c: 20: pinMode(PIN_C4,1);
"20
[e ( _pinMode (2 , -> . `E10 20 `i -> 1 `i ]
[; ;soft_i2c.c: 21: pinMode(PIN_C5,1);
"21
[e ( _pinMode (2 , -> . `E10 21 `i -> 1 `i ]
[; ;soft_i2c.c: 22: }
"22
[e :UE 1 ]
}
"26
[v _I2C_delay `(v ~T0 @X0 1 ef ]
{
[; ;soft_i2c.c: 26: void I2C_delay(void) {
[e :U _I2C_delay ]
[f ]
"27
[v _v `Vi ~T0 @X0 1 a ]
"28
[v _i `i ~T0 @X0 1 a ]
[; ;soft_i2c.c: 27: volatile int v;
[; ;soft_i2c.c: 28: int i;
[; ;soft_i2c.c: 29: for (i = 0; i < 10 / 2; i++)
"29
{
[e = _i -> 0 `i ]
[e $ < _i / -> 10 `i -> 2 `i 3  ]
[e $U 4  ]
"30
[e :U 3 ]
[; ;soft_i2c.c: 30: v;
[e _v ]
"29
[e ++ _i -> 1 `i ]
[e $ < _i / -> 10 `i -> 2 `i 3  ]
[e :U 4 ]
"30
}
[; ;soft_i2c.c: 31: }
"31
[e :UE 2 ]
}
"33
[v _read_SCL `(uc ~T0 @X0 1 ef ]
"34
{
[; ;soft_i2c.c: 33: unsigned char read_SCL(void)
[; ;soft_i2c.c: 34: {
[e :U _read_SCL ]
[f ]
[; ;soft_i2c.c: 35: pinMode(PIN_C5,1);
"35
[e ( _pinMode (2 , -> . `E10 21 `i -> 1 `i ]
[; ;soft_i2c.c: 36: return !!digitalRead(PIN_C5);
"36
[e ) -> -> ! ! != ( _digitalRead (1 -> . `E10 21 `i -> 0 `i `i `uc ]
[e $UE 6  ]
[; ;soft_i2c.c: 37: }
"37
[e :UE 6 ]
}
"38
[v _read_SDA `(uc ~T0 @X0 1 ef ]
"39
{
[; ;soft_i2c.c: 38: unsigned char read_SDA(void)
[; ;soft_i2c.c: 39: {
[e :U _read_SDA ]
[f ]
[; ;soft_i2c.c: 40: pinMode(PIN_C4,1);
"40
[e ( _pinMode (2 , -> . `E10 20 `i -> 1 `i ]
[; ;soft_i2c.c: 41: return !!digitalRead(PIN_C4);
"41
[e ) -> -> ! ! != ( _digitalRead (1 -> . `E10 20 `i -> 0 `i `i `uc ]
[e $UE 7  ]
[; ;soft_i2c.c: 43: }
"43
[e :UE 7 ]
}
"44
[v _clear_SCL `(v ~T0 @X0 1 ef ]
"45
{
[; ;soft_i2c.c: 44: void clear_SCL(void)
[; ;soft_i2c.c: 45: {
[e :U _clear_SCL ]
[f ]
[; ;soft_i2c.c: 46: pinMode(PIN_C5,0);
"46
[e ( _pinMode (2 , -> . `E10 21 `i -> 0 `i ]
[; ;soft_i2c.c: 47: digitalWrite(PIN_C5,0);
"47
[e ( _digitalWrite (2 , -> . `E10 21 `i -> 0 `i ]
[; ;soft_i2c.c: 48: }
"48
[e :UE 8 ]
}
"50
[v _clear_SDA `(v ~T0 @X0 1 ef ]
"51
{
[; ;soft_i2c.c: 50: void clear_SDA(void)
[; ;soft_i2c.c: 51: {
[e :U _clear_SDA ]
[f ]
[; ;soft_i2c.c: 52: pinMode(PIN_C4,0);
"52
[e ( _pinMode (2 , -> . `E10 20 `i -> 0 `i ]
[; ;soft_i2c.c: 53: digitalWrite(PIN_C4,0);
"53
[e ( _digitalWrite (2 , -> . `E10 20 `i -> 0 `i ]
[; ;soft_i2c.c: 54: }
"54
[e :UE 9 ]
}
"56
[v _started `uc ~T0 @X0 1 e ]
[i _started
-> -> 0 `i `uc
]
[; ;soft_i2c.c: 56: unsigned char started = 0;
"57
[v _i2c_start `(v ~T0 @X0 1 ef ]
{
[; ;soft_i2c.c: 57: void i2c_start(void) {
[e :U _i2c_start ]
[f ]
[; ;soft_i2c.c: 59: if (started) {
"59
[e $ ! != -> _started `i -> -> -> 0 `i `uc `i 11  ]
{
[; ;soft_i2c.c: 60: read_SDA();
"60
[e ( _read_SDA ..  ]
[; ;soft_i2c.c: 61: I2C_delay();
"61
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 62: while (read_SCL() == 0);
"62
[e $U 12  ]
[e :U 13 ]
[e :U 12 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 13  ]
[e :U 14 ]
[; ;soft_i2c.c: 64: I2C_delay();
"64
[e ( _I2C_delay ..  ]
"65
}
[e :U 11 ]
[; ;soft_i2c.c: 65: }
[; ;soft_i2c.c: 66: if (read_SDA() == 0) {
"66
[e $ ! == -> ( _read_SDA ..  `i -> 0 `i 15  ]
{
"68
}
[e :U 15 ]
[; ;soft_i2c.c: 68: }
[; ;soft_i2c.c: 70: clear_SDA();
"70
[e ( _clear_SDA ..  ]
[; ;soft_i2c.c: 71: I2C_delay();
"71
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 72: clear_SCL();
"72
[e ( _clear_SCL ..  ]
[; ;soft_i2c.c: 73: started = 1;
"73
[e = _started -> -> 1 `i `uc ]
[; ;soft_i2c.c: 74: }
"74
[e :UE 10 ]
}
"76
[v _i2c_stop `(v ~T0 @X0 1 ef ]
{
[; ;soft_i2c.c: 76: void i2c_stop(void) {
[e :U _i2c_stop ]
[f ]
[; ;soft_i2c.c: 78: clear_SDA();
"78
[e ( _clear_SDA ..  ]
[; ;soft_i2c.c: 79: I2C_delay();
"79
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 80: while (read_SCL() == 0);
"80
[e $U 17  ]
[e :U 18 ]
[e :U 17 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 18  ]
[e :U 19 ]
[; ;soft_i2c.c: 81: I2C_delay();
"81
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 82: if (read_SDA() == 0) {
"82
[e $ ! == -> ( _read_SDA ..  `i -> 0 `i 20  ]
{
"84
}
[e :U 20 ]
[; ;soft_i2c.c: 84: }
[; ;soft_i2c.c: 85: I2C_delay();
"85
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 86: started = 0;
"86
[e = _started -> -> 0 `i `uc ]
[; ;soft_i2c.c: 87: }
"87
[e :UE 16 ]
}
"89
[v _i2c_write_bit `(v ~T0 @X0 1 ef1`uc ]
{
[; ;soft_i2c.c: 89: void i2c_write_bit(unsigned char nbit) {
[e :U _i2c_write_bit ]
[v _nbit `uc ~T0 @X0 1 r1 ]
[f ]
[; ;soft_i2c.c: 90: if (nbit) {
"90
[e $ ! != -> _nbit `i -> -> -> 0 `i `uc `i 22  ]
{
[; ;soft_i2c.c: 91: read_SDA();
"91
[e ( _read_SDA ..  ]
"92
}
[; ;soft_i2c.c: 92: } else {
[e $U 23  ]
[e :U 22 ]
{
[; ;soft_i2c.c: 93: clear_SDA();
"93
[e ( _clear_SDA ..  ]
"94
}
[e :U 23 ]
[; ;soft_i2c.c: 94: }
[; ;soft_i2c.c: 95: I2C_delay();
"95
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 96: while (read_SCL() == 0);
"96
[e $U 24  ]
[e :U 25 ]
[e :U 24 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 25  ]
[e :U 26 ]
[; ;soft_i2c.c: 97: if (nbit && read_SDA() == 0) {
"97
[e $ ! && != -> _nbit `i -> -> -> 0 `i `uc `i == -> ( _read_SDA ..  `i -> 0 `i 27  ]
{
"99
}
[e :U 27 ]
[; ;soft_i2c.c: 99: }
[; ;soft_i2c.c: 100: I2C_delay();
"100
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 101: clear_SCL();
"101
[e ( _clear_SCL ..  ]
[; ;soft_i2c.c: 102: I2C_delay();
"102
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 103: }
"103
[e :UE 21 ]
}
"105
[v _i2c_read_bit `(uc ~T0 @X0 1 ef ]
{
[; ;soft_i2c.c: 105: unsigned char i2c_read_bit(void) {
[e :U _i2c_read_bit ]
[f ]
"106
[v _nbit `uc ~T0 @X0 1 a ]
[; ;soft_i2c.c: 106: unsigned char nbit;
[; ;soft_i2c.c: 107: read_SDA();
"107
[e ( _read_SDA ..  ]
[; ;soft_i2c.c: 108: I2C_delay();
"108
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 109: while (read_SCL() == 0);
"109
[e $U 29  ]
[e :U 30 ]
[e :U 29 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 30  ]
[e :U 31 ]
[; ;soft_i2c.c: 110: nbit = read_SDA();
"110
[e = _nbit ( _read_SDA ..  ]
[; ;soft_i2c.c: 111: I2C_delay();
"111
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 112: clear_SCL();
"112
[e ( _clear_SCL ..  ]
[; ;soft_i2c.c: 113: I2C_delay();
"113
[e ( _I2C_delay ..  ]
[; ;soft_i2c.c: 114: return nbit;
"114
[e ) _nbit ]
[e $UE 28  ]
[; ;soft_i2c.c: 115: }
"115
[e :UE 28 ]
}
"118
[v _i2cWriteByte `(uc ~T0 @X0 1 ef3`uc`uc`uc ]
{
[; ;soft_i2c.c: 118: unsigned char i2cWriteByte(unsigned char send_start, unsigned char send_stop, unsigned char byte) {
[e :U _i2cWriteByte ]
[v _send_start `uc ~T0 @X0 1 r1 ]
[v _send_stop `uc ~T0 @X0 1 r2 ]
[v _byte `uc ~T0 @X0 1 r3 ]
[f ]
"119
[v _nbit `uc ~T0 @X0 1 a ]
"120
[v _nack `uc ~T0 @X0 1 a ]
[; ;soft_i2c.c: 119: unsigned char nbit;
[; ;soft_i2c.c: 120: unsigned char nack;
[; ;soft_i2c.c: 121: if (send_start) {
"121
[e $ ! != -> _send_start `i -> -> -> 0 `i `uc `i 33  ]
{
[; ;soft_i2c.c: 122: i2c_start();
"122
[e ( _i2c_start ..  ]
"123
}
[e :U 33 ]
[; ;soft_i2c.c: 123: }
[; ;soft_i2c.c: 124: for (nbit = 0; nbit < 8; nbit++) {
"124
{
[e = _nbit -> -> 0 `i `uc ]
[e $ < -> _nbit `i -> 8 `i 34  ]
[e $U 35  ]
[e :U 34 ]
{
[; ;soft_i2c.c: 125: i2c_write_bit((byte & 0x80) != 0);
"125
[e ( _i2c_write_bit (1 -> -> != & -> _byte `i -> 128 `i -> 0 `i `i `uc ]
[; ;soft_i2c.c: 126: byte <<= 1;
"126
[e =<< _byte -> 1 `i ]
"127
}
"124
[e ++ _nbit -> -> 1 `i `uc ]
[e $ < -> _nbit `i -> 8 `i 34  ]
[e :U 35 ]
"127
}
[; ;soft_i2c.c: 127: }
[; ;soft_i2c.c: 128: nack = i2c_read_bit();
"128
[e = _nack ( _i2c_read_bit ..  ]
[; ;soft_i2c.c: 129: if (send_stop) {
"129
[e $ ! != -> _send_stop `i -> -> -> 0 `i `uc `i 37  ]
{
[; ;soft_i2c.c: 130: i2c_stop();
"130
[e ( _i2c_stop ..  ]
"131
}
[e :U 37 ]
[; ;soft_i2c.c: 131: }
[; ;soft_i2c.c: 132: return nack;
"132
[e ) _nack ]
[e $UE 32  ]
[; ;soft_i2c.c: 133: }
"133
[e :UE 32 ]
}
"136
[v _i2cReadByte `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[; ;soft_i2c.c: 136: unsigned char i2cReadByte(unsigned char nack, unsigned char send_stop) {
[e :U _i2cReadByte ]
[v _nack `uc ~T0 @X0 1 r1 ]
[v _send_stop `uc ~T0 @X0 1 r2 ]
[f ]
"137
[v _byte `uc ~T0 @X0 1 a ]
[; ;soft_i2c.c: 137: unsigned char byte = 0;
[e = _byte -> -> 0 `i `uc ]
"138
[v _nbit `ui ~T0 @X0 1 a ]
[; ;soft_i2c.c: 138: unsigned nbit;
[; ;soft_i2c.c: 139: for (nbit = 0; nbit < 8; nbit++) {
"139
{
[e = _nbit -> -> 0 `i `ui ]
[e $ < _nbit -> -> 8 `i `ui 39  ]
[e $U 40  ]
[e :U 39 ]
{
[; ;soft_i2c.c: 140: byte = (byte << 1) | i2c_read_bit();
"140
[e = _byte -> | << -> _byte `i -> 1 `i -> ( _i2c_read_bit ..  `i `uc ]
"141
}
"139
[e ++ _nbit -> -> 1 `i `ui ]
[e $ < _nbit -> -> 8 `i `ui 39  ]
[e :U 40 ]
"141
}
[; ;soft_i2c.c: 141: }
[; ;soft_i2c.c: 142: i2c_write_bit(nack);
"142
[e ( _i2c_write_bit (1 _nack ]
[; ;soft_i2c.c: 143: if (send_stop) {
"143
[e $ ! != -> _send_stop `i -> -> -> 0 `i `uc `i 42  ]
{
[; ;soft_i2c.c: 144: i2c_stop();
"144
[e ( _i2c_stop ..  ]
"145
}
[e :U 42 ]
[; ;soft_i2c.c: 145: }
[; ;soft_i2c.c: 146: return byte;
"146
[e ) _byte ]
[e $UE 38  ]
[; ;soft_i2c.c: 147: }
"147
[e :UE 38 ]
}
