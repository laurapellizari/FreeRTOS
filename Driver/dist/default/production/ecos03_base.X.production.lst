

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jun 28 20:32:07 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 09/04/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4520 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataBANK0
    93  0019EE                     __pidataBANK0:
    94                           	callstack 0
    95                           
    96                           ;initializer for main@F2438
    97  0019EE  6C                 	db	low _press
    98  0019EF  0D                 	db	high _press
    99  0019F0  000A               	dw	10
   100  0019F2  0003               	dw	3
   101                           
   102                           ;initializer for main@F2435
   103  0019F4  40                 	db	low _db
   104  0019F5  19                 	db	high _db
   105  0019F6  0002               	dw	2
   106  0019F8  0004               	dw	4
   107                           
   108                           ;initializer for main@F2432
   109  0019FA  E4                 	db	low _time
   110  0019FB  17                 	db	high _time
   111  0019FC  03E8               	dw	1000
   112  0019FE  0001               	dw	1
   113                           
   114                           ;initializer for main@F2429
   115  001A00  12                 	db	low _disp
   116  001A01  06                 	db	high _disp
   117  001A02  03E8               	dw	1000
   118  001A04  0000               	dw	0
   119                           
   120                           	psect	smallconst
   121  000600                     __psmallconst:
   122                           	callstack 0
   123  000600  00                 	db	0
   124  000601                     _valor@ssd$F554:
   125                           	callstack 0
   126  000601  3F                 	db	63
   127  000602  06                 	db	6
   128  000603  5B                 	db	91
   129  000604  4F                 	db	79
   130  000605  66                 	db	102
   131  000606  6D                 	db	109
   132  000607  7D                 	db	125
   133  000608  07                 	db	7
   134  000609  7F                 	db	127
   135  00060A  6F                 	db	111
   136  00060B  77                 	db	119
   137  00060C  7C                 	db	124
   138  00060D  39                 	db	57
   139  00060E  5E                 	db	94
   140  00060F  79                 	db	121
   141  000610  71                 	db	113
   142  000611                     __end_of_valor@ssd$F554:
   143                           	callstack 0
   144  000611  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           	psect	nvCOMRAM
   147  000061                     __pnvCOMRAM:
   148                           	callstack 0
   149  000061                     _keypad:
   150                           	callstack 0
   151  000061                     	ds	2
   152  000063                     _lcd:
   153                           	callstack 0
   154  000063                     	ds	2
   155  0000                     _T0CON	set	4053
   156  0000                     _SPBRG	set	4015
   157  0000                     _SPBRGH	set	4016
   158  0000                     _BAUDCON	set	4024
   159  0000                     _TXSTA	set	4012
   160  0000                     _RCREG	set	4014
   161  0000                     _RCSTA	set	4011
   162  0000                     _TXREG	set	4013
   163  0000                     _PIR1	set	3998
   164  0000                     _T2CON	set	4042
   165  0000                     _CCP1CON	set	4029
   166  0000                     _CCPR1L	set	4030
   167  0000                     _PR2	set	4043
   168  0000                     _TRISE	set	3990
   169  0000                     _TRISC	set	3988
   170  0000                     _TRISB	set	3987
   171  0000                     _TRISA	set	3986
   172  0000                     _PORTE	set	3972
   173  0000                     _PORTC	set	3970
   174  0000                     _PORTB	set	3969
   175  0000                     _PORTA	set	3968
   176  0000                     _ADRESL	set	4035
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADCON2	set	4032
   179  0000                     _ADCON0	set	4034
   180  0000                     _TRISD	set	3989
   181  0000                     _PORTD	set	3971
   182  0000                     _RCON	set	4048
   183  0000                     _TMR0L	set	4054
   184  0000                     _TMR0H	set	4055
   185  0000                     _INTCON	set	4082
   186                           
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190  0018FA                     __pcinit:
   191                           	callstack 0
   192  0018FA                     start_initialization:
   193                           	callstack 0
   194  0018FA                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Initialize objects allocated to BANK0 (24 bytes)
   198                           ; load TBLPTR registers with __pidataBANK0
   199  0018FA  0EEE               	movlw	low __pidataBANK0
   200  0018FC  6EF6               	movwf	tblptrl,c
   201  0018FE  0E19               	movlw	high __pidataBANK0
   202  001900  6EF7               	movwf	tblptrh,c
   203  001902  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   204  001904  6EF8               	movwf	tblptru,c
   205  001906  EE00  F080         	lfsr	0,__pdataBANK0
   206  00190A  EE10 F018          	lfsr	1,24
   207  00190E                     copy_data0:
   208  00190E  0009               	tblrd		*+
   209  001910  CFF5 FFEE          	movff	tablat,postinc0
   210  001914  50E5               	movf	postdec1,w,c
   211  001916  50E1               	movf	fsr1l,w,c
   212  001918  E1FA               	bnz	copy_data0
   213                           
   214                           ; Clear objects allocated to BANK0 (20 bytes)
   215  00191A  EE00  F0B0         	lfsr	0,__pbssBANK0
   216  00191E  0E14               	movlw	20
   217  001920                     clear_0:
   218  001920  6AEE               	clrf	postinc0,c
   219  001922  06E8               	decf	wreg,f,c
   220  001924  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to COMRAM (50 bytes)
   223  001926  EE00  F001         	lfsr	0,__pbssCOMRAM
   224  00192A  0E32               	movlw	50
   225  00192C                     clear_1:
   226  00192C  6AEE               	clrf	postinc0,c
   227  00192E  06E8               	decf	wreg,f,c
   228  001930  E1FD               	bnz	clear_1
   229  001932                     end_of_initialization:
   230                           	callstack 0
   231  001932                     __end_of__initialization:
   232                           	callstack 0
   233  001932  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   234  001934  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   235  001936  0E00               	movlw	low (__Lmediumconst shr (0+16))
   236  001938  6EF8               	movwf	tblptru,c
   237  00193A  0100               	movlb	0
   238  00193C  EF47  F009         	goto	_main	;jump to C main() function
   239                           
   240                           	psect	bssCOMRAM
   241  000001                     __pbssCOMRAM:
   242                           	callstack 0
   243  000001                     kpDebounce@valorAntigo:
   244                           	callstack 0
   245  000001                     	ds	2
   246  000003                     kpDebounce@valorNovo:
   247                           	callstack 0
   248  000003                     	ds	2
   249  000005                     _valor:
   250                           	callstack 0
   251  000005                     	ds	2
   252  000007                     _hour:
   253                           	callstack 0
   254  000007                     	ds	2
   255  000009                     _minute:
   256                           	callstack 0
   257  000009                     	ds	2
   258  00000B                     _second:
   259                           	callstack 0
   260  00000B                     	ds	2
   261  00000D                     _count:
   262                           	callstack 0
   263  00000D                     	ds	2
   264  00000F                     _v3:
   265                           	callstack 0
   266  00000F                     	ds	1
   267  000010                     _v2:
   268                           	callstack 0
   269  000010                     	ds	1
   270  000011                     _v1:
   271                           	callstack 0
   272  000011                     	ds	1
   273  000012                     _v0:
   274                           	callstack 0
   275  000012                     	ds	1
   276  000013                     _display:
   277                           	callstack 0
   278  000013                     	ds	1
   279  000014                     _started:
   280                           	callstack 0
   281  000014                     	ds	1
   282  000015                     kpDebounce@tempo:
   283                           	callstack 0
   284  000015                     	ds	1
   285  000016                     _end:
   286                           	callstack 0
   287  000016                     	ds	1
   288  000017                     _start:
   289                           	callstack 0
   290  000017                     	ds	1
   291  000018                     _myself@drv_keypad$F631:
   292                           	callstack 0
   293  000018                     	ds	5
   294  00001D                     _myself@drv_lcd$F591:
   295                           	callstack 0
   296  00001D                     	ds	5
   297  000022                     _myself:
   298                           	callstack 0
   299  000022                     	ds	5
   300  000027                     _my_funcs@drv_keypad$F635:
   301                           	callstack 0
   302  000027                     	ds	4
   303  00002B                     _my_funcs@drv_lcd$F595:
   304                           	callstack 0
   305  00002B                     	ds	4
   306  00002F                     _my_funcs:
   307                           	callstack 0
   308  00002F                     	ds	4
   309                           
   310                           	psect	bssBANK0
   311  0000B0                     __pbssBANK0:
   312                           	callstack 0
   313  0000B0                     _pool:
   314                           	callstack 0
   315  0000B0                     	ds	20
   316                           
   317                           	psect	dataBANK0
   318  000080                     __pdataBANK0:
   319                           	callstack 0
   320  000080                     main@F2438:
   321                           	callstack 0
   322  000080                     	ds	6
   323  000086                     main@F2435:
   324                           	callstack 0
   325  000086                     	ds	6
   326  00008C                     main@F2432:
   327                           	callstack 0
   328  00008C                     	ds	6
   329  000092                     main@F2429:
   330                           	callstack 0
   331  000092                     	ds	6
   332                           
   333                           	psect	cstackBANK0
   334  000098                     __pcstackBANK0:
   335                           	callstack 0
   336  000098                     main@p1:
   337                           	callstack 0
   338                           
   339                           ; 6 bytes @ 0x0
   340  000098                     	ds	6
   341  00009E                     main@p2:
   342                           	callstack 0
   343                           
   344                           ; 6 bytes @ 0x6
   345  00009E                     	ds	6
   346  0000A4                     main@p3:
   347                           	callstack 0
   348                           
   349                           ; 6 bytes @ 0xC
   350  0000A4                     	ds	6
   351  0000AA                     main@p4:
   352                           	callstack 0
   353                           
   354                           ; 6 bytes @ 0x12
   355  0000AA                     	ds	6
   356                           
   357                           	psect	cstackCOMRAM
   358  000033                     __pcstackCOMRAM:
   359                           	callstack 0
   360  000033                     ?i2___awmod:
   361                           	callstack 0
   362  000033                     i2___awmod@dividend:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x0
   366  000033                     	ds	2
   367  000035                     i2___awmod@divisor:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  000035                     	ds	2
   372  000037                     i2___awmod@counter:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x4
   376  000037                     	ds	1
   377  000038                     i2___awmod@sign:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x5
   381  000038                     	ds	1
   382  000039                     
   383                           ; 1 bytes @ 0x6
   384  000039                     	ds	2
   385  00003B                     KernelClock@proc:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x8
   389  00003B                     	ds	1
   390  00003C                     ??_ISR:
   391                           
   392                           ; 1 bytes @ 0x9
   393  00003C                     	ds	6
   394  000042                     ??_kpDebounce:
   395  000042                     ?_getLcdDriver:
   396                           	callstack 0
   397  000042                     ?_getKeypadDriver:
   398                           	callstack 0
   399  000042                     ?_kpRead:
   400                           	callstack 0
   401  000042                     ?___awdiv:
   402                           	callstack 0
   403  000042                     Delay40us@i:
   404                           	callstack 0
   405  000042                     digitalWrite@pin:
   406                           	callstack 0
   407  000042                     pinMode@pin:
   408                           	callstack 0
   409  000042                     ___awdiv@dividend:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0xF
   413  000042                     	ds	1
   414  000043                     Delay2ms@i:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x10
   418  000043                     	ds	1
   419  000044                     digitalWrite@value:
   420                           	callstack 0
   421  000044                     pinMode@type:
   422                           	callstack 0
   423  000044                     ___awdiv@divisor:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x11
   427  000044                     	ds	2
   428  000046                     ??_pinMode:
   429  000046                     ??_digitalWrite:
   430  000046                     ___awdiv@counter:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x13
   434  000046                     	ds	1
   435  000047                     kpDebounce@old_D:
   436                           	callstack 0
   437  000047                     ___awdiv@sign:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x14
   441  000047                     	ds	1
   442  000048                     lcdCommand@old_D:
   443                           	callstack 0
   444  000048                     lcdData@valor:
   445                           	callstack 0
   446  000048                     kpDebounce@k:
   447                           	callstack 0
   448  000048                     ___awdiv@quotient:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x15
   452  000048                     	ds	1
   453  000049                     lcdCommand@cmd:
   454                           	callstack 0
   455  000049                     lcdData@old_D:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x16
   459  000049                     	ds	1
   460  00004A                     ?___awmod:
   461                           	callstack 0
   462  00004A                     kpDebounce@j:
   463                           	callstack 0
   464  00004A                     initGenerico@parameters:
   465                           	callstack 0
   466  00004A                     initLCD@parameters:
   467                           	callstack 0
   468  00004A                     initKp@parameters:
   469                           	callstack 0
   470  00004A                     ___awmod@dividend:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x17
   474  00004A                     	ds	1
   475  00004B                     kpDebounce@i:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x18
   479  00004B                     	ds	1
   480  00004C                     ___awmod@divisor:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x19
   484  00004C                     	ds	2
   485  00004E                     ___awmod@counter:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x1B
   489  00004E                     	ds	1
   490  00004F                     ___awmod@sign:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x1C
   494  00004F                     	ds	1
   495  000050                     kernelAddProc@newProc:
   496                           	callstack 0
   497  000050                     changePORTD@parameters:
   498                           	callstack 0
   499  000050                     cmd@parameters:
   500                           	callstack 0
   501  000050                     data@parameters:
   502                           	callstack 0
   503  000050                     read@parameters:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x1D
   507  000050                     	ds	2
   508  000052                     ??_kernelAddProc:
   509  000052                     ??_disp:
   510  000052                     ??_press:
   511  000052                     
   512                           ; 1 bytes @ 0x1F
   513  000052                     	ds	2
   514  000054                     press@x:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x21
   518  000054                     	ds	2
   519  000056                     press@value:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x23
   523  000056                     	ds	2
   524  000058                     ??_kernelLoop:
   525                           
   526                           ; 1 bytes @ 0x25
   527  000058                     	ds	5
   528  00005D                     kernelLoop@tempProc:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x2A
   532  00005D                     	ds	2
   533  00005F                     kernelLoop@next:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0x2C
   537  00005F                     	ds	1
   538  000060                     kernelLoop@p:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x2D
   542  000060                     	ds	1
   543  000061                     
   544                           ; 1 bytes @ 0x2E
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 108 in file "main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  p4              6   18[BANK0 ] struct .
   555 ;;  p3              6   12[BANK0 ] struct .
   556 ;;  p2              6    6[BANK0 ] struct .
   557 ;;  p1              6    0[BANK0 ] struct .
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   567 ;;      Params:         0       0       0       0       0       0       0
   568 ;;      Locals:         0      24       0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0
   570 ;;      Totals:         0      24       0       0       0       0       0
   571 ;;Total ram usage:       24 bytes
   572 ;; Hardware stack levels required when called:    9
   573 ;; This function calls:
   574 ;;		_getKeypadDriver
   575 ;;		_getLcdDriver
   576 ;;		_initGenerico
   577 ;;		_initKp
   578 ;;		_initLCD
   579 ;;		_kernelAddProc
   580 ;;		_kernelInit
   581 ;;		_kernelLoop
   582 ;;		_timerInit
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text0
   589  00128E                     __ptext0:
   590                           	callstack 0
   591  00128E                     _main:
   592                           	callstack 22
   593  00128E                     
   594                           ;main.c: 109: lcd = getLcdDriver();
   595  00128E  ECBF  F00C         	call	_getLcdDriver	;wreg free
   596  001292  C042  F063         	movff	?_getLcdDriver,_lcd
   597  001296  C043  F064         	movff	?_getLcdDriver+1,_lcd+1
   598                           
   599                           ;main.c: 110: keypad = getKeypadDriver();
   600  00129A  ECD4  F00C         	call	_getKeypadDriver	;wreg free
   601  00129E  C042  F061         	movff	?_getKeypadDriver,_keypad
   602  0012A2  C043  F062         	movff	?_getKeypadDriver+1,_keypad+1
   603  0012A6                     
   604                           ;main.c: 112: lcd->initFunc(0);
   605  0012A6  0E00               	movlw	0
   606  0012A8  6E4A               	movwf	initKp@parameters^0,c
   607  0012AA  0E00               	movlw	0
   608  0012AC  6E4B               	movwf	(initKp@parameters+1)^0,c
   609  0012AE  EE20 F003          	lfsr	2,3
   610  0012B2  5063               	movf	_lcd^0,w,c
   611  0012B4  26D9               	addwf	fsr2l,f,c
   612  0012B6  5064               	movf	(_lcd+1)^0,w,c
   613  0012B8  22DA               	addwfc	fsr2h,f,c
   614  0012BA  D802               	call	u3998
   615  0012BC  EF6A  F009         	goto	u3999
   616  0012C0                     u3998:
   617  0012C0  0005               	push	
   618  0012C2  6EFA               	movwf	pclath,c
   619  0012C4  50DE               	movf	postinc2,w,c
   620  0012C6  6EFD               	movwf	tosl,c
   621  0012C8  50DE               	movf	postinc2,w,c
   622  0012CA  6EFE               	movwf	tosh,c
   623  0012CC  50F8               	movf	tblptru,w,c
   624  0012CE  6EFF               	movwf	tosu,c
   625  0012D0  50FA               	movf	pclath,w,c
   626  0012D2  0012               	return		;indir
   627  0012D4                     u3999:
   628  0012D4                     
   629                           ;main.c: 113: keypad->initFunc(1);
   630  0012D4  0E01               	movlw	1
   631  0012D6  6E4A               	movwf	initKp@parameters^0,c
   632  0012D8  0E00               	movlw	0
   633  0012DA  6E4B               	movwf	(initKp@parameters+1)^0,c
   634  0012DC  EE20 F003          	lfsr	2,3
   635  0012E0  5061               	movf	_keypad^0,w,c
   636  0012E2  26D9               	addwf	fsr2l,f,c
   637  0012E4  5062               	movf	(_keypad+1)^0,w,c
   638  0012E6  22DA               	addwfc	fsr2h,f,c
   639  0012E8  D802               	call	u4008
   640  0012EA  EF81  F009         	goto	u4009
   641  0012EE                     u4008:
   642  0012EE  0005               	push	
   643  0012F0  6EFA               	movwf	pclath,c
   644  0012F2  50DE               	movf	postinc2,w,c
   645  0012F4  6EFD               	movwf	tosl,c
   646  0012F6  50DE               	movf	postinc2,w,c
   647  0012F8  6EFE               	movwf	tosh,c
   648  0012FA  50F8               	movf	tblptru,w,c
   649  0012FC  6EFF               	movwf	tosu,c
   650  0012FE  50FA               	movf	pclath,w,c
   651  001300  0012               	return		;indir
   652  001302                     u4009:
   653  001302                     
   654                           ;main.c: 115: process p1 = {disp, 1000, 0};
   655  001302  EE20  F092         	lfsr	2,main@F2429
   656  001306  EE10  F098         	lfsr	1,main@p1
   657  00130A  0E05               	movlw	5
   658  00130C                     u4011:
   659  00130C  CFDB FFE3          	movff	plusw2,plusw1
   660  001310  06E8               	decf	wreg,f,c
   661  001312  E2FC               	bc	u4011
   662  001314                     
   663                           ;main.c: 116: process p2 = {time, 1000, 1};
   664  001314  EE20  F08C         	lfsr	2,main@F2432
   665  001318  EE10  F09E         	lfsr	1,main@p2
   666  00131C  0E05               	movlw	5
   667  00131E                     u4021:
   668  00131E  CFDB FFE3          	movff	plusw2,plusw1
   669  001322  06E8               	decf	wreg,f,c
   670  001324  E2FC               	bc	u4021
   671  001326                     
   672                           ;main.c: 117: process p3 = {db, 2, 4};
   673  001326  EE20  F086         	lfsr	2,main@F2435
   674  00132A  EE10  F0A4         	lfsr	1,main@p3
   675  00132E  0E05               	movlw	5
   676  001330                     u4031:
   677  001330  CFDB FFE3          	movff	plusw2,plusw1
   678  001334  06E8               	decf	wreg,f,c
   679  001336  E2FC               	bc	u4031
   680  001338                     
   681                           ;main.c: 118: process p4 = {press, 10, 3};
   682  001338  EE20  F080         	lfsr	2,main@F2438
   683  00133C  EE10  F0AA         	lfsr	1,main@p4
   684  001340  0E05               	movlw	5
   685  001342                     u4041:
   686  001342  CFDB FFE3          	movff	plusw2,plusw1
   687  001346  06E8               	decf	wreg,f,c
   688  001348  E2FC               	bc	u4041
   689                           
   690                           ;main.c: 120: timerInit();
   691  00134A  EC38  F00D         	call	_timerInit	;wreg free
   692  00134E                     
   693                           ;main.c: 121: kernelInit();
   694  00134E  EC1F  F00D         	call	_kernelInit	;wreg free
   695  001352                     
   696                           ;main.c: 123: kernelAddProc(&p1);
   697  001352  0E98               	movlw	low main@p1
   698  001354  6E50               	movwf	kernelAddProc@newProc^0,c
   699  001356  0E00               	movlw	high main@p1
   700  001358  6E51               	movwf	(kernelAddProc@newProc+1)^0,c
   701  00135A  ECDB  F00A         	call	_kernelAddProc	;wreg free
   702  00135E                     
   703                           ;main.c: 124: kernelAddProc(&p2);
   704  00135E  0E9E               	movlw	low main@p2
   705  001360  6E50               	movwf	kernelAddProc@newProc^0,c
   706  001362  0E00               	movlw	high main@p2
   707  001364  6E51               	movwf	(kernelAddProc@newProc+1)^0,c
   708  001366  ECDB  F00A         	call	_kernelAddProc	;wreg free
   709  00136A                     
   710                           ;main.c: 125: kernelAddProc(&p3);
   711  00136A  0EA4               	movlw	low main@p3
   712  00136C  6E50               	movwf	kernelAddProc@newProc^0,c
   713  00136E  0E00               	movlw	high main@p3
   714  001370  6E51               	movwf	(kernelAddProc@newProc+1)^0,c
   715  001372  ECDB  F00A         	call	_kernelAddProc	;wreg free
   716  001376                     
   717                           ;main.c: 126: kernelAddProc(&p4);
   718  001376  0EAA               	movlw	low main@p4
   719  001378  6E50               	movwf	kernelAddProc@newProc^0,c
   720  00137A  0E00               	movlw	high main@p4
   721  00137C  6E51               	movwf	(kernelAddProc@newProc+1)^0,c
   722  00137E  ECDB  F00A         	call	_kernelAddProc	;wreg free
   723  001382                     
   724                           ;main.c: 129: ((RCON) &= ~(1<<(7)));
   725  001382  9ED0               	bcf	208,7,c	;volatile
   726  001384                     
   727                           ;main.c: 130: ((INTCON) |= (1<<(5)));
   728  001384  8AF2               	bsf	242,5,c	;volatile
   729  001386                     
   730                           ;main.c: 131: ((INTCON) |= (1<<(7)));
   731  001386  8EF2               	bsf	242,7,c	;volatile
   732  001388                     
   733                           ;main.c: 132: ((INTCON) |= (1<<(6)));
   734  001388  8CF2               	bsf	242,6,c	;volatile
   735  00138A                     
   736                           ;main.c: 134: kernelLoop();
   737  00138A  ECAA  F007         	call	_kernelLoop	;wreg free
   738  00138E  EF07  F000         	goto	start
   739  001392                     __end_of_main:
   740                           	callstack 0
   741                           
   742 ;; *************** function _timerInit *****************
   743 ;; Defined at:
   744 ;;		line 51 in file "timer.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   758 ;;      Params:         0       0       0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text1
   773  001A70                     __ptext1:
   774                           	callstack 0
   775  001A70                     _timerInit:
   776                           	callstack 27
   777  001A70                     
   778                           ;timer.c: 53: T0CON = 0b00001000;
   779  001A70  0E08               	movlw	8
   780  001A72  6ED5               	movwf	213,c	;volatile
   781  001A74                     
   782                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   783  001A74  8ED5               	bsf	213,7,c	;volatile
   784  001A76  0012               	return		;funcret
   785  001A78                     __end_of_timerInit:
   786                           	callstack 0
   787                           
   788 ;; *************** function _kernelLoop *****************
   789 ;; Defined at:
   790 ;;		line 24 in file "kernel.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  tempProc        2   42[COMRAM] PTR struct .
   795 ;;		 -> main@p4(6), main@p3(6), main@p2(6), main@p1(6), 
   796 ;;  p               1   45[COMRAM] unsigned char 
   797 ;;  next            1   44[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   807 ;;      Params:         0       0       0       0       0       0       0
   808 ;;      Locals:         4       0       0       0       0       0       0
   809 ;;      Temps:          5       0       0       0       0       0       0
   810 ;;      Totals:         9       0       0       0       0       0       0
   811 ;;Total ram usage:        9 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; Hardware stack levels required when called:    8
   814 ;; This function calls:
   815 ;;		___awmod
   816 ;;		_db
   817 ;;		_disp
   818 ;;		_kernelAddProc
   819 ;;		_press
   820 ;;		_time
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text2
   827  000F54                     __ptext2:
   828                           	callstack 0
   829  000F54                     _kernelLoop:
   830                           	callstack 22
   831  000F54                     l93:
   832  000F54                     
   833                           ;kernel.c: 29: if (start != end) {
   834  000F54  5016               	movf	_end^0,w,c
   835  000F56  1817               	xorwf	_start^0,w,c
   836  000F58  B4D8               	btfsc	status,2,c
   837  000F5A  EFB1  F007         	goto	u3851
   838  000F5E  EFB3  F007         	goto	u3850
   839  000F62                     u3851:
   840  000F62  EFAA  F007         	goto	l93
   841  000F66                     u3850:
   842  000F66                     
   843                           ;kernel.c: 31: next = start;
   844  000F66  C017  F05F         	movff	_start,kernelLoop@next
   845                           
   846                           ;kernel.c: 32: for (p = start; p != end; p = (p + 1) % 10) {
   847  000F6A  C017  F060         	movff	_start,kernelLoop@p
   848  000F6E  EFF4  F007         	goto	l3501
   849  000F72                     l3495:
   850                           
   851                           ;kernel.c: 33: if (pool[p]->start < pool[next]->start) {
   852  000F72  505F               	movf	kernelLoop@next^0,w,c
   853  000F74  0D02               	mullw	2
   854  000F76  0EB0               	movlw	low _pool
   855  000F78  24F3               	addwf	243,w,c
   856  000F7A  6ED9               	movwf	fsr2l,c
   857  000F7C  0E00               	movlw	high _pool
   858  000F7E  20F4               	addwfc	prodh,w,c
   859  000F80  6EDA               	movwf	fsr2h,c
   860  000F82  EE10 F004          	lfsr	1,4
   861  000F86  50DE               	movf	postinc2,w,c
   862  000F88  26E1               	addwf	fsr1l,f,c
   863  000F8A  50DD               	movf	postdec2,w,c
   864  000F8C  22E2               	addwfc	fsr1h,f,c
   865  000F8E  5060               	movf	kernelLoop@p^0,w,c
   866  000F90  0D02               	mullw	2
   867  000F92  0EB0               	movlw	low _pool
   868  000F94  24F3               	addwf	243,w,c
   869  000F96  6ED9               	movwf	fsr2l,c
   870  000F98  0E00               	movlw	high _pool
   871  000F9A  20F4               	addwfc	prodh,w,c
   872  000F9C  6EDA               	movwf	fsr2h,c
   873  000F9E  EE00 F004          	lfsr	0,4
   874  000FA2  50DE               	movf	postinc2,w,c
   875  000FA4  26E9               	addwf	fsr0l,f,c
   876  000FA6  50DD               	movf	postdec2,w,c
   877  000FA8  22EA               	addwfc	fsr0h,f,c
   878  000FAA  50E6               	movf	postinc1,w,c
   879  000FAC  5CEE               	subwf	postinc0,w,c
   880  000FAE  50EE               	movf	postinc0,w,c
   881  000FB0  0A80               	xorlw	128
   882  000FB2  6E5C               	movwf	(??_kernelLoop+4)^0,c
   883  000FB4  50E6               	movf	postinc1,w,c
   884  000FB6  0A80               	xorlw	128
   885  000FB8  585C               	subwfb	(??_kernelLoop+4)^0,w,c
   886  000FBA  B0D8               	btfsc	status,0,c
   887  000FBC  EFE2  F007         	goto	u3861
   888  000FC0  EFE4  F007         	goto	u3860
   889  000FC4                     u3861:
   890  000FC4  EFE6  F007         	goto	l3499
   891  000FC8                     u3860:
   892  000FC8                     
   893                           ;kernel.c: 34: next = p;
   894  000FC8  C060  F05F         	movff	kernelLoop@p,kernelLoop@next
   895  000FCC                     l3499:
   896  000FCC  0E01               	movlw	1
   897  000FCE  2460               	addwf	kernelLoop@p^0,w,c
   898  000FD0  6E4A               	movwf	___awmod@dividend^0,c
   899  000FD2  6A4B               	clrf	(___awmod@dividend+1)^0,c
   900  000FD4  0E00               	movlw	0
   901  000FD6  224B               	addwfc	(___awmod@dividend+1)^0,f,c
   902  000FD8  0E00               	movlw	0
   903  000FDA  6E4D               	movwf	(___awmod@divisor+1)^0,c
   904  000FDC  0E0A               	movlw	10
   905  000FDE  6E4C               	movwf	___awmod@divisor^0,c
   906  000FE0  EC2B  F00A         	call	___awmod	;wreg free
   907  000FE4  504A               	movf	?___awmod^0,w,c
   908  000FE6  6E60               	movwf	kernelLoop@p^0,c
   909  000FE8                     l3501:
   910  000FE8  5016               	movf	_end^0,w,c
   911  000FEA  1860               	xorwf	kernelLoop@p^0,w,c
   912  000FEC  A4D8               	btfss	status,2,c
   913  000FEE  EFFB  F007         	goto	u3871
   914  000FF2  EFFD  F007         	goto	u3870
   915  000FF6                     u3871:
   916  000FF6  EFB9  F007         	goto	l3495
   917  000FFA                     u3870:
   918  000FFA                     
   919                           ;kernel.c: 35: };kernel.c: 36: };kernel.c: 38: tempProc = pool[next];
   920  000FFA  505F               	movf	kernelLoop@next^0,w,c
   921  000FFC  0D02               	mullw	2
   922  000FFE  0EB0               	movlw	low _pool
   923  001000  24F3               	addwf	243,w,c
   924  001002  6ED9               	movwf	fsr2l,c
   925  001004  0E00               	movlw	high _pool
   926  001006  20F4               	addwfc	prodh,w,c
   927  001008  6EDA               	movwf	fsr2h,c
   928  00100A  CFDE F05D          	movff	postinc2,kernelLoop@tempProc
   929  00100E  CFDD F05E          	movff	postdec2,kernelLoop@tempProc+1
   930  001012                     
   931                           ;kernel.c: 39: pool[next] = pool[start];
   932  001012  5017               	movf	_start^0,w,c
   933  001014  0D02               	mullw	2
   934  001016  0EB0               	movlw	low _pool
   935  001018  24F3               	addwf	243,w,c
   936  00101A  6ED9               	movwf	fsr2l,c
   937  00101C  0E00               	movlw	high _pool
   938  00101E  20F4               	addwfc	prodh,w,c
   939  001020  6EDA               	movwf	fsr2h,c
   940  001022  505F               	movf	kernelLoop@next^0,w,c
   941  001024  0D02               	mullw	2
   942  001026  0EB0               	movlw	low _pool
   943  001028  24F3               	addwf	243,w,c
   944  00102A  6EE1               	movwf	fsr1l,c
   945  00102C  0E00               	movlw	high _pool
   946  00102E  20F4               	addwfc	prodh,w,c
   947  001030  6EE2               	movwf	fsr1h,c
   948  001032  CFDE FFE6          	movff	postinc2,postinc1
   949  001036  CFDD FFE5          	movff	postdec2,postdec1
   950  00103A                     
   951                           ;kernel.c: 40: pool[start] = tempProc;
   952  00103A  5017               	movf	_start^0,w,c
   953  00103C  0D02               	mullw	2
   954  00103E  0EB0               	movlw	low _pool
   955  001040  24F3               	addwf	243,w,c
   956  001042  6ED9               	movwf	fsr2l,c
   957  001044  0E00               	movlw	high _pool
   958  001046  20F4               	addwfc	prodh,w,c
   959  001048  6EDA               	movwf	fsr2h,c
   960  00104A  C05D  FFDE         	movff	kernelLoop@tempProc,postinc2
   961  00104E  C05E  FFDD         	movff	kernelLoop@tempProc+1,postdec2
   962  001052                     l3509:
   963  001052  5017               	movf	_start^0,w,c
   964  001054  0D02               	mullw	2
   965  001056  0EB0               	movlw	low _pool
   966  001058  24F3               	addwf	243,w,c
   967  00105A  6ED9               	movwf	fsr2l,c
   968  00105C  0E00               	movlw	high _pool
   969  00105E  20F4               	addwfc	prodh,w,c
   970  001060  6EDA               	movwf	fsr2h,c
   971  001062  EE10 F004          	lfsr	1,4
   972  001066  50DE               	movf	postinc2,w,c
   973  001068  26E1               	addwf	fsr1l,f,c
   974  00106A  50DD               	movf	postdec2,w,c
   975  00106C  22E2               	addwfc	fsr1h,f,c
   976  00106E  0E01               	movlw	1
   977  001070  BEE3               	btfsc	plusw1,7,c
   978  001072  EF46  F008         	goto	u3880
   979  001076  0E01               	movlw	1
   980  001078  50E3               	movf	plusw1,w,c
   981  00107A  E106               	bnz	u3881
   982  00107C  04E6               	decf	postinc1,w,c
   983  00107E  B0D8               	btfsc	status,0,c
   984  001080  EF44  F008         	goto	u3881
   985  001084  EF46  F008         	goto	u3880
   986  001088                     u3881:
   987  001088  EF29  F008         	goto	l3509
   988  00108C                     u3880:
   989  00108C                     
   990                           ;kernel.c: 45: };kernel.c: 46: if (pool[start]->function() == 2) {
   991  00108C  5017               	movf	_start^0,w,c
   992  00108E  0D02               	mullw	2
   993  001090  0EB0               	movlw	low _pool
   994  001092  24F3               	addwf	243,w,c
   995  001094  6ED9               	movwf	fsr2l,c
   996  001096  0E00               	movlw	high _pool
   997  001098  20F4               	addwfc	prodh,w,c
   998  00109A  6EDA               	movwf	fsr2h,c
   999  00109C  CFDE F058          	movff	postinc2,??_kernelLoop
  1000  0010A0  CFDD F059          	movff	postdec2,??_kernelLoop+1
  1001  0010A4  C058  FFD9         	movff	??_kernelLoop,fsr2l
  1002  0010A8  C059  FFDA         	movff	??_kernelLoop+1,fsr2h
  1003  0010AC  D802               	call	u3898
  1004  0010AE  EF63  F008         	goto	u3899
  1005  0010B2                     u3898:
  1006  0010B2  0005               	push	
  1007  0010B4  6EFA               	movwf	pclath,c
  1008  0010B6  50DE               	movf	postinc2,w,c
  1009  0010B8  6EFD               	movwf	tosl,c
  1010  0010BA  50DE               	movf	postinc2,w,c
  1011  0010BC  6EFE               	movwf	tosh,c
  1012  0010BE  50F8               	movf	tblptru,w,c
  1013  0010C0  6EFF               	movwf	tosu,c
  1014  0010C2  50FA               	movf	pclath,w,c
  1015  0010C4  0012               	return		;indir
  1016  0010C6                     u3899:
  1017  0010C6  0A02               	xorlw	2
  1018  0010C8  A4D8               	btfss	status,2,c
  1019  0010CA  EF69  F008         	goto	u3901
  1020  0010CE  EF6B  F008         	goto	u3900
  1021  0010D2                     u3901:
  1022  0010D2  EF79  F008         	goto	l3515
  1023  0010D6                     u3900:
  1024  0010D6                     
  1025                           ;kernel.c: 47: kernelAddProc(pool[start]);
  1026  0010D6  5017               	movf	_start^0,w,c
  1027  0010D8  0D02               	mullw	2
  1028  0010DA  0EB0               	movlw	low _pool
  1029  0010DC  24F3               	addwf	243,w,c
  1030  0010DE  6ED9               	movwf	fsr2l,c
  1031  0010E0  0E00               	movlw	high _pool
  1032  0010E2  20F4               	addwfc	prodh,w,c
  1033  0010E4  6EDA               	movwf	fsr2h,c
  1034  0010E6  CFDE F050          	movff	postinc2,kernelAddProc@newProc
  1035  0010EA  CFDD F051          	movff	postdec2,kernelAddProc@newProc+1
  1036  0010EE  ECDB  F00A         	call	_kernelAddProc	;wreg free
  1037  0010F2                     l3515:
  1038                           
  1039                           ;kernel.c: 48: };kernel.c: 49: start = (start + 1) % 10;
  1040  0010F2  0E01               	movlw	1
  1041  0010F4  2417               	addwf	_start^0,w,c
  1042  0010F6  6E4A               	movwf	___awmod@dividend^0,c
  1043  0010F8  6A4B               	clrf	(___awmod@dividend+1)^0,c
  1044  0010FA  0E00               	movlw	0
  1045  0010FC  224B               	addwfc	(___awmod@dividend+1)^0,f,c
  1046  0010FE  0E00               	movlw	0
  1047  001100  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1048  001102  0E0A               	movlw	10
  1049  001104  6E4C               	movwf	___awmod@divisor^0,c
  1050  001106  EC2B  F00A         	call	___awmod	;wreg free
  1051  00110A  504A               	movf	?___awmod^0,w,c
  1052  00110C  6E17               	movwf	_start^0,c
  1053  00110E  EFAA  F007         	goto	l93
  1054  001112  0012               	return		;funcret
  1055  001114                     __end_of_kernelLoop:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _press *****************
  1059 ;; Defined at:
  1060 ;;		line 61 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  value           2   35[COMRAM] PTR unsigned int 
  1065 ;;		 -> press@x(2), 
  1066 ;;  x               2   33[COMRAM] unsigned int 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      unsigned char 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1076 ;;      Params:         0       0       0       0       0       0       0
  1077 ;;      Locals:         4       0       0       0       0       0       0
  1078 ;;      Temps:          2       0       0       0       0       0       0
  1079 ;;      Totals:         6       0       0       0       0       0       0
  1080 ;;Total ram usage:        6 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    7
  1083 ;; This function calls:
  1084 ;;		_changePORTD
  1085 ;;		_cmd
  1086 ;;		_data
  1087 ;;		_debounce
  1088 ;;		_inverte
  1089 ;;		_read
  1090 ;; This function is called by:
  1091 ;;		_kernelLoop
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096  000D6C                     __ptext3:
  1097                           	callstack 0
  1098  000D6C                     _press:
  1099                           	callstack 22
  1100  000D6C                     
  1101                           ;main.c: 63: unsigned int *value;;main.c: 64: unsigned int x;;main.c: 65: value = &x;
  1102  000D6C  0E54               	movlw	low press@x
  1103  000D6E  6E56               	movwf	press@value^0,c
  1104  000D70  0E00               	movlw	high press@x
  1105  000D72  6E57               	movwf	(press@value+1)^0,c
  1106  000D74                     
  1107                           ;main.c: 67: keypad->funcoes[KP_READ](&value);
  1108  000D74  0E56               	movlw	low press@value
  1109  000D76  6E50               	movwf	read@parameters^0,c
  1110  000D78  0E00               	movlw	high press@value
  1111  000D7A  6E51               	movwf	(read@parameters+1)^0,c
  1112  000D7C  EE20 F001          	lfsr	2,1
  1113  000D80  5061               	movf	_keypad^0,w,c
  1114  000D82  26D9               	addwf	fsr2l,f,c
  1115  000D84  5062               	movf	(_keypad+1)^0,w,c
  1116  000D86  22DA               	addwfc	fsr2h,f,c
  1117  000D88  CFDE F052          	movff	postinc2,??_press
  1118  000D8C  CFDD F053          	movff	postdec2,??_press+1
  1119  000D90  C052  FFD9         	movff	??_press,fsr2l
  1120  000D94  C053  FFDA         	movff	??_press+1,fsr2h
  1121  000D98  D802               	call	u3598
  1122  000D9A  EFD9  F006         	goto	u3599
  1123  000D9E                     u3598:
  1124  000D9E  0005               	push	
  1125  000DA0  6EFA               	movwf	pclath,c
  1126  000DA2  50DE               	movf	postinc2,w,c
  1127  000DA4  6EFD               	movwf	tosl,c
  1128  000DA6  50DE               	movf	postinc2,w,c
  1129  000DA8  6EFE               	movwf	tosh,c
  1130  000DAA  50F8               	movf	tblptru,w,c
  1131  000DAC  6EFF               	movwf	tosu,c
  1132  000DAE  50FA               	movf	pclath,w,c
  1133  000DB0  0012               	return		;indir
  1134  000DB2                     u3599:
  1135  000DB2                     
  1136                           ;main.c: 68: if (*value == 2){
  1137  000DB2  C056  FFD9         	movff	press@value,fsr2l
  1138  000DB6  C057  FFDA         	movff	press@value+1,fsr2h
  1139  000DBA  0E02               	movlw	2
  1140  000DBC  18DE               	xorwf	postinc2,w,c
  1141  000DBE  10DE               	iorwf	postinc2,w,c
  1142  000DC0  A4D8               	btfss	status,2,c
  1143  000DC2  EFE5  F006         	goto	u3601
  1144  000DC6  EFE7  F006         	goto	u3600
  1145  000DCA                     u3601:
  1146  000DCA  EFFB  F006         	goto	l3327
  1147  000DCE                     u3600:
  1148  000DCE                     
  1149                           ;main.c: 69: count++;
  1150  000DCE  4A0D               	infsnz	_count^0,f,c
  1151  000DD0  2A0E               	incf	(_count+1)^0,f,c
  1152  000DD2                     
  1153                           ;main.c: 70: if (hour > 23){
  1154  000DD2  BE08               	btfsc	(_hour+1)^0,7,c
  1155  000DD4  EFF5  F006         	goto	u3611
  1156  000DD8  5008               	movf	(_hour+1)^0,w,c
  1157  000DDA  E109               	bnz	u3610
  1158  000DDC  0E18               	movlw	24
  1159  000DDE  5C07               	subwf	_hour^0,w,c
  1160  000DE0  A0D8               	btfss	status,0,c
  1161  000DE2  EFF5  F006         	goto	u3611
  1162  000DE6  EFF7  F006         	goto	u3610
  1163  000DEA                     u3611:
  1164  000DEA  EFFB  F006         	goto	l3327
  1165  000DEE                     u3610:
  1166  000DEE                     
  1167                           ;main.c: 71: hour = 0;
  1168  000DEE  0E00               	movlw	0
  1169  000DF0  6E08               	movwf	(_hour+1)^0,c
  1170  000DF2  0E00               	movlw	0
  1171  000DF4  6E07               	movwf	_hour^0,c
  1172  000DF6                     l3327:
  1173                           
  1174                           ;main.c: 72: };main.c: 73: };main.c: 74: if (*value == 32){
  1175  000DF6  C056  FFD9         	movff	press@value,fsr2l
  1176  000DFA  C057  FFDA         	movff	press@value+1,fsr2h
  1177  000DFE  0E20               	movlw	32
  1178  000E00  18DE               	xorwf	postinc2,w,c
  1179  000E02  10DE               	iorwf	postinc2,w,c
  1180  000E04  A4D8               	btfss	status,2,c
  1181  000E06  EF07  F007         	goto	u3621
  1182  000E0A  EF09  F007         	goto	u3620
  1183  000E0E                     u3621:
  1184  000E0E  EF1D  F007         	goto	l3335
  1185  000E12                     u3620:
  1186  000E12                     
  1187                           ;main.c: 75: count++;
  1188  000E12  4A0D               	infsnz	_count^0,f,c
  1189  000E14  2A0E               	incf	(_count+1)^0,f,c
  1190  000E16                     
  1191                           ;main.c: 76: if (minute > 59){
  1192  000E16  BE0A               	btfsc	(_minute+1)^0,7,c
  1193  000E18  EF17  F007         	goto	u3631
  1194  000E1C  500A               	movf	(_minute+1)^0,w,c
  1195  000E1E  E109               	bnz	u3630
  1196  000E20  0E3C               	movlw	60
  1197  000E22  5C09               	subwf	_minute^0,w,c
  1198  000E24  A0D8               	btfss	status,0,c
  1199  000E26  EF17  F007         	goto	u3631
  1200  000E2A  EF19  F007         	goto	u3630
  1201  000E2E                     u3631:
  1202  000E2E  EF1D  F007         	goto	l3335
  1203  000E32                     u3630:
  1204  000E32                     
  1205                           ;main.c: 77: minute = 0;
  1206  000E32  0E00               	movlw	0
  1207  000E34  6E0A               	movwf	(_minute+1)^0,c
  1208  000E36  0E00               	movlw	0
  1209  000E38  6E09               	movwf	_minute^0,c
  1210  000E3A                     l3335:
  1211                           
  1212                           ;main.c: 78: };main.c: 79: };main.c: 80: if (*value == 512){
  1213  000E3A  C056  FFD9         	movff	press@value,fsr2l
  1214  000E3E  C057  FFDA         	movff	press@value+1,fsr2h
  1215  000E42  50DE               	movf	postinc2,w,c
  1216  000E44  E107               	bnz	u3641
  1217  000E46  0E02               	movlw	2
  1218  000E48  18DE               	xorwf	postinc2,w,c
  1219  000E4A  A4D8               	btfss	status,2,c
  1220  000E4C  EF2A  F007         	goto	u3641
  1221  000E50  EF2C  F007         	goto	u3640
  1222  000E54                     u3641:
  1223  000E54  EF40  F007         	goto	l3343
  1224  000E58                     u3640:
  1225  000E58                     
  1226                           ;main.c: 81: count++;
  1227  000E58  4A0D               	infsnz	_count^0,f,c
  1228  000E5A  2A0E               	incf	(_count+1)^0,f,c
  1229  000E5C                     
  1230                           ;main.c: 82: if (second > 59){
  1231  000E5C  BE0C               	btfsc	(_second+1)^0,7,c
  1232  000E5E  EF3A  F007         	goto	u3651
  1233  000E62  500C               	movf	(_second+1)^0,w,c
  1234  000E64  E109               	bnz	u3650
  1235  000E66  0E3C               	movlw	60
  1236  000E68  5C0B               	subwf	_second^0,w,c
  1237  000E6A  A0D8               	btfss	status,0,c
  1238  000E6C  EF3A  F007         	goto	u3651
  1239  000E70  EF3C  F007         	goto	u3650
  1240  000E74                     u3651:
  1241  000E74  EF40  F007         	goto	l3343
  1242  000E78                     u3650:
  1243  000E78                     
  1244                           ;main.c: 83: second = 0;
  1245  000E78  0E00               	movlw	0
  1246  000E7A  6E0C               	movwf	(_second+1)^0,c
  1247  000E7C  0E00               	movlw	0
  1248  000E7E  6E0B               	movwf	_second^0,c
  1249  000E80                     l3343:
  1250                           
  1251                           ;main.c: 84: };main.c: 85: };main.c: 86: if (*value == 1){
  1252  000E80  C056  FFD9         	movff	press@value,fsr2l
  1253  000E84  C057  FFDA         	movff	press@value+1,fsr2h
  1254  000E88  04DE               	decf	postinc2,w,c
  1255  000E8A  10DE               	iorwf	postinc2,w,c
  1256  000E8C  A4D8               	btfss	status,2,c
  1257  000E8E  EF4B  F007         	goto	u3661
  1258  000E92  EF4D  F007         	goto	u3660
  1259  000E96                     u3661:
  1260  000E96  EF62  F007         	goto	l3351
  1261  000E9A                     u3660:
  1262  000E9A                     
  1263                           ;main.c: 87: count--;
  1264  000E9A  060D               	decf	_count^0,f,c
  1265  000E9C  A0D8               	btfss	status,0,c
  1266  000E9E  060E               	decf	(_count+1)^0,f,c
  1267  000EA0                     
  1268                           ;main.c: 88: if (hour > 23){
  1269  000EA0  BE08               	btfsc	(_hour+1)^0,7,c
  1270  000EA2  EF5C  F007         	goto	u3671
  1271  000EA6  5008               	movf	(_hour+1)^0,w,c
  1272  000EA8  E109               	bnz	u3670
  1273  000EAA  0E18               	movlw	24
  1274  000EAC  5C07               	subwf	_hour^0,w,c
  1275  000EAE  A0D8               	btfss	status,0,c
  1276  000EB0  EF5C  F007         	goto	u3671
  1277  000EB4  EF5E  F007         	goto	u3670
  1278  000EB8                     u3671:
  1279  000EB8  EF62  F007         	goto	l3351
  1280  000EBC                     u3670:
  1281  000EBC                     
  1282                           ;main.c: 89: hour = 23;
  1283  000EBC  0E00               	movlw	0
  1284  000EBE  6E08               	movwf	(_hour+1)^0,c
  1285  000EC0  0E17               	movlw	23
  1286  000EC2  6E07               	movwf	_hour^0,c
  1287  000EC4                     l3351:
  1288                           
  1289                           ;main.c: 90: };main.c: 91: };main.c: 92: if (*value == 16){
  1290  000EC4  C056  FFD9         	movff	press@value,fsr2l
  1291  000EC8  C057  FFDA         	movff	press@value+1,fsr2h
  1292  000ECC  0E10               	movlw	16
  1293  000ECE  18DE               	xorwf	postinc2,w,c
  1294  000ED0  10DE               	iorwf	postinc2,w,c
  1295  000ED2  A4D8               	btfss	status,2,c
  1296  000ED4  EF6E  F007         	goto	u3681
  1297  000ED8  EF70  F007         	goto	u3680
  1298  000EDC                     u3681:
  1299  000EDC  EF85  F007         	goto	l3359
  1300  000EE0                     u3680:
  1301  000EE0                     
  1302                           ;main.c: 93: count--;
  1303  000EE0  060D               	decf	_count^0,f,c
  1304  000EE2  A0D8               	btfss	status,0,c
  1305  000EE4  060E               	decf	(_count+1)^0,f,c
  1306  000EE6                     
  1307                           ;main.c: 94: if (minute > 60){
  1308  000EE6  BE0A               	btfsc	(_minute+1)^0,7,c
  1309  000EE8  EF7F  F007         	goto	u3691
  1310  000EEC  500A               	movf	(_minute+1)^0,w,c
  1311  000EEE  E109               	bnz	u3690
  1312  000EF0  0E3D               	movlw	61
  1313  000EF2  5C09               	subwf	_minute^0,w,c
  1314  000EF4  A0D8               	btfss	status,0,c
  1315  000EF6  EF7F  F007         	goto	u3691
  1316  000EFA  EF81  F007         	goto	u3690
  1317  000EFE                     u3691:
  1318  000EFE  EF85  F007         	goto	l3359
  1319  000F02                     u3690:
  1320  000F02                     
  1321                           ;main.c: 95: minute = 60;
  1322  000F02  0E00               	movlw	0
  1323  000F04  6E0A               	movwf	(_minute+1)^0,c
  1324  000F06  0E3C               	movlw	60
  1325  000F08  6E09               	movwf	_minute^0,c
  1326  000F0A                     l3359:
  1327                           
  1328                           ;main.c: 96: };main.c: 97: };main.c: 98: if (*value == 256){
  1329  000F0A  C056  FFD9         	movff	press@value,fsr2l
  1330  000F0E  C057  FFDA         	movff	press@value+1,fsr2h
  1331  000F12  50DE               	movf	postinc2,w,c
  1332  000F14  E106               	bnz	u3701
  1333  000F16  04DE               	decf	postinc2,w,c
  1334  000F18  A4D8               	btfss	status,2,c
  1335  000F1A  EF91  F007         	goto	u3701
  1336  000F1E  EF93  F007         	goto	u3700
  1337  000F22                     u3701:
  1338  000F22  EFA8  F007         	goto	l3367
  1339  000F26                     u3700:
  1340  000F26                     
  1341                           ;main.c: 99: count--;
  1342  000F26  060D               	decf	_count^0,f,c
  1343  000F28  A0D8               	btfss	status,0,c
  1344  000F2A  060E               	decf	(_count+1)^0,f,c
  1345  000F2C                     
  1346                           ;main.c: 100: if (second > 60){
  1347  000F2C  BE0C               	btfsc	(_second+1)^0,7,c
  1348  000F2E  EFA2  F007         	goto	u3711
  1349  000F32  500C               	movf	(_second+1)^0,w,c
  1350  000F34  E109               	bnz	u3710
  1351  000F36  0E3D               	movlw	61
  1352  000F38  5C0B               	subwf	_second^0,w,c
  1353  000F3A  A0D8               	btfss	status,0,c
  1354  000F3C  EFA2  F007         	goto	u3711
  1355  000F40  EFA4  F007         	goto	u3710
  1356  000F44                     u3711:
  1357  000F44  EFA8  F007         	goto	l3367
  1358  000F48                     u3710:
  1359  000F48                     
  1360                           ;main.c: 101: second = 60;
  1361  000F48  0E00               	movlw	0
  1362  000F4A  6E0C               	movwf	(_second+1)^0,c
  1363  000F4C  0E3C               	movlw	60
  1364  000F4E  6E0B               	movwf	_second^0,c
  1365  000F50                     l3367:
  1366                           
  1367                           ;main.c: 102: };main.c: 103: };main.c: 104: return 2;
  1368  000F50  0E02               	movlw	2
  1369  000F52  0012               	return		;funcret
  1370  000F54                     __end_of_press:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _db *****************
  1374 ;; Defined at:
  1375 ;;		line 56 in file "main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      unsigned char 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1389 ;;      Params:         0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    7
  1396 ;; This function calls:
  1397 ;;		_changePORTD
  1398 ;;		_cmd
  1399 ;;		_data
  1400 ;;		_debounce
  1401 ;;		_inverte
  1402 ;;		_read
  1403 ;; This function is called by:
  1404 ;;		_kernelLoop
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text4
  1409  001940                     __ptext4:
  1410                           	callstack 0
  1411  001940                     _db:
  1412                           	callstack 22
  1413  001940                     
  1414                           ;main.c: 57: keypad->funcoes[KP_DB](0);
  1415  001940  0E00               	movlw	0
  1416  001942  6E50               	movwf	read@parameters^0,c
  1417  001944  0E00               	movlw	0
  1418  001946  6E51               	movwf	(read@parameters+1)^0,c
  1419  001948  EE20 F001          	lfsr	2,1
  1420  00194C  5061               	movf	_keypad^0,w,c
  1421  00194E  26D9               	addwf	fsr2l,f,c
  1422  001950  5062               	movf	(_keypad+1)^0,w,c
  1423  001952  22DA               	addwfc	fsr2h,f,c
  1424  001954  EE10 F002          	lfsr	1,2
  1425  001958  50DE               	movf	postinc2,w,c
  1426  00195A  26E1               	addwf	fsr1l,f,c
  1427  00195C  50DD               	movf	postdec2,w,c
  1428  00195E  22E2               	addwfc	fsr1h,f,c
  1429  001960  D802               	call	u3588
  1430  001962  EFBD  F00C         	goto	u3589
  1431  001966                     u3588:
  1432  001966  0005               	push	
  1433  001968  6EFA               	movwf	pclath,c
  1434  00196A  50E6               	movf	postinc1,w,c
  1435  00196C  6EFD               	movwf	tosl,c
  1436  00196E  50E6               	movf	postinc1,w,c
  1437  001970  6EFE               	movwf	tosh,c
  1438  001972  50F8               	movf	tblptru,w,c
  1439  001974  6EFF               	movwf	tosu,c
  1440  001976  50FA               	movf	pclath,w,c
  1441  001978  0012               	return		;indir
  1442  00197A                     u3589:
  1443  00197A                     
  1444                           ;main.c: 58: return 2;
  1445  00197A  0E02               	movlw	2
  1446  00197C  0012               	return		;funcret
  1447  00197E                     __end_of_db:
  1448                           	callstack 0
  1449                           
  1450 ;; *************** function _disp *****************
  1451 ;; Defined at:
  1452 ;;		line 34 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      unsigned char 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1466 ;;      Params:         0       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0
  1468 ;;      Temps:          2       0       0       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    7
  1473 ;; This function calls:
  1474 ;;		___awdiv
  1475 ;;		___awmod
  1476 ;;		_changePORTD
  1477 ;;		_cmd
  1478 ;;		_data
  1479 ;;		_debounce
  1480 ;;		_inverte
  1481 ;;		_read
  1482 ;; This function is called by:
  1483 ;;		_kernelLoop
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text5
  1488  000612                     __ptext5:
  1489                           	callstack 0
  1490  000612                     _disp:
  1491                           	callstack 22
  1492  000612                     
  1493                           ;main.c: 35: lcd->funcoes[LCD_CMD](0x80);
  1494  000612  0E80               	movlw	128
  1495  000614  6E50               	movwf	read@parameters^0,c
  1496  000616  0E00               	movlw	0
  1497  000618  6E51               	movwf	(read@parameters+1)^0,c
  1498  00061A  EE20 F001          	lfsr	2,1
  1499  00061E  5063               	movf	_lcd^0,w,c
  1500  000620  26D9               	addwf	fsr2l,f,c
  1501  000622  5064               	movf	(_lcd+1)^0,w,c
  1502  000624  22DA               	addwfc	fsr2h,f,c
  1503  000626  EE10 F002          	lfsr	1,2
  1504  00062A  50DE               	movf	postinc2,w,c
  1505  00062C  26E1               	addwf	fsr1l,f,c
  1506  00062E  50DD               	movf	postdec2,w,c
  1507  000630  22E2               	addwfc	fsr1h,f,c
  1508  000632  D802               	call	u3498
  1509  000634  EF26  F003         	goto	u3499
  1510  000638                     u3498:
  1511  000638  0005               	push	
  1512  00063A  6EFA               	movwf	pclath,c
  1513  00063C  50E6               	movf	postinc1,w,c
  1514  00063E  6EFD               	movwf	tosl,c
  1515  000640  50E6               	movf	postinc1,w,c
  1516  000642  6EFE               	movwf	tosh,c
  1517  000644  50F8               	movf	tblptru,w,c
  1518  000646  6EFF               	movwf	tosu,c
  1519  000648  50FA               	movf	pclath,w,c
  1520  00064A  0012               	return		;indir
  1521  00064C                     u3499:
  1522  00064C                     
  1523                           ;main.c: 36: lcd->funcoes[LCD_DATA](48 + (hour/10));
  1524  00064C  C007  F042         	movff	_hour,___awdiv@dividend
  1525  000650  C008  F043         	movff	_hour+1,___awdiv@dividend+1
  1526  000654  0E00               	movlw	0
  1527  000656  6E45               	movwf	(___awdiv@divisor+1)^0,c
  1528  000658  0E0A               	movlw	10
  1529  00065A  6E44               	movwf	___awdiv@divisor^0,c
  1530  00065C  ECC9  F009         	call	___awdiv	;wreg free
  1531  000660  0E30               	movlw	48
  1532  000662  2442               	addwf	?___awdiv^0,w,c
  1533  000664  6E50               	movwf	read@parameters^0,c
  1534  000666  0E00               	movlw	0
  1535  000668  2043               	addwfc	(?___awdiv+1)^0,w,c
  1536  00066A  6E51               	movwf	(read@parameters+1)^0,c
  1537  00066C  EE20 F001          	lfsr	2,1
  1538  000670  5063               	movf	_lcd^0,w,c
  1539  000672  26D9               	addwf	fsr2l,f,c
  1540  000674  5064               	movf	(_lcd+1)^0,w,c
  1541  000676  22DA               	addwfc	fsr2h,f,c
  1542  000678  CFDE F052          	movff	postinc2,??_disp
  1543  00067C  CFDD F053          	movff	postdec2,??_disp+1
  1544  000680  C052  FFD9         	movff	??_disp,fsr2l
  1545  000684  C053  FFDA         	movff	??_disp+1,fsr2h
  1546  000688  D802               	call	u3508
  1547  00068A  EF51  F003         	goto	u3509
  1548  00068E                     u3508:
  1549  00068E  0005               	push	
  1550  000690  6EFA               	movwf	pclath,c
  1551  000692  50DE               	movf	postinc2,w,c
  1552  000694  6EFD               	movwf	tosl,c
  1553  000696  50DE               	movf	postinc2,w,c
  1554  000698  6EFE               	movwf	tosh,c
  1555  00069A  50F8               	movf	tblptru,w,c
  1556  00069C  6EFF               	movwf	tosu,c
  1557  00069E  50FA               	movf	pclath,w,c
  1558  0006A0  0012               	return		;indir
  1559  0006A2                     u3509:
  1560  0006A2                     
  1561                           ;main.c: 37: lcd->funcoes[LCD_DATA](48 + (hour%10));
  1562  0006A2  C007  F04A         	movff	_hour,___awmod@dividend
  1563  0006A6  C008  F04B         	movff	_hour+1,___awmod@dividend+1
  1564  0006AA  0E00               	movlw	0
  1565  0006AC  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1566  0006AE  0E0A               	movlw	10
  1567  0006B0  6E4C               	movwf	___awmod@divisor^0,c
  1568  0006B2  EC2B  F00A         	call	___awmod	;wreg free
  1569  0006B6  0E30               	movlw	48
  1570  0006B8  244A               	addwf	?___awmod^0,w,c
  1571  0006BA  6E50               	movwf	read@parameters^0,c
  1572  0006BC  0E00               	movlw	0
  1573  0006BE  204B               	addwfc	(?___awmod+1)^0,w,c
  1574  0006C0  6E51               	movwf	(read@parameters+1)^0,c
  1575  0006C2  EE20 F001          	lfsr	2,1
  1576  0006C6  5063               	movf	_lcd^0,w,c
  1577  0006C8  26D9               	addwf	fsr2l,f,c
  1578  0006CA  5064               	movf	(_lcd+1)^0,w,c
  1579  0006CC  22DA               	addwfc	fsr2h,f,c
  1580  0006CE  CFDE F052          	movff	postinc2,??_disp
  1581  0006D2  CFDD F053          	movff	postdec2,??_disp+1
  1582  0006D6  C052  FFD9         	movff	??_disp,fsr2l
  1583  0006DA  C053  FFDA         	movff	??_disp+1,fsr2h
  1584  0006DE  D802               	call	u3518
  1585  0006E0  EF7C  F003         	goto	u3519
  1586  0006E4                     u3518:
  1587  0006E4  0005               	push	
  1588  0006E6  6EFA               	movwf	pclath,c
  1589  0006E8  50DE               	movf	postinc2,w,c
  1590  0006EA  6EFD               	movwf	tosl,c
  1591  0006EC  50DE               	movf	postinc2,w,c
  1592  0006EE  6EFE               	movwf	tosh,c
  1593  0006F0  50F8               	movf	tblptru,w,c
  1594  0006F2  6EFF               	movwf	tosu,c
  1595  0006F4  50FA               	movf	pclath,w,c
  1596  0006F6  0012               	return		;indir
  1597  0006F8                     u3519:
  1598  0006F8                     
  1599                           ;main.c: 38: lcd->funcoes[LCD_DATA](':');
  1600  0006F8  0E3A               	movlw	58
  1601  0006FA  6E50               	movwf	read@parameters^0,c
  1602  0006FC  0E00               	movlw	0
  1603  0006FE  6E51               	movwf	(read@parameters+1)^0,c
  1604  000700  EE20 F001          	lfsr	2,1
  1605  000704  5063               	movf	_lcd^0,w,c
  1606  000706  26D9               	addwf	fsr2l,f,c
  1607  000708  5064               	movf	(_lcd+1)^0,w,c
  1608  00070A  22DA               	addwfc	fsr2h,f,c
  1609  00070C  CFDE F052          	movff	postinc2,??_disp
  1610  000710  CFDD F053          	movff	postdec2,??_disp+1
  1611  000714  C052  FFD9         	movff	??_disp,fsr2l
  1612  000718  C053  FFDA         	movff	??_disp+1,fsr2h
  1613  00071C  D802               	call	u3528
  1614  00071E  EF9B  F003         	goto	u3529
  1615  000722                     u3528:
  1616  000722  0005               	push	
  1617  000724  6EFA               	movwf	pclath,c
  1618  000726  50DE               	movf	postinc2,w,c
  1619  000728  6EFD               	movwf	tosl,c
  1620  00072A  50DE               	movf	postinc2,w,c
  1621  00072C  6EFE               	movwf	tosh,c
  1622  00072E  50F8               	movf	tblptru,w,c
  1623  000730  6EFF               	movwf	tosu,c
  1624  000732  50FA               	movf	pclath,w,c
  1625  000734  0012               	return		;indir
  1626  000736                     u3529:
  1627  000736                     
  1628                           ;main.c: 39: lcd->funcoes[LCD_DATA](48 + (minute/10));
  1629  000736  C009  F042         	movff	_minute,___awdiv@dividend
  1630  00073A  C00A  F043         	movff	_minute+1,___awdiv@dividend+1
  1631  00073E  0E00               	movlw	0
  1632  000740  6E45               	movwf	(___awdiv@divisor+1)^0,c
  1633  000742  0E0A               	movlw	10
  1634  000744  6E44               	movwf	___awdiv@divisor^0,c
  1635  000746  ECC9  F009         	call	___awdiv	;wreg free
  1636  00074A  0E30               	movlw	48
  1637  00074C  2442               	addwf	?___awdiv^0,w,c
  1638  00074E  6E50               	movwf	read@parameters^0,c
  1639  000750  0E00               	movlw	0
  1640  000752  2043               	addwfc	(?___awdiv+1)^0,w,c
  1641  000754  6E51               	movwf	(read@parameters+1)^0,c
  1642  000756  EE20 F001          	lfsr	2,1
  1643  00075A  5063               	movf	_lcd^0,w,c
  1644  00075C  26D9               	addwf	fsr2l,f,c
  1645  00075E  5064               	movf	(_lcd+1)^0,w,c
  1646  000760  22DA               	addwfc	fsr2h,f,c
  1647  000762  CFDE F052          	movff	postinc2,??_disp
  1648  000766  CFDD F053          	movff	postdec2,??_disp+1
  1649  00076A  C052  FFD9         	movff	??_disp,fsr2l
  1650  00076E  C053  FFDA         	movff	??_disp+1,fsr2h
  1651  000772  D802               	call	u3538
  1652  000774  EFC6  F003         	goto	u3539
  1653  000778                     u3538:
  1654  000778  0005               	push	
  1655  00077A  6EFA               	movwf	pclath,c
  1656  00077C  50DE               	movf	postinc2,w,c
  1657  00077E  6EFD               	movwf	tosl,c
  1658  000780  50DE               	movf	postinc2,w,c
  1659  000782  6EFE               	movwf	tosh,c
  1660  000784  50F8               	movf	tblptru,w,c
  1661  000786  6EFF               	movwf	tosu,c
  1662  000788  50FA               	movf	pclath,w,c
  1663  00078A  0012               	return		;indir
  1664  00078C                     u3539:
  1665  00078C                     
  1666                           ;main.c: 40: lcd->funcoes[LCD_DATA](48 + (minute%10));
  1667  00078C  C009  F04A         	movff	_minute,___awmod@dividend
  1668  000790  C00A  F04B         	movff	_minute+1,___awmod@dividend+1
  1669  000794  0E00               	movlw	0
  1670  000796  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1671  000798  0E0A               	movlw	10
  1672  00079A  6E4C               	movwf	___awmod@divisor^0,c
  1673  00079C  EC2B  F00A         	call	___awmod	;wreg free
  1674  0007A0  0E30               	movlw	48
  1675  0007A2  244A               	addwf	?___awmod^0,w,c
  1676  0007A4  6E50               	movwf	read@parameters^0,c
  1677  0007A6  0E00               	movlw	0
  1678  0007A8  204B               	addwfc	(?___awmod+1)^0,w,c
  1679  0007AA  6E51               	movwf	(read@parameters+1)^0,c
  1680  0007AC  EE20 F001          	lfsr	2,1
  1681  0007B0  5063               	movf	_lcd^0,w,c
  1682  0007B2  26D9               	addwf	fsr2l,f,c
  1683  0007B4  5064               	movf	(_lcd+1)^0,w,c
  1684  0007B6  22DA               	addwfc	fsr2h,f,c
  1685  0007B8  CFDE F052          	movff	postinc2,??_disp
  1686  0007BC  CFDD F053          	movff	postdec2,??_disp+1
  1687  0007C0  C052  FFD9         	movff	??_disp,fsr2l
  1688  0007C4  C053  FFDA         	movff	??_disp+1,fsr2h
  1689  0007C8  D802               	call	u3548
  1690  0007CA  EFF1  F003         	goto	u3549
  1691  0007CE                     u3548:
  1692  0007CE  0005               	push	
  1693  0007D0  6EFA               	movwf	pclath,c
  1694  0007D2  50DE               	movf	postinc2,w,c
  1695  0007D4  6EFD               	movwf	tosl,c
  1696  0007D6  50DE               	movf	postinc2,w,c
  1697  0007D8  6EFE               	movwf	tosh,c
  1698  0007DA  50F8               	movf	tblptru,w,c
  1699  0007DC  6EFF               	movwf	tosu,c
  1700  0007DE  50FA               	movf	pclath,w,c
  1701  0007E0  0012               	return		;indir
  1702  0007E2                     u3549:
  1703  0007E2                     
  1704                           ;main.c: 41: lcd->funcoes[LCD_DATA](':');
  1705  0007E2  0E3A               	movlw	58
  1706  0007E4  6E50               	movwf	read@parameters^0,c
  1707  0007E6  0E00               	movlw	0
  1708  0007E8  6E51               	movwf	(read@parameters+1)^0,c
  1709  0007EA  EE20 F001          	lfsr	2,1
  1710  0007EE  5063               	movf	_lcd^0,w,c
  1711  0007F0  26D9               	addwf	fsr2l,f,c
  1712  0007F2  5064               	movf	(_lcd+1)^0,w,c
  1713  0007F4  22DA               	addwfc	fsr2h,f,c
  1714  0007F6  CFDE F052          	movff	postinc2,??_disp
  1715  0007FA  CFDD F053          	movff	postdec2,??_disp+1
  1716  0007FE  C052  FFD9         	movff	??_disp,fsr2l
  1717  000802  C053  FFDA         	movff	??_disp+1,fsr2h
  1718  000806  D802               	call	u3558
  1719  000808  EF10  F004         	goto	u3559
  1720  00080C                     u3558:
  1721  00080C  0005               	push	
  1722  00080E  6EFA               	movwf	pclath,c
  1723  000810  50DE               	movf	postinc2,w,c
  1724  000812  6EFD               	movwf	tosl,c
  1725  000814  50DE               	movf	postinc2,w,c
  1726  000816  6EFE               	movwf	tosh,c
  1727  000818  50F8               	movf	tblptru,w,c
  1728  00081A  6EFF               	movwf	tosu,c
  1729  00081C  50FA               	movf	pclath,w,c
  1730  00081E  0012               	return		;indir
  1731  000820                     u3559:
  1732  000820                     
  1733                           ;main.c: 42: lcd->funcoes[LCD_DATA](48 + (second/10));
  1734  000820  C00B  F042         	movff	_second,___awdiv@dividend
  1735  000824  C00C  F043         	movff	_second+1,___awdiv@dividend+1
  1736  000828  0E00               	movlw	0
  1737  00082A  6E45               	movwf	(___awdiv@divisor+1)^0,c
  1738  00082C  0E0A               	movlw	10
  1739  00082E  6E44               	movwf	___awdiv@divisor^0,c
  1740  000830  ECC9  F009         	call	___awdiv	;wreg free
  1741  000834  0E30               	movlw	48
  1742  000836  2442               	addwf	?___awdiv^0,w,c
  1743  000838  6E50               	movwf	read@parameters^0,c
  1744  00083A  0E00               	movlw	0
  1745  00083C  2043               	addwfc	(?___awdiv+1)^0,w,c
  1746  00083E  6E51               	movwf	(read@parameters+1)^0,c
  1747  000840  EE20 F001          	lfsr	2,1
  1748  000844  5063               	movf	_lcd^0,w,c
  1749  000846  26D9               	addwf	fsr2l,f,c
  1750  000848  5064               	movf	(_lcd+1)^0,w,c
  1751  00084A  22DA               	addwfc	fsr2h,f,c
  1752  00084C  CFDE F052          	movff	postinc2,??_disp
  1753  000850  CFDD F053          	movff	postdec2,??_disp+1
  1754  000854  C052  FFD9         	movff	??_disp,fsr2l
  1755  000858  C053  FFDA         	movff	??_disp+1,fsr2h
  1756  00085C  D802               	call	u3568
  1757  00085E  EF3B  F004         	goto	u3569
  1758  000862                     u3568:
  1759  000862  0005               	push	
  1760  000864  6EFA               	movwf	pclath,c
  1761  000866  50DE               	movf	postinc2,w,c
  1762  000868  6EFD               	movwf	tosl,c
  1763  00086A  50DE               	movf	postinc2,w,c
  1764  00086C  6EFE               	movwf	tosh,c
  1765  00086E  50F8               	movf	tblptru,w,c
  1766  000870  6EFF               	movwf	tosu,c
  1767  000872  50FA               	movf	pclath,w,c
  1768  000874  0012               	return		;indir
  1769  000876                     u3569:
  1770  000876                     
  1771                           ;main.c: 43: lcd->funcoes[LCD_DATA](48 + (second%10));
  1772  000876  C00B  F04A         	movff	_second,___awmod@dividend
  1773  00087A  C00C  F04B         	movff	_second+1,___awmod@dividend+1
  1774  00087E  0E00               	movlw	0
  1775  000880  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1776  000882  0E0A               	movlw	10
  1777  000884  6E4C               	movwf	___awmod@divisor^0,c
  1778  000886  EC2B  F00A         	call	___awmod	;wreg free
  1779  00088A  0E30               	movlw	48
  1780  00088C  244A               	addwf	?___awmod^0,w,c
  1781  00088E  6E50               	movwf	read@parameters^0,c
  1782  000890  0E00               	movlw	0
  1783  000892  204B               	addwfc	(?___awmod+1)^0,w,c
  1784  000894  6E51               	movwf	(read@parameters+1)^0,c
  1785  000896  EE20 F001          	lfsr	2,1
  1786  00089A  5063               	movf	_lcd^0,w,c
  1787  00089C  26D9               	addwf	fsr2l,f,c
  1788  00089E  5064               	movf	(_lcd+1)^0,w,c
  1789  0008A0  22DA               	addwfc	fsr2h,f,c
  1790  0008A2  CFDE F052          	movff	postinc2,??_disp
  1791  0008A6  CFDD F053          	movff	postdec2,??_disp+1
  1792  0008AA  C052  FFD9         	movff	??_disp,fsr2l
  1793  0008AE  C053  FFDA         	movff	??_disp+1,fsr2h
  1794  0008B2  D802               	call	u3578
  1795  0008B4  EF66  F004         	goto	u3579
  1796  0008B8                     u3578:
  1797  0008B8  0005               	push	
  1798  0008BA  6EFA               	movwf	pclath,c
  1799  0008BC  50DE               	movf	postinc2,w,c
  1800  0008BE  6EFD               	movwf	tosl,c
  1801  0008C0  50DE               	movf	postinc2,w,c
  1802  0008C2  6EFE               	movwf	tosh,c
  1803  0008C4  50F8               	movf	tblptru,w,c
  1804  0008C6  6EFF               	movwf	tosu,c
  1805  0008C8  50FA               	movf	pclath,w,c
  1806  0008CA  0012               	return		;indir
  1807  0008CC                     u3579:
  1808  0008CC                     
  1809                           ;main.c: 44: return 2;
  1810  0008CC  0E02               	movlw	2
  1811  0008CE  0012               	return		;funcret
  1812  0008D0                     __end_of_disp:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _time *****************
  1816 ;; Defined at:
  1817 ;;		line 48 in file "main.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      unsigned char 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1831 ;;      Params:         0       0       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    4
  1838 ;; This function calls:
  1839 ;;		___awdiv
  1840 ;;		___awmod
  1841 ;; This function is called by:
  1842 ;;		_kernelLoop
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text6
  1847  0017E4                     __ptext6:
  1848                           	callstack 0
  1849  0017E4                     _time:
  1850                           	callstack 25
  1851  0017E4                     
  1852                           ;main.c: 49: count++;
  1853  0017E4  4A0D               	infsnz	_count^0,f,c
  1854  0017E6  2A0E               	incf	(_count+1)^0,f,c
  1855  0017E8                     
  1856                           ;main.c: 50: second = count%60;
  1857  0017E8  C00D  F04A         	movff	_count,___awmod@dividend
  1858  0017EC  C00E  F04B         	movff	_count+1,___awmod@dividend+1
  1859  0017F0  0E00               	movlw	0
  1860  0017F2  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1861  0017F4  0E3C               	movlw	60
  1862  0017F6  6E4C               	movwf	___awmod@divisor^0,c
  1863  0017F8  EC2B  F00A         	call	___awmod	;wreg free
  1864  0017FC  C04A  F00B         	movff	?___awmod,_second
  1865  001800  C04B  F00C         	movff	?___awmod+1,_second+1
  1866  001804                     
  1867                           ;main.c: 51: minute = (count/60)%60;
  1868  001804  0E00               	movlw	0
  1869  001806  6E45               	movwf	(___awdiv@divisor+1)^0,c
  1870  001808  0E3C               	movlw	60
  1871  00180A  6E44               	movwf	___awdiv@divisor^0,c
  1872  00180C  C00D  F042         	movff	_count,___awdiv@dividend
  1873  001810  C00E  F043         	movff	_count+1,___awdiv@dividend+1
  1874  001814  ECC9  F009         	call	___awdiv	;wreg free
  1875  001818  C042  F04A         	movff	?___awdiv,___awmod@dividend
  1876  00181C  C043  F04B         	movff	?___awdiv+1,___awmod@dividend+1
  1877  001820  0E00               	movlw	0
  1878  001822  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1879  001824  0E3C               	movlw	60
  1880  001826  6E4C               	movwf	___awmod@divisor^0,c
  1881  001828  EC2B  F00A         	call	___awmod	;wreg free
  1882  00182C  C04A  F009         	movff	?___awmod,_minute
  1883  001830  C04B  F00A         	movff	?___awmod+1,_minute+1
  1884  001834                     
  1885                           ;main.c: 52: hour = count/3600;
  1886  001834  C00D  F042         	movff	_count,___awdiv@dividend
  1887  001838  C00E  F043         	movff	_count+1,___awdiv@dividend+1
  1888  00183C  0E0E               	movlw	14
  1889  00183E  6E45               	movwf	(___awdiv@divisor+1)^0,c
  1890  001840  0E10               	movlw	16
  1891  001842  6E44               	movwf	___awdiv@divisor^0,c
  1892  001844  ECC9  F009         	call	___awdiv	;wreg free
  1893  001848  C042  F007         	movff	?___awdiv,_hour
  1894  00184C  C043  F008         	movff	?___awdiv+1,_hour+1
  1895  001850                     
  1896                           ;main.c: 53: return 2;
  1897  001850  0E02               	movlw	2
  1898  001852  0012               	return		;funcret
  1899  001854                     __end_of_time:
  1900                           	callstack 0
  1901                           
  1902 ;; *************** function _kernelAddProc *****************
  1903 ;; Defined at:
  1904 ;;		line 13 in file "kernel.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  newProc         2   29[COMRAM] PTR struct .
  1907 ;;		 -> main@p4(6), main@p3(6), main@p2(6), main@p1(6), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      unsigned char 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1919 ;;      Params:         2       0       0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0
  1921 ;;      Temps:          2       0       0       0       0       0       0
  1922 ;;      Totals:         4       0       0       0       0       0       0
  1923 ;;Total ram usage:        4 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    4
  1926 ;; This function calls:
  1927 ;;		___awmod
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;;		_kernelLoop
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text7
  1935  0015B6                     __ptext7:
  1936                           	callstack 0
  1937  0015B6                     _kernelAddProc:
  1938                           	callstack 25
  1939  0015B6                     
  1940                           ;kernel.c: 15: if (((end + 1) % 10) != start) {
  1941  0015B6  5017               	movf	_start^0,w,c
  1942  0015B8  6E52               	movwf	??_kernelAddProc^0,c
  1943  0015BA  6A53               	clrf	(??_kernelAddProc+1)^0,c
  1944  0015BC  0E01               	movlw	1
  1945  0015BE  2416               	addwf	_end^0,w,c
  1946  0015C0  6E4A               	movwf	___awmod@dividend^0,c
  1947  0015C2  6A4B               	clrf	(___awmod@dividend+1)^0,c
  1948  0015C4  0E00               	movlw	0
  1949  0015C6  224B               	addwfc	(___awmod@dividend+1)^0,f,c
  1950  0015C8  0E00               	movlw	0
  1951  0015CA  6E4D               	movwf	(___awmod@divisor+1)^0,c
  1952  0015CC  0E0A               	movlw	10
  1953  0015CE  6E4C               	movwf	___awmod@divisor^0,c
  1954  0015D0  EC2B  F00A         	call	___awmod	;wreg free
  1955  0015D4  5052               	movf	??_kernelAddProc^0,w,c
  1956  0015D6  184A               	xorwf	?___awmod^0,w,c
  1957  0015D8  E109               	bnz	u3720
  1958  0015DA  5053               	movf	(??_kernelAddProc+1)^0,w,c
  1959  0015DC  184B               	xorwf	(?___awmod+1)^0,w,c
  1960  0015DE  B4D8               	btfsc	status,2,c
  1961  0015E0  EFF4  F00A         	goto	u3721
  1962  0015E4  EFF6  F00A         	goto	u3720
  1963  0015E8                     u3721:
  1964  0015E8  EF2C  F00B         	goto	l90
  1965  0015EC                     u3720:
  1966  0015EC                     
  1967                           ;kernel.c: 16: pool[end] = newProc;
  1968  0015EC  5016               	movf	_end^0,w,c
  1969  0015EE  0D02               	mullw	2
  1970  0015F0  0EB0               	movlw	low _pool
  1971  0015F2  24F3               	addwf	243,w,c
  1972  0015F4  6ED9               	movwf	fsr2l,c
  1973  0015F6  0E00               	movlw	high _pool
  1974  0015F8  20F4               	addwfc	prodh,w,c
  1975  0015FA  6EDA               	movwf	fsr2h,c
  1976  0015FC  C050  FFDE         	movff	kernelAddProc@newProc,postinc2
  1977  001600  C051  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  1978  001604                     
  1979                           ;kernel.c: 17: pool[end]->start += newProc->period;
  1980  001604  EE20 F002          	lfsr	2,2
  1981  001608  5050               	movf	kernelAddProc@newProc^0,w,c
  1982  00160A  26D9               	addwf	fsr2l,f,c
  1983  00160C  5051               	movf	(kernelAddProc@newProc+1)^0,w,c
  1984  00160E  22DA               	addwfc	fsr2h,f,c
  1985  001610  CFDE F052          	movff	postinc2,??_kernelAddProc
  1986  001614  CFDD F053          	movff	postdec2,??_kernelAddProc+1
  1987  001618  5016               	movf	_end^0,w,c
  1988  00161A  0D02               	mullw	2
  1989  00161C  0EB0               	movlw	low _pool
  1990  00161E  24F3               	addwf	243,w,c
  1991  001620  6ED9               	movwf	fsr2l,c
  1992  001622  0E00               	movlw	high _pool
  1993  001624  20F4               	addwfc	prodh,w,c
  1994  001626  6EDA               	movwf	fsr2h,c
  1995  001628  EE10 F004          	lfsr	1,4
  1996  00162C  50DE               	movf	postinc2,w,c
  1997  00162E  26E1               	addwf	fsr1l,f,c
  1998  001630  50DD               	movf	postdec2,w,c
  1999  001632  22E2               	addwfc	fsr1h,f,c
  2000  001634  5052               	movf	??_kernelAddProc^0,w,c
  2001  001636  26E6               	addwf	postinc1,f,c
  2002  001638  5053               	movf	(??_kernelAddProc+1)^0,w,c
  2003  00163A  22E5               	addwfc	postdec1,f,c
  2004  00163C                     
  2005                           ;kernel.c: 18: end = (end + 1) % 10;
  2006  00163C  0E01               	movlw	1
  2007  00163E  2416               	addwf	_end^0,w,c
  2008  001640  6E4A               	movwf	___awmod@dividend^0,c
  2009  001642  6A4B               	clrf	(___awmod@dividend+1)^0,c
  2010  001644  0E00               	movlw	0
  2011  001646  224B               	addwfc	(___awmod@dividend+1)^0,f,c
  2012  001648  0E00               	movlw	0
  2013  00164A  6E4D               	movwf	(___awmod@divisor+1)^0,c
  2014  00164C  0E0A               	movlw	10
  2015  00164E  6E4C               	movwf	___awmod@divisor^0,c
  2016  001650  EC2B  F00A         	call	___awmod	;wreg free
  2017  001654  504A               	movf	?___awmod^0,w,c
  2018  001656  6E16               	movwf	_end^0,c
  2019  001658                     l90:
  2020  001658  0012               	return		;funcret
  2021  00165A                     __end_of_kernelAddProc:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function ___awmod *****************
  2025 ;; Defined at:
  2026 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  dividend        2   23[COMRAM] int 
  2029 ;;  divisor         2   25[COMRAM] int 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  sign            1   28[COMRAM] unsigned char 
  2032 ;;  counter         1   27[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2   23[COMRAM] int 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2042 ;;      Params:         4       0       0       0       0       0       0
  2043 ;;      Locals:         2       0       0       0       0       0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0
  2045 ;;      Totals:         6       0       0       0       0       0       0
  2046 ;;Total ram usage:        6 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    3
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_disp
  2053 ;;		_time
  2054 ;;		_kernelAddProc
  2055 ;;		_kernelLoop
  2056 ;;		_dsdec2bcd
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text8
  2061  001456                     __ptext8:
  2062                           	callstack 0
  2063  001456                     ___awmod:
  2064                           	callstack 25
  2065  001456  0E00               	movlw	0
  2066  001458  6E4F               	movwf	___awmod@sign^0,c
  2067  00145A  BE4B               	btfsc	(___awmod@dividend+1)^0,7,c
  2068  00145C  EF34  F00A         	goto	u3430
  2069  001460  EF32  F00A         	goto	u3431
  2070  001464                     u3431:
  2071  001464  EF3A  F00A         	goto	l3247
  2072  001468                     u3430:
  2073  001468  6C4A               	negf	___awmod@dividend^0,c
  2074  00146A  1E4B               	comf	(___awmod@dividend+1)^0,f,c
  2075  00146C  B0D8               	btfsc	status,0,c
  2076  00146E  2A4B               	incf	(___awmod@dividend+1)^0,f,c
  2077  001470  0E01               	movlw	1
  2078  001472  6E4F               	movwf	___awmod@sign^0,c
  2079  001474                     l3247:
  2080  001474  BE4D               	btfsc	(___awmod@divisor+1)^0,7,c
  2081  001476  EF41  F00A         	goto	u3440
  2082  00147A  EF3F  F00A         	goto	u3441
  2083  00147E                     u3441:
  2084  00147E  EF45  F00A         	goto	l3251
  2085  001482                     u3440:
  2086  001482  6C4C               	negf	___awmod@divisor^0,c
  2087  001484  1E4D               	comf	(___awmod@divisor+1)^0,f,c
  2088  001486  B0D8               	btfsc	status,0,c
  2089  001488  2A4D               	incf	(___awmod@divisor+1)^0,f,c
  2090  00148A                     l3251:
  2091  00148A  504C               	movf	___awmod@divisor^0,w,c
  2092  00148C  104D               	iorwf	(___awmod@divisor+1)^0,w,c
  2093  00148E  B4D8               	btfsc	status,2,c
  2094  001490  EF4C  F00A         	goto	u3451
  2095  001494  EF4E  F00A         	goto	u3450
  2096  001498                     u3451:
  2097  001498  EF72  F00A         	goto	l3267
  2098  00149C                     u3450:
  2099  00149C  0E01               	movlw	1
  2100  00149E  6E4E               	movwf	___awmod@counter^0,c
  2101  0014A0  EF56  F00A         	goto	l3257
  2102  0014A4                     l3255:
  2103  0014A4  90D8               	bcf	status,0,c
  2104  0014A6  364C               	rlcf	___awmod@divisor^0,f,c
  2105  0014A8  364D               	rlcf	(___awmod@divisor+1)^0,f,c
  2106  0014AA  2A4E               	incf	___awmod@counter^0,f,c
  2107  0014AC                     l3257:
  2108  0014AC  AE4D               	btfss	(___awmod@divisor+1)^0,7,c
  2109  0014AE  EF5B  F00A         	goto	u3461
  2110  0014B2  EF5D  F00A         	goto	u3460
  2111  0014B6                     u3461:
  2112  0014B6  EF52  F00A         	goto	l3255
  2113  0014BA                     u3460:
  2114  0014BA                     l3259:
  2115  0014BA  504C               	movf	___awmod@divisor^0,w,c
  2116  0014BC  5C4A               	subwf	___awmod@dividend^0,w,c
  2117  0014BE  504D               	movf	(___awmod@divisor+1)^0,w,c
  2118  0014C0  584B               	subwfb	(___awmod@dividend+1)^0,w,c
  2119  0014C2  A0D8               	btfss	status,0,c
  2120  0014C4  EF66  F00A         	goto	u3471
  2121  0014C8  EF68  F00A         	goto	u3470
  2122  0014CC                     u3471:
  2123  0014CC  EF6C  F00A         	goto	l3263
  2124  0014D0                     u3470:
  2125  0014D0  504C               	movf	___awmod@divisor^0,w,c
  2126  0014D2  5E4A               	subwf	___awmod@dividend^0,f,c
  2127  0014D4  504D               	movf	(___awmod@divisor+1)^0,w,c
  2128  0014D6  5A4B               	subwfb	(___awmod@dividend+1)^0,f,c
  2129  0014D8                     l3263:
  2130  0014D8  90D8               	bcf	status,0,c
  2131  0014DA  324D               	rrcf	(___awmod@divisor+1)^0,f,c
  2132  0014DC  324C               	rrcf	___awmod@divisor^0,f,c
  2133  0014DE  2E4E               	decfsz	___awmod@counter^0,f,c
  2134  0014E0  EF5D  F00A         	goto	l3259
  2135  0014E4                     l3267:
  2136  0014E4  504F               	movf	___awmod@sign^0,w,c
  2137  0014E6  B4D8               	btfsc	status,2,c
  2138  0014E8  EF78  F00A         	goto	u3481
  2139  0014EC  EF7A  F00A         	goto	u3480
  2140  0014F0                     u3481:
  2141  0014F0  EF7E  F00A         	goto	l3271
  2142  0014F4                     u3480:
  2143  0014F4  6C4A               	negf	___awmod@dividend^0,c
  2144  0014F6  1E4B               	comf	(___awmod@dividend+1)^0,f,c
  2145  0014F8  B0D8               	btfsc	status,0,c
  2146  0014FA  2A4B               	incf	(___awmod@dividend+1)^0,f,c
  2147  0014FC                     l3271:
  2148  0014FC  C04A  F04A         	movff	___awmod@dividend,?___awmod
  2149  001500  C04B  F04B         	movff	___awmod@dividend+1,?___awmod+1
  2150  001504  0012               	return		;funcret
  2151  001506                     __end_of___awmod:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function ___awdiv *****************
  2155 ;; Defined at:
  2156 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  dividend        2   15[COMRAM] int 
  2159 ;;  divisor         2   17[COMRAM] int 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  quotient        2   21[COMRAM] int 
  2162 ;;  sign            1   20[COMRAM] unsigned char 
  2163 ;;  counter         1   19[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  2   15[COMRAM] int 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2173 ;;      Params:         4       0       0       0       0       0       0
  2174 ;;      Locals:         4       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0
  2176 ;;      Totals:         8       0       0       0       0       0       0
  2177 ;;Total ram usage:        8 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    3
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_disp
  2184 ;;		_time
  2185 ;;		_dsdec2bcd
  2186 ;;		_dsbcd2dec
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text9
  2191  001392                     __ptext9:
  2192                           	callstack 0
  2193  001392                     ___awdiv:
  2194                           	callstack 25
  2195  001392  0E00               	movlw	0
  2196  001394  6E47               	movwf	___awdiv@sign^0,c
  2197  001396  BE45               	btfsc	(___awdiv@divisor+1)^0,7,c
  2198  001398  EFD2  F009         	goto	u3370
  2199  00139C  EFD0  F009         	goto	u3371
  2200  0013A0                     u3371:
  2201  0013A0  EFD8  F009         	goto	l3203
  2202  0013A4                     u3370:
  2203  0013A4  6C44               	negf	___awdiv@divisor^0,c
  2204  0013A6  1E45               	comf	(___awdiv@divisor+1)^0,f,c
  2205  0013A8  B0D8               	btfsc	status,0,c
  2206  0013AA  2A45               	incf	(___awdiv@divisor+1)^0,f,c
  2207  0013AC  0E01               	movlw	1
  2208  0013AE  6E47               	movwf	___awdiv@sign^0,c
  2209  0013B0                     l3203:
  2210  0013B0  BE43               	btfsc	(___awdiv@dividend+1)^0,7,c
  2211  0013B2  EFDF  F009         	goto	u3380
  2212  0013B6  EFDD  F009         	goto	u3381
  2213  0013BA                     u3381:
  2214  0013BA  EFE5  F009         	goto	l3209
  2215  0013BE                     u3380:
  2216  0013BE  6C42               	negf	___awdiv@dividend^0,c
  2217  0013C0  1E43               	comf	(___awdiv@dividend+1)^0,f,c
  2218  0013C2  B0D8               	btfsc	status,0,c
  2219  0013C4  2A43               	incf	(___awdiv@dividend+1)^0,f,c
  2220  0013C6  0E01               	movlw	1
  2221  0013C8  1A47               	xorwf	___awdiv@sign^0,f,c
  2222  0013CA                     l3209:
  2223  0013CA  0E00               	movlw	0
  2224  0013CC  6E49               	movwf	(___awdiv@quotient+1)^0,c
  2225  0013CE  0E00               	movlw	0
  2226  0013D0  6E48               	movwf	___awdiv@quotient^0,c
  2227  0013D2  5044               	movf	___awdiv@divisor^0,w,c
  2228  0013D4  1045               	iorwf	(___awdiv@divisor+1)^0,w,c
  2229  0013D6  B4D8               	btfsc	status,2,c
  2230  0013D8  EFF0  F009         	goto	u3391
  2231  0013DC  EFF2  F009         	goto	u3390
  2232  0013E0                     u3391:
  2233  0013E0  EF1A  F00A         	goto	l3231
  2234  0013E4                     u3390:
  2235  0013E4  0E01               	movlw	1
  2236  0013E6  6E46               	movwf	___awdiv@counter^0,c
  2237  0013E8  EFFA  F009         	goto	l3217
  2238  0013EC                     l3215:
  2239  0013EC  90D8               	bcf	status,0,c
  2240  0013EE  3644               	rlcf	___awdiv@divisor^0,f,c
  2241  0013F0  3645               	rlcf	(___awdiv@divisor+1)^0,f,c
  2242  0013F2  2A46               	incf	___awdiv@counter^0,f,c
  2243  0013F4                     l3217:
  2244  0013F4  AE45               	btfss	(___awdiv@divisor+1)^0,7,c
  2245  0013F6  EFFF  F009         	goto	u3401
  2246  0013FA  EF01  F00A         	goto	u3400
  2247  0013FE                     u3401:
  2248  0013FE  EFF6  F009         	goto	l3215
  2249  001402                     u3400:
  2250  001402                     l3219:
  2251  001402  90D8               	bcf	status,0,c
  2252  001404  3648               	rlcf	___awdiv@quotient^0,f,c
  2253  001406  3649               	rlcf	(___awdiv@quotient+1)^0,f,c
  2254  001408  5044               	movf	___awdiv@divisor^0,w,c
  2255  00140A  5C42               	subwf	___awdiv@dividend^0,w,c
  2256  00140C  5045               	movf	(___awdiv@divisor+1)^0,w,c
  2257  00140E  5843               	subwfb	(___awdiv@dividend+1)^0,w,c
  2258  001410  A0D8               	btfss	status,0,c
  2259  001412  EF0D  F00A         	goto	u3411
  2260  001416  EF0F  F00A         	goto	u3410
  2261  00141A                     u3411:
  2262  00141A  EF14  F00A         	goto	l3227
  2263  00141E                     u3410:
  2264  00141E  5044               	movf	___awdiv@divisor^0,w,c
  2265  001420  5E42               	subwf	___awdiv@dividend^0,f,c
  2266  001422  5045               	movf	(___awdiv@divisor+1)^0,w,c
  2267  001424  5A43               	subwfb	(___awdiv@dividend+1)^0,f,c
  2268  001426  8048               	bsf	___awdiv@quotient^0,0,c
  2269  001428                     l3227:
  2270  001428  90D8               	bcf	status,0,c
  2271  00142A  3245               	rrcf	(___awdiv@divisor+1)^0,f,c
  2272  00142C  3244               	rrcf	___awdiv@divisor^0,f,c
  2273  00142E  2E46               	decfsz	___awdiv@counter^0,f,c
  2274  001430  EF01  F00A         	goto	l3219
  2275  001434                     l3231:
  2276  001434  5047               	movf	___awdiv@sign^0,w,c
  2277  001436  B4D8               	btfsc	status,2,c
  2278  001438  EF20  F00A         	goto	u3421
  2279  00143C  EF22  F00A         	goto	u3420
  2280  001440                     u3421:
  2281  001440  EF26  F00A         	goto	l3235
  2282  001444                     u3420:
  2283  001444  6C48               	negf	___awdiv@quotient^0,c
  2284  001446  1E49               	comf	(___awdiv@quotient+1)^0,f,c
  2285  001448  B0D8               	btfsc	status,0,c
  2286  00144A  2A49               	incf	(___awdiv@quotient+1)^0,f,c
  2287  00144C                     l3235:
  2288  00144C  C048  F042         	movff	___awdiv@quotient,?___awdiv
  2289  001450  C049  F043         	movff	___awdiv@quotient+1,?___awdiv+1
  2290  001454  0012               	return		;funcret
  2291  001456                     __end_of___awdiv:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _data *****************
  2295 ;; Defined at:
  2296 ;;		line 13 in file "drv_lcd.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  parameters      2   29[COMRAM] PTR void 
  2299 ;;		 -> press@value(2), NULL(0), RAM(1535), 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      unsigned char 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         2       0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:         2       0       0       0       0       0       0
  2315 ;;Total ram usage:        2 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    5
  2318 ;; This function calls:
  2319 ;;		_lcdData
  2320 ;; This function is called by:
  2321 ;;		_getLcdDriver
  2322 ;;		_disp
  2323 ;;		_db
  2324 ;;		_press
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text10
  2329  001A78                     __ptext10:
  2330                           	callstack 0
  2331  001A78                     _data:
  2332                           	callstack 23
  2333  001A78                     
  2334                           ;drv_lcd.c: 14: lcdData((char) parameters);
  2335  001A78  5050               	movf	data@parameters^0,w,c
  2336  001A7A  EC2A  F00C         	call	_lcdData
  2337  001A7E  0012               	return		;funcret
  2338  001A80                     __end_of_data:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _cmd *****************
  2342 ;; Defined at:
  2343 ;;		line 9 in file "drv_lcd.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  parameters      2   29[COMRAM] PTR void 
  2346 ;;		 -> press@value(2), NULL(0), RAM(1535), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      unsigned char 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2358 ;;      Params:         2       0       0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0
  2361 ;;      Totals:         2       0       0       0       0       0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    6
  2365 ;; This function calls:
  2366 ;;		_lcdCommand
  2367 ;; This function is called by:
  2368 ;;		_getLcdDriver
  2369 ;;		_disp
  2370 ;;		_db
  2371 ;;		_press
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text11
  2376  001A80                     __ptext11:
  2377                           	callstack 0
  2378  001A80                     _cmd:
  2379                           	callstack 22
  2380  001A80                     
  2381                           ;drv_lcd.c: 10: lcdCommand((char)parameters);
  2382  001A80  5050               	movf	cmd@parameters^0,w,c
  2383  001A82  EC77  F00B         	call	_lcdCommand
  2384  001A86  0012               	return		;funcret
  2385  001A88                     __end_of_cmd:
  2386                           	callstack 0
  2387                           
  2388 ;; *************** function _inverte *****************
  2389 ;; Defined at:
  2390 ;;		line 11 in file "drv_led.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  parameters      2   29[COMRAM] PTR void 
  2393 ;;		 -> press@value(2), NULL(0), RAM(1535), 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      unsigned char 
  2398 ;; Registers used:
  2399 ;;		status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2405 ;;      Params:         2       0       0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0
  2408 ;;      Totals:         2       0       0       0       0       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    3
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_getLedDriver
  2416 ;;		_disp
  2417 ;;		_db
  2418 ;;		_press
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text12
  2423  001A94                     __ptext12:
  2424                           	callstack 0
  2425  001A94                     _inverte:
  2426                           	callstack 25
  2427  001A94                     
  2428                           ;drv_led.c: 13: PORTD = ~PORTD;
  2429  001A94  1E83               	comf	131,f,c	;volatile
  2430  001A96  0012               	return		;funcret
  2431  001A98                     __end_of_inverte:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _changePORTD *****************
  2435 ;; Defined at:
  2436 ;;		line 7 in file "drv_led.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  parameters      2   29[COMRAM] PTR void 
  2439 ;;		 -> press@value(2), NULL(0), RAM(1535), 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      unsigned char 
  2444 ;; Registers used:
  2445 ;;		None
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2451 ;;      Params:         2       0       0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0
  2454 ;;      Totals:         2       0       0       0       0       0       0
  2455 ;;Total ram usage:        2 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    3
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_getLedDriver
  2462 ;;		_disp
  2463 ;;		_db
  2464 ;;		_press
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text13
  2469  001A88                     __ptext13:
  2470                           	callstack 0
  2471  001A88                     _changePORTD:
  2472                           	callstack 25
  2473  001A88                     
  2474                           ;drv_led.c: 8: PORTD = (char) parameters;
  2475  001A88  C050  FF83         	movff	changePORTD@parameters,3971	;volatile
  2476  001A8C  0012               	return		;funcret
  2477  001A8E                     __end_of_changePORTD:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _read *****************
  2481 ;; Defined at:
  2482 ;;		line 14 in file "drv_keypad.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  parameters      2   29[COMRAM] PTR void 
  2485 ;;		 -> press@value(2), NULL(0), RAM(1535), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      unsigned char 
  2490 ;; Registers used:
  2491 ;;		fsr2l, fsr2h, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2497 ;;      Params:         2       0       0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0
  2500 ;;      Totals:         2       0       0       0       0       0       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    4
  2504 ;; This function calls:
  2505 ;;		_kpRead
  2506 ;; This function is called by:
  2507 ;;		_getKeypadDriver
  2508 ;;		_disp
  2509 ;;		_db
  2510 ;;		_press
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text14
  2515  001A1E                     __ptext14:
  2516                           	callstack 0
  2517  001A1E                     _read:
  2518                           	callstack 24
  2519  001A1E                     
  2520                           ;drv_keypad.c: 15: *((unsigned int *) parameters) = kpRead();
  2521  001A1E  EC1A  F00D         	call	_kpRead	;wreg free
  2522  001A22  C050  FFD9         	movff	read@parameters,fsr2l
  2523  001A26  C051  FFDA         	movff	read@parameters+1,fsr2h
  2524  001A2A  C042  FFDE         	movff	?_kpRead,postinc2
  2525  001A2E  C043  FFDD         	movff	?_kpRead+1,postdec2
  2526  001A32  0012               	return		;funcret
  2527  001A34                     __end_of_read:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _kpRead *****************
  2531 ;; Defined at:
  2532 ;;		line 35 in file "keypad.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  2   15[COMRAM] unsigned int 
  2539 ;; Registers used:
  2540 ;;		None
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2546 ;;      Params:         2       0       0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0
  2549 ;;      Totals:         2       0       0       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_read
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text15
  2561  001A34                     __ptext15:
  2562                           	callstack 0
  2563  001A34                     _kpRead:
  2564                           	callstack 24
  2565  001A34                     
  2566                           ;keypad.c: 36: return valor;
  2567  001A34  C005  F042         	movff	_valor,?_kpRead
  2568  001A38  C006  F043         	movff	_valor+1,?_kpRead+1
  2569  001A3C  0012               	return		;funcret
  2570  001A3E                     __end_of_kpRead:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _debounce *****************
  2574 ;; Defined at:
  2575 ;;		line 10 in file "drv_keypad.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      unsigned char 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2589 ;;      Params:         0       0       0       0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0
  2592 ;;      Totals:         0       0       0       0       0       0       0
  2593 ;;Total ram usage:        0 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    4
  2596 ;; This function calls:
  2597 ;;		_kpDebounce
  2598 ;; This function is called by:
  2599 ;;		_getKeypadDriver
  2600 ;;		_disp
  2601 ;;		_db
  2602 ;;		_press
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text16
  2607  001A8E                     __ptext16:
  2608                           	callstack 0
  2609  001A8E                     _debounce:
  2610                           	callstack 24
  2611  001A8E                     
  2612                           ;drv_keypad.c: 11: kpDebounce();
  2613  001A8E  EC8A  F008         	call	_kpDebounce	;wreg free
  2614  001A92  0012               	return		;funcret
  2615  001A94                     __end_of_debounce:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _kpDebounce *****************
  2619 ;; Defined at:
  2620 ;;		line 39 in file "keypad.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  k               2   21[COMRAM] int 
  2625 ;;  i               1   24[COMRAM] unsigned char 
  2626 ;;  j               1   23[COMRAM] unsigned char 
  2627 ;;  old_D           1   20[COMRAM] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0, prodl, prodh
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         0       0       0       0       0       0       0
  2638 ;;      Locals:         5       0       0       0       0       0       0
  2639 ;;      Temps:          5       0       0       0       0       0       0
  2640 ;;      Totals:        10       0       0       0       0       0       0
  2641 ;;Total ram usage:       10 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_debounce
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text17
  2652  001114                     __ptext17:
  2653                           	callstack 0
  2654  001114                     _kpDebounce:
  2655                           	callstack 24
  2656  001114                     
  2657                           ;keypad.c: 40: unsigned char i, j;;keypad.c: 41: static unsigned char tempo;;keypad.c: 4
      +                          2: static unsigned int valorNovo = 0x0000;;keypad.c: 43: static unsigned int valorAntigo
      +                           = 0x0000;;keypad.c: 46: unsigned char old_D;;keypad.c: 47: old_D = PORTD;
  2658  001114  CF83 F047          	movff	3971,kpDebounce@old_D	;volatile
  2659  001118                     
  2660                           ;keypad.c: 51: TRISD |= 0x0f;
  2661  001118  0E0F               	movlw	15
  2662  00111A  1295               	iorwf	149,f,c	;volatile
  2663  00111C                     
  2664                           ;keypad.c: 53: for (i = 0; i < 3; i++) {
  2665  00111C  0E00               	movlw	0
  2666  00111E  6E4B               	movwf	kpDebounce@i^0,c
  2667  001120                     l3051:
  2668                           
  2669                           ;keypad.c: 55: TRISB &= 0xF8;
  2670  001120  0EF8               	movlw	248
  2671  001122  1693               	andwf	147,f,c	;volatile
  2672                           
  2673                           ;keypad.c: 57: ((TRISB) |= (1<<(i)));
  2674  001124  C04B  F042         	movff	kpDebounce@i,??_kpDebounce
  2675  001128  0E01               	movlw	1
  2676  00112A  6E43               	movwf	(??_kpDebounce+1)^0,c
  2677  00112C  2A42               	incf	??_kpDebounce^0,f,c
  2678  00112E  EF9B  F008         	goto	u3044
  2679  001132                     u3045:
  2680  001132  90D8               	bcf	status,0,c
  2681  001134  3643               	rlcf	(??_kpDebounce+1)^0,f,c
  2682  001136                     u3044:
  2683  001136  2E42               	decfsz	??_kpDebounce^0,f,c
  2684  001138  EF99  F008         	goto	u3045
  2685  00113C  5043               	movf	(??_kpDebounce+1)^0,w,c
  2686  00113E  1293               	iorwf	147,f,c	;volatile
  2687                           
  2688                           ;keypad.c: 59: PORTB |= 0x07;
  2689  001140  0E07               	movlw	7
  2690  001142  1281               	iorwf	129,f,c	;volatile
  2691                           
  2692                           ;keypad.c: 60: ((PORTB) &= ~(1<<(i)));
  2693  001144  C04B  F042         	movff	kpDebounce@i,??_kpDebounce
  2694  001148  0E01               	movlw	1
  2695  00114A  6E43               	movwf	(??_kpDebounce+1)^0,c
  2696  00114C  2A42               	incf	??_kpDebounce^0,f,c
  2697  00114E  EFAB  F008         	goto	u3054
  2698  001152                     u3055:
  2699  001152  90D8               	bcf	status,0,c
  2700  001154  3643               	rlcf	(??_kpDebounce+1)^0,f,c
  2701  001156                     u3054:
  2702  001156  2E42               	decfsz	??_kpDebounce^0,f,c
  2703  001158  EFA9  F008         	goto	u3055
  2704  00115C  5043               	movf	(??_kpDebounce+1)^0,w,c
  2705  00115E  0AFF               	xorlw	255
  2706  001160  1681               	andwf	129,f,c	;volatile
  2707  001162                     
  2708                           ;keypad.c: 63: for (int k = 0; k < 10; k++);
  2709  001162  0E00               	movlw	0
  2710  001164  6E49               	movwf	(kpDebounce@k+1)^0,c
  2711  001166  0E00               	movlw	0
  2712  001168  6E48               	movwf	kpDebounce@k^0,c
  2713  00116A                     l3059:
  2714  00116A  4A48               	infsnz	kpDebounce@k^0,f,c
  2715  00116C  2A49               	incf	(kpDebounce@k+1)^0,f,c
  2716  00116E  BE49               	btfsc	(kpDebounce@k+1)^0,7,c
  2717  001170  EFC3  F008         	goto	u3061
  2718  001174  5049               	movf	(kpDebounce@k+1)^0,w,c
  2719  001176  E109               	bnz	u3060
  2720  001178  0E0A               	movlw	10
  2721  00117A  5C48               	subwf	kpDebounce@k^0,w,c
  2722  00117C  A0D8               	btfss	status,0,c
  2723  00117E  EFC3  F008         	goto	u3061
  2724  001182  EFC5  F008         	goto	u3060
  2725  001186                     u3061:
  2726  001186  EFB5  F008         	goto	l3059
  2727  00118A                     u3060:
  2728  00118A                     
  2729                           ;keypad.c: 66: for (j = 0; j < 4; j++) {
  2730  00118A  0E00               	movlw	0
  2731  00118C  6E4A               	movwf	kpDebounce@j^0,c
  2732  00118E                     l3069:
  2733                           
  2734                           ;keypad.c: 67: if (!((PORTD) & (1<<(j)))) {
  2735  00118E  C04A  F042         	movff	kpDebounce@j,??_kpDebounce
  2736  001192  0E01               	movlw	1
  2737  001194  6E43               	movwf	(??_kpDebounce+1)^0,c
  2738  001196  2A42               	incf	??_kpDebounce^0,f,c
  2739  001198  EFD0  F008         	goto	u3074
  2740  00119C                     u3075:
  2741  00119C  90D8               	bcf	status,0,c
  2742  00119E  3643               	rlcf	(??_kpDebounce+1)^0,f,c
  2743  0011A0                     u3074:
  2744  0011A0  2E42               	decfsz	??_kpDebounce^0,f,c
  2745  0011A2  EFCE  F008         	goto	u3075
  2746  0011A6  5043               	movf	(??_kpDebounce+1)^0,w,c
  2747  0011A8  1483               	andwf	131,w,c	;volatile
  2748  0011AA  0900               	iorlw	0
  2749  0011AC  A4D8               	btfss	status,2,c
  2750  0011AE  EFDB  F008         	goto	u3081
  2751  0011B2  EFDD  F008         	goto	u3080
  2752  0011B6                     u3081:
  2753  0011B6  EFF5  F008         	goto	l3073
  2754  0011BA                     u3080:
  2755  0011BA                     
  2756                           ;keypad.c: 68: ((valorNovo) |= (1<<((i * 4) + j)));
  2757  0011BA  504B               	movf	kpDebounce@i^0,w,c
  2758  0011BC  0D04               	mullw	4
  2759  0011BE  50F3               	movf	243,w,c
  2760  0011C0  244A               	addwf	kpDebounce@j^0,w,c
  2761  0011C2  6E42               	movwf	??_kpDebounce^0,c
  2762  0011C4  0E01               	movlw	1
  2763  0011C6  6E43               	movwf	(??_kpDebounce+1)^0,c
  2764  0011C8  0E00               	movlw	0
  2765  0011CA  6E44               	movwf	(??_kpDebounce+2)^0,c
  2766  0011CC  2A42               	incf	??_kpDebounce^0,f,c
  2767  0011CE  EFEC  F008         	goto	u3094
  2768  0011D2                     u3095:
  2769  0011D2  90D8               	bcf	status,0,c
  2770  0011D4  3643               	rlcf	(??_kpDebounce+1)^0,f,c
  2771  0011D6  3644               	rlcf	(??_kpDebounce+2)^0,f,c
  2772  0011D8                     u3094:
  2773  0011D8  2E42               	decfsz	??_kpDebounce^0,f,c
  2774  0011DA  EFE9  F008         	goto	u3095
  2775  0011DE  5043               	movf	(??_kpDebounce+1)^0,w,c
  2776  0011E0  1203               	iorwf	kpDebounce@valorNovo^0,f,c
  2777  0011E2  5044               	movf	(??_kpDebounce+2)^0,w,c
  2778  0011E4  1204               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  2779                           
  2780                           ;keypad.c: 69: } else {
  2781  0011E6  EF0F  F009         	goto	l3075
  2782  0011EA                     l3073:
  2783                           
  2784                           ;keypad.c: 70: ((valorNovo) &= ~(1<<((i * 4) + j)));
  2785  0011EA  504B               	movf	kpDebounce@i^0,w,c
  2786  0011EC  0D04               	mullw	4
  2787  0011EE  50F3               	movf	243,w,c
  2788  0011F0  244A               	addwf	kpDebounce@j^0,w,c
  2789  0011F2  6E42               	movwf	??_kpDebounce^0,c
  2790  0011F4  0E01               	movlw	1
  2791  0011F6  6E43               	movwf	(??_kpDebounce+1)^0,c
  2792  0011F8  0E00               	movlw	0
  2793  0011FA  6E44               	movwf	(??_kpDebounce+2)^0,c
  2794  0011FC  2A42               	incf	??_kpDebounce^0,f,c
  2795  0011FE  EF04  F009         	goto	u3104
  2796  001202                     u3105:
  2797  001202  90D8               	bcf	status,0,c
  2798  001204  3643               	rlcf	(??_kpDebounce+1)^0,f,c
  2799  001206  3644               	rlcf	(??_kpDebounce+2)^0,f,c
  2800  001208                     u3104:
  2801  001208  2E42               	decfsz	??_kpDebounce^0,f,c
  2802  00120A  EF01  F009         	goto	u3105
  2803  00120E  1C43               	comf	(??_kpDebounce+1)^0,w,c
  2804  001210  6E45               	movwf	(??_kpDebounce+3)^0,c
  2805  001212  1C44               	comf	(??_kpDebounce+2)^0,w,c
  2806  001214  6E46               	movwf	(??_kpDebounce+4)^0,c
  2807  001216  5045               	movf	(??_kpDebounce+3)^0,w,c
  2808  001218  1603               	andwf	kpDebounce@valorNovo^0,f,c
  2809  00121A  5046               	movf	(??_kpDebounce+4)^0,w,c
  2810  00121C  1604               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  2811  00121E                     l3075:
  2812  00121E  2A4A               	incf	kpDebounce@j^0,f,c
  2813  001220  0E03               	movlw	3
  2814  001222  644A               	cpfsgt	kpDebounce@j^0,c
  2815  001224  EF16  F009         	goto	u3111
  2816  001228  EF18  F009         	goto	u3110
  2817  00122C                     u3111:
  2818  00122C  EFC7  F008         	goto	l3069
  2819  001230                     u3110:
  2820  001230  2A4B               	incf	kpDebounce@i^0,f,c
  2821  001232  0E02               	movlw	2
  2822  001234  644B               	cpfsgt	kpDebounce@i^0,c
  2823  001236  EF1F  F009         	goto	u3121
  2824  00123A  EF21  F009         	goto	u3120
  2825  00123E                     u3121:
  2826  00123E  EF90  F008         	goto	l3051
  2827  001242                     u3120:
  2828  001242                     
  2829                           ;keypad.c: 71: };keypad.c: 72: };keypad.c: 73: };keypad.c: 74: if (valorAntigo == valorN
      +                          ovo) {
  2830  001242  5003               	movf	kpDebounce@valorNovo^0,w,c
  2831  001244  1801               	xorwf	kpDebounce@valorAntigo^0,w,c
  2832  001246  E107               	bnz	u3131
  2833  001248  5004               	movf	(kpDebounce@valorNovo+1)^0,w,c
  2834  00124A  1802               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  2835  00124C  A4D8               	btfss	status,2,c
  2836  00124E  EF2B  F009         	goto	u3131
  2837  001252  EF2D  F009         	goto	u3130
  2838  001256                     u3131:
  2839  001256  EF30  F009         	goto	l3087
  2840  00125A                     u3130:
  2841  00125A                     
  2842                           ;keypad.c: 75: tempo--;
  2843  00125A  0615               	decf	kpDebounce@tempo^0,f,c
  2844                           
  2845                           ;keypad.c: 76: } else {
  2846  00125C  EF36  F009         	goto	l286
  2847  001260                     l3087:
  2848                           
  2849                           ;keypad.c: 77: tempo = 10;
  2850  001260  0E0A               	movlw	10
  2851  001262  6E15               	movwf	kpDebounce@tempo^0,c
  2852  001264                     
  2853                           ;keypad.c: 78: valorAntigo = valorNovo;
  2854  001264  C003  F001         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  2855  001268  C004  F002         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  2856  00126C                     l286:
  2857                           
  2858                           ;keypad.c: 79: };keypad.c: 80: if (tempo == 0) {
  2859  00126C  5015               	movf	kpDebounce@tempo^0,w,c
  2860  00126E  A4D8               	btfss	status,2,c
  2861  001270  EF3C  F009         	goto	u3141
  2862  001274  EF3E  F009         	goto	u3140
  2863  001278                     u3141:
  2864  001278  EF42  F009         	goto	l287
  2865  00127C                     u3140:
  2866  00127C                     
  2867                           ;keypad.c: 81: valor = valorAntigo;
  2868  00127C  C001  F005         	movff	kpDebounce@valorAntigo,_valor
  2869  001280  C002  F006         	movff	kpDebounce@valorAntigo+1,_valor+1
  2870  001284                     l287:
  2871                           
  2872                           ;keypad.c: 82: };keypad.c: 83: PORTD = old_D;
  2873  001284  C047  FF83         	movff	kpDebounce@old_D,3971	;volatile
  2874  001288                     
  2875                           ;keypad.c: 84: TRISD = 0x00;
  2876  001288  0E00               	movlw	0
  2877  00128A  6E95               	movwf	149,c	;volatile
  2878  00128C  0012               	return		;funcret
  2879  00128E                     __end_of_kpDebounce:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _lcdData *****************
  2883 ;; Defined at:
  2884 ;;		line 74 in file "lcd.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  valor           1    wreg     unsigned char 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  valor           1   21[COMRAM] unsigned char 
  2889 ;;  old_D           1   22[COMRAM] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2899 ;;      Params:         0       0       0       0       0       0       0
  2900 ;;      Locals:         2       0       0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0
  2902 ;;      Totals:         2       0       0       0       0       0       0
  2903 ;;Total ram usage:        2 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    4
  2906 ;; This function calls:
  2907 ;;		_Delay40us
  2908 ;;		_digitalWrite
  2909 ;; This function is called by:
  2910 ;;		_data
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text18
  2915  001854                     __ptext18:
  2916                           	callstack 0
  2917  001854                     _lcdData:
  2918                           	callstack 23
  2919                           
  2920                           ;incstack = 0
  2921                           ;lcdData@valor stored from wreg
  2922  001854  6E48               	movwf	lcdData@valor^0,c
  2923  001856                     
  2924                           ;lcd.c: 77: unsigned char old_D;;lcd.c: 78: old_D = PORTD;
  2925  001856  CF83 F049          	movff	3971,lcdData@old_D	;volatile
  2926  00185A                     
  2927                           ;lcd.c: 80: TRISD = 0x00;
  2928  00185A  0E00               	movlw	0
  2929  00185C  6E95               	movwf	149,c	;volatile
  2930  00185E                     
  2931                           ;lcd.c: 81: digitalWrite(PIN_E2, 1);
  2932  00185E  0E00               	movlw	0
  2933  001860  6E43               	movwf	(digitalWrite@pin+1)^0,c
  2934  001862  0E22               	movlw	34
  2935  001864  6E42               	movwf	digitalWrite@pin^0,c
  2936  001866  0E00               	movlw	0
  2937  001868  6E45               	movwf	(digitalWrite@value+1)^0,c
  2938  00186A  0E01               	movlw	1
  2939  00186C  6E44               	movwf	digitalWrite@value^0,c
  2940  00186E  EC8F  F005         	call	_digitalWrite	;wreg free
  2941  001872                     
  2942                           ;lcd.c: 83: PORTD = valor;
  2943  001872  C048  FF83         	movff	lcdData@valor,3971	;volatile
  2944  001876                     
  2945                           ;lcd.c: 85: digitalWrite(PIN_E1, 1);
  2946  001876  0E00               	movlw	0
  2947  001878  6E43               	movwf	(digitalWrite@pin+1)^0,c
  2948  00187A  0E21               	movlw	33
  2949  00187C  6E42               	movwf	digitalWrite@pin^0,c
  2950  00187E  0E00               	movlw	0
  2951  001880  6E45               	movwf	(digitalWrite@value+1)^0,c
  2952  001882  0E01               	movlw	1
  2953  001884  6E44               	movwf	digitalWrite@value^0,c
  2954  001886  EC8F  F005         	call	_digitalWrite	;wreg free
  2955  00188A                     
  2956                           ;lcd.c: 86: digitalWrite(PIN_E1, 0);
  2957  00188A  0E00               	movlw	0
  2958  00188C  6E43               	movwf	(digitalWrite@pin+1)^0,c
  2959  00188E  0E21               	movlw	33
  2960  001890  6E42               	movwf	digitalWrite@pin^0,c
  2961  001892  0E00               	movlw	0
  2962  001894  6E45               	movwf	(digitalWrite@value+1)^0,c
  2963  001896  0E00               	movlw	0
  2964  001898  6E44               	movwf	digitalWrite@value^0,c
  2965  00189A  EC8F  F005         	call	_digitalWrite	;wreg free
  2966  00189E                     
  2967                           ;lcd.c: 88: PORTD= old_D;
  2968  00189E  C049  FF83         	movff	lcdData@old_D,3971	;volatile
  2969  0018A2                     
  2970                           ;lcd.c: 90: Delay40us();
  2971  0018A2  EC03  F00D         	call	_Delay40us	;wreg free
  2972  0018A6  0012               	return		;funcret
  2973  0018A8                     __end_of_lcdData:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _kernelInit *****************
  2977 ;; Defined at:
  2978 ;;		line 7 in file "kernel.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      unsigned char 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2992 ;;      Params:         0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    3
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text19
  3007  001A3E                     __ptext19:
  3008                           	callstack 0
  3009  001A3E                     _kernelInit:
  3010                           	callstack 27
  3011  001A3E                     
  3012                           ;kernel.c: 8: start = 0;
  3013  001A3E  0E00               	movlw	0
  3014  001A40  6E17               	movwf	_start^0,c
  3015                           
  3016                           ;kernel.c: 9: end = 0;
  3017  001A42  0E00               	movlw	0
  3018  001A44  6E16               	movwf	_end^0,c
  3019  001A46  0012               	return		;funcret
  3020  001A48                     __end_of_kernelInit:
  3021                           	callstack 0
  3022                           
  3023 ;; *************** function _initKp *****************
  3024 ;; Defined at:
  3025 ;;		line 18 in file "drv_keypad.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  parameters      2   23[COMRAM] PTR void 
  3028 ;;		 -> NULL(0), RAM(1535), 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      unsigned char 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3040 ;;      Params:         2       0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0
  3043 ;;      Totals:         2       0       0       0       0       0       0
  3044 ;;Total ram usage:        2 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    4
  3047 ;; This function calls:
  3048 ;;		_kpInit
  3049 ;; This function is called by:
  3050 ;;		_getKeypadDriver
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text20
  3056  001A48                     __ptext20:
  3057                           	callstack 0
  3058  001A48                     _initKp:
  3059                           	callstack 26
  3060  001A48                     
  3061                           ;drv_keypad.c: 19: kpInit();
  3062  001A48  EC33  F00D         	call	_kpInit	;wreg free
  3063  001A4C                     
  3064                           ;drv_keypad.c: 20: myself.id = (char) parameters;
  3065  001A4C  C04A  F018         	movff	initKp@parameters,_myself@drv_keypad$F631
  3066  001A50  0012               	return		;funcret
  3067  001A52                     __end_of_initKp:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _initGenerico *****************
  3071 ;; Defined at:
  3072 ;;		line 16 in file "drv_led.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  parameters      2   23[COMRAM] PTR void 
  3075 ;;		 -> NULL(0), RAM(1535), 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      unsigned char 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3087 ;;      Params:         2       0       0       0       0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0
  3090 ;;      Totals:         2       0       0       0       0       0       0
  3091 ;;Total ram usage:        2 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    3
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_getLedDriver
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text21
  3103  001A52                     __ptext21:
  3104                           	callstack 0
  3105  001A52                     _initGenerico:
  3106                           	callstack 27
  3107  001A52                     
  3108                           ;drv_led.c: 17: TRISD = 0x00;
  3109  001A52  0E00               	movlw	0
  3110  001A54  6E95               	movwf	149,c	;volatile
  3111  001A56                     
  3112                           ;drv_led.c: 18: myself.id = (char) parameters;
  3113  001A56  C04A  F022         	movff	initGenerico@parameters,_myself
  3114  001A5A  0012               	return		;funcret
  3115  001A5C                     __end_of_initGenerico:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _initLCD *****************
  3119 ;; Defined at:
  3120 ;;		line 17 in file "drv_lcd.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  parameters      2   23[COMRAM] PTR void 
  3123 ;;		 -> NULL(0), RAM(1535), 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      unsigned char 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3135 ;;      Params:         2       0       0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0
  3138 ;;      Totals:         2       0       0       0       0       0       0
  3139 ;;Total ram usage:        2 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    7
  3142 ;; This function calls:
  3143 ;;		_lcdInit
  3144 ;; This function is called by:
  3145 ;;		_getLcdDriver
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text22
  3151  001A5C                     __ptext22:
  3152                           	callstack 0
  3153  001A5C                     _initLCD:
  3154                           	callstack 23
  3155  001A5C                     
  3156                           ;drv_lcd.c: 18: lcdInit();
  3157  001A5C  ECB6  F00B         	call	_lcdInit	;wreg free
  3158  001A60                     
  3159                           ;drv_lcd.c: 19: myself.id = (char) parameters;
  3160  001A60  C04A  F01D         	movff	initLCD@parameters,_myself@drv_lcd$F591
  3161  001A64  0012               	return		;funcret
  3162  001A66                     __end_of_initLCD:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _lcdInit *****************
  3166 ;; Defined at:
  3167 ;;		line 95 in file "lcd.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3181 ;;      Params:         0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    6
  3188 ;; This function calls:
  3189 ;;		_Delay2ms
  3190 ;;		_lcdCommand
  3191 ;;		_pinMode
  3192 ;; This function is called by:
  3193 ;;		_initLCD
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text23
  3198  00176C                     __ptext23:
  3199                           	callstack 0
  3200  00176C                     _lcdInit:
  3201                           	callstack 23
  3202  00176C                     
  3203                           ;lcd.c: 97: pinMode(PIN_E2, 0);
  3204  00176C  0E00               	movlw	0
  3205  00176E  6E43               	movwf	(pinMode@pin+1)^0,c
  3206  001770  0E22               	movlw	34
  3207  001772  6E42               	movwf	pinMode@pin^0,c
  3208  001774  0E00               	movlw	0
  3209  001776  6E45               	movwf	(pinMode@type+1)^0,c
  3210  001778  0E00               	movlw	0
  3211  00177A  6E44               	movwf	pinMode@type^0,c
  3212  00177C  EC68  F004         	call	_pinMode	;wreg free
  3213                           
  3214                           ;lcd.c: 98: pinMode(PIN_E1, 0);
  3215  001780  0E00               	movlw	0
  3216  001782  6E43               	movwf	(pinMode@pin+1)^0,c
  3217  001784  0E21               	movlw	33
  3218  001786  6E42               	movwf	pinMode@pin^0,c
  3219  001788  0E00               	movlw	0
  3220  00178A  6E45               	movwf	(pinMode@type+1)^0,c
  3221  00178C  0E00               	movlw	0
  3222  00178E  6E44               	movwf	pinMode@type^0,c
  3223  001790  EC68  F004         	call	_pinMode	;wreg free
  3224  001794                     
  3225                           ;lcd.c: 99: TRISD = 0x00;
  3226  001794  0E00               	movlw	0
  3227  001796  6E95               	movwf	149,c	;volatile
  3228  001798                     
  3229                           ;lcd.c: 102: Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  3230  001798  ECE9  F00C         	call	_Delay2ms	;wreg free
  3231  00179C  ECE9  F00C         	call	_Delay2ms	;wreg free
  3232  0017A0  ECE9  F00C         	call	_Delay2ms	;wreg free
  3233  0017A4  ECE9  F00C         	call	_Delay2ms	;wreg free
  3234  0017A8  ECE9  F00C         	call	_Delay2ms	;wreg free
  3235  0017AC                     
  3236                           ;lcd.c: 104: lcdCommand(0x38);
  3237  0017AC  0E38               	movlw	56
  3238  0017AE  EC77  F00B         	call	_lcdCommand
  3239  0017B2                     
  3240                           ;lcd.c: 105: Delay2ms(); Delay2ms();
  3241  0017B2  ECE9  F00C         	call	_Delay2ms	;wreg free
  3242  0017B6  ECE9  F00C         	call	_Delay2ms	;wreg free
  3243  0017BA                     
  3244                           ;lcd.c: 106: lcdCommand(0x38);
  3245  0017BA  0E38               	movlw	56
  3246  0017BC  EC77  F00B         	call	_lcdCommand
  3247  0017C0                     
  3248                           ;lcd.c: 107: Delay2ms();
  3249  0017C0  ECE9  F00C         	call	_Delay2ms	;wreg free
  3250  0017C4                     
  3251                           ;lcd.c: 108: lcdCommand(0x38);
  3252  0017C4  0E38               	movlw	56
  3253  0017C6  EC77  F00B         	call	_lcdCommand
  3254  0017CA                     
  3255                           ;lcd.c: 110: lcdCommand(0x38);
  3256  0017CA  0E38               	movlw	56
  3257  0017CC  EC77  F00B         	call	_lcdCommand
  3258  0017D0                     
  3259                           ;lcd.c: 111: lcdCommand(0x06);
  3260  0017D0  0E06               	movlw	6
  3261  0017D2  EC77  F00B         	call	_lcdCommand
  3262  0017D6                     
  3263                           ;lcd.c: 114: lcdCommand(0x0C);
  3264  0017D6  0E0C               	movlw	12
  3265  0017D8  EC77  F00B         	call	_lcdCommand
  3266  0017DC                     
  3267                           ;lcd.c: 115: lcdCommand(0x01);
  3268  0017DC  0E01               	movlw	1
  3269  0017DE  EC77  F00B         	call	_lcdCommand
  3270  0017E2  0012               	return		;funcret
  3271  0017E4                     __end_of_lcdInit:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _pinMode *****************
  3275 ;; Defined at:
  3276 ;;		line 54 in file "io.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  pin             2   15[COMRAM] int 
  3279 ;;  type            2   17[COMRAM] int 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3291 ;;      Params:         4       0       0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0
  3293 ;;      Temps:          2       0       0       0       0       0       0
  3294 ;;      Totals:         6       0       0       0       0       0       0
  3295 ;;Total ram usage:        6 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    3
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_lcdInit
  3302 ;;		_adcInit
  3303 ;;		_i2cInit
  3304 ;;		_read_SCL
  3305 ;;		_read_SDA
  3306 ;;		_clear_SCL
  3307 ;;		_clear_SDA
  3308 ;;		_ssdInit
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text24
  3313  0008D0                     __ptext24:
  3314                           	callstack 0
  3315  0008D0                     _pinMode:
  3316                           	callstack 25
  3317  0008D0                     
  3318                           ;io.c: 56: if(pin <8){
  3319  0008D0  BE43               	btfsc	(pinMode@pin+1)^0,7,c
  3320  0008D2  EF76  F004         	goto	u3170
  3321  0008D6  5043               	movf	(pinMode@pin+1)^0,w,c
  3322  0008D8  E107               	bnz	u3171
  3323  0008DA  0E08               	movlw	8
  3324  0008DC  5C42               	subwf	pinMode@pin^0,w,c
  3325  0008DE  B0D8               	btfsc	status,0,c
  3326  0008E0  EF74  F004         	goto	u3171
  3327  0008E4  EF76  F004         	goto	u3170
  3328  0008E8                     u3171:
  3329  0008E8  EFA0  F004         	goto	l3147
  3330  0008EC                     u3170:
  3331  0008EC                     
  3332                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
  3333  0008EC  5044               	movf	pinMode@type^0,w,c
  3334  0008EE  1045               	iorwf	(pinMode@type+1)^0,w,c
  3335  0008F0  B4D8               	btfsc	status,2,c
  3336  0008F2  EF7D  F004         	goto	u3181
  3337  0008F6  EF7F  F004         	goto	u3180
  3338  0008FA                     u3181:
  3339  0008FA  EF8F  F004         	goto	l3145
  3340  0008FE                     u3180:
  3341  0008FE  C042  F046         	movff	pinMode@pin,??_pinMode
  3342  000902  0E01               	movlw	1
  3343  000904  6E47               	movwf	(??_pinMode+1)^0,c
  3344  000906  2A46               	incf	??_pinMode^0,f,c
  3345  000908  EF88  F004         	goto	u3194
  3346  00090C                     u3195:
  3347  00090C  90D8               	bcf	status,0,c
  3348  00090E  3647               	rlcf	(??_pinMode+1)^0,f,c
  3349  000910                     u3194:
  3350  000910  2E46               	decfsz	??_pinMode^0,f,c
  3351  000912  EF86  F004         	goto	u3195
  3352  000916  5047               	movf	(??_pinMode+1)^0,w,c
  3353  000918  1292               	iorwf	146,f,c	;volatile
  3354  00091A  EF8E  F005         	goto	l255
  3355  00091E                     l3145:
  3356                           
  3357                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
  3358  00091E  C042  F046         	movff	pinMode@pin,??_pinMode
  3359  000922  0E01               	movlw	1
  3360  000924  6E47               	movwf	(??_pinMode+1)^0,c
  3361  000926  2A46               	incf	??_pinMode^0,f,c
  3362  000928  EF98  F004         	goto	u3204
  3363  00092C                     u3205:
  3364  00092C  90D8               	bcf	status,0,c
  3365  00092E  3647               	rlcf	(??_pinMode+1)^0,f,c
  3366  000930                     u3204:
  3367  000930  2E46               	decfsz	??_pinMode^0,f,c
  3368  000932  EF96  F004         	goto	u3205
  3369  000936  5047               	movf	(??_pinMode+1)^0,w,c
  3370  000938  0AFF               	xorlw	255
  3371  00093A  1692               	andwf	146,f,c	;volatile
  3372  00093C  EF8E  F005         	goto	l255
  3373  000940                     l3147:
  3374  000940  BE43               	btfsc	(pinMode@pin+1)^0,7,c
  3375  000942  EFAE  F004         	goto	u3210
  3376  000946  5043               	movf	(pinMode@pin+1)^0,w,c
  3377  000948  E107               	bnz	u3211
  3378  00094A  0E10               	movlw	16
  3379  00094C  5C42               	subwf	pinMode@pin^0,w,c
  3380  00094E  B0D8               	btfsc	status,0,c
  3381  000950  EFAC  F004         	goto	u3211
  3382  000954  EFAE  F004         	goto	u3210
  3383  000958                     u3211:
  3384  000958  EFDC  F004         	goto	l3155
  3385  00095C                     u3210:
  3386  00095C                     
  3387                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
  3388  00095C  5044               	movf	pinMode@type^0,w,c
  3389  00095E  1045               	iorwf	(pinMode@type+1)^0,w,c
  3390  000960  B4D8               	btfsc	status,2,c
  3391  000962  EFB5  F004         	goto	u3221
  3392  000966  EFB7  F004         	goto	u3220
  3393  00096A                     u3221:
  3394  00096A  EFC9  F004         	goto	l3153
  3395  00096E                     u3220:
  3396  00096E  C042  F046         	movff	pinMode@pin,??_pinMode
  3397  000972  0EF8               	movlw	-8
  3398  000974  2646               	addwf	??_pinMode^0,f,c
  3399  000976  0E01               	movlw	1
  3400  000978  6E47               	movwf	(??_pinMode+1)^0,c
  3401  00097A  2A46               	incf	??_pinMode^0,f,c
  3402  00097C  EFC2  F004         	goto	u3234
  3403  000980                     u3235:
  3404  000980  90D8               	bcf	status,0,c
  3405  000982  3647               	rlcf	(??_pinMode+1)^0,f,c
  3406  000984                     u3234:
  3407  000984  2E46               	decfsz	??_pinMode^0,f,c
  3408  000986  EFC0  F004         	goto	u3235
  3409  00098A  5047               	movf	(??_pinMode+1)^0,w,c
  3410  00098C  1293               	iorwf	147,f,c	;volatile
  3411  00098E  EF8E  F005         	goto	l255
  3412  000992                     l3153:
  3413                           
  3414                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
  3415  000992  C042  F046         	movff	pinMode@pin,??_pinMode
  3416  000996  0EF8               	movlw	-8
  3417  000998  2646               	addwf	??_pinMode^0,f,c
  3418  00099A  0E01               	movlw	1
  3419  00099C  6E47               	movwf	(??_pinMode+1)^0,c
  3420  00099E  2A46               	incf	??_pinMode^0,f,c
  3421  0009A0  EFD4  F004         	goto	u3244
  3422  0009A4                     u3245:
  3423  0009A4  90D8               	bcf	status,0,c
  3424  0009A6  3647               	rlcf	(??_pinMode+1)^0,f,c
  3425  0009A8                     u3244:
  3426  0009A8  2E46               	decfsz	??_pinMode^0,f,c
  3427  0009AA  EFD2  F004         	goto	u3245
  3428  0009AE  5047               	movf	(??_pinMode+1)^0,w,c
  3429  0009B0  0AFF               	xorlw	255
  3430  0009B2  1693               	andwf	147,f,c	;volatile
  3431  0009B4  EF8E  F005         	goto	l255
  3432  0009B8                     l3155:
  3433  0009B8  BE43               	btfsc	(pinMode@pin+1)^0,7,c
  3434  0009BA  EFEA  F004         	goto	u3250
  3435  0009BE  5043               	movf	(pinMode@pin+1)^0,w,c
  3436  0009C0  E107               	bnz	u3251
  3437  0009C2  0E18               	movlw	24
  3438  0009C4  5C42               	subwf	pinMode@pin^0,w,c
  3439  0009C6  B0D8               	btfsc	status,0,c
  3440  0009C8  EFE8  F004         	goto	u3251
  3441  0009CC  EFEA  F004         	goto	u3250
  3442  0009D0                     u3251:
  3443  0009D0  EF18  F005         	goto	l3163
  3444  0009D4                     u3250:
  3445  0009D4                     
  3446                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
  3447  0009D4  5044               	movf	pinMode@type^0,w,c
  3448  0009D6  1045               	iorwf	(pinMode@type+1)^0,w,c
  3449  0009D8  B4D8               	btfsc	status,2,c
  3450  0009DA  EFF1  F004         	goto	u3261
  3451  0009DE  EFF3  F004         	goto	u3260
  3452  0009E2                     u3261:
  3453  0009E2  EF05  F005         	goto	l3161
  3454  0009E6                     u3260:
  3455  0009E6  C042  F046         	movff	pinMode@pin,??_pinMode
  3456  0009EA  0EF0               	movlw	-16
  3457  0009EC  2646               	addwf	??_pinMode^0,f,c
  3458  0009EE  0E01               	movlw	1
  3459  0009F0  6E47               	movwf	(??_pinMode+1)^0,c
  3460  0009F2  2A46               	incf	??_pinMode^0,f,c
  3461  0009F4  EFFE  F004         	goto	u3274
  3462  0009F8                     u3275:
  3463  0009F8  90D8               	bcf	status,0,c
  3464  0009FA  3647               	rlcf	(??_pinMode+1)^0,f,c
  3465  0009FC                     u3274:
  3466  0009FC  2E46               	decfsz	??_pinMode^0,f,c
  3467  0009FE  EFFC  F004         	goto	u3275
  3468  000A02  5047               	movf	(??_pinMode+1)^0,w,c
  3469  000A04  1294               	iorwf	148,f,c	;volatile
  3470  000A06  EF8E  F005         	goto	l255
  3471  000A0A                     l3161:
  3472                           
  3473                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
  3474  000A0A  C042  F046         	movff	pinMode@pin,??_pinMode
  3475  000A0E  0EF0               	movlw	-16
  3476  000A10  2646               	addwf	??_pinMode^0,f,c
  3477  000A12  0E01               	movlw	1
  3478  000A14  6E47               	movwf	(??_pinMode+1)^0,c
  3479  000A16  2A46               	incf	??_pinMode^0,f,c
  3480  000A18  EF10  F005         	goto	u3284
  3481  000A1C                     u3285:
  3482  000A1C  90D8               	bcf	status,0,c
  3483  000A1E  3647               	rlcf	(??_pinMode+1)^0,f,c
  3484  000A20                     u3284:
  3485  000A20  2E46               	decfsz	??_pinMode^0,f,c
  3486  000A22  EF0E  F005         	goto	u3285
  3487  000A26  5047               	movf	(??_pinMode+1)^0,w,c
  3488  000A28  0AFF               	xorlw	255
  3489  000A2A  1694               	andwf	148,f,c	;volatile
  3490  000A2C  EF8E  F005         	goto	l255
  3491  000A30                     l3163:
  3492  000A30  BE43               	btfsc	(pinMode@pin+1)^0,7,c
  3493  000A32  EF26  F005         	goto	u3290
  3494  000A36  5043               	movf	(pinMode@pin+1)^0,w,c
  3495  000A38  E107               	bnz	u3291
  3496  000A3A  0E20               	movlw	32
  3497  000A3C  5C42               	subwf	pinMode@pin^0,w,c
  3498  000A3E  B0D8               	btfsc	status,0,c
  3499  000A40  EF24  F005         	goto	u3291
  3500  000A44  EF26  F005         	goto	u3290
  3501  000A48                     u3291:
  3502  000A48  EF54  F005         	goto	l3171
  3503  000A4C                     u3290:
  3504  000A4C                     
  3505                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
  3506  000A4C  5044               	movf	pinMode@type^0,w,c
  3507  000A4E  1045               	iorwf	(pinMode@type+1)^0,w,c
  3508  000A50  B4D8               	btfsc	status,2,c
  3509  000A52  EF2D  F005         	goto	u3301
  3510  000A56  EF2F  F005         	goto	u3300
  3511  000A5A                     u3301:
  3512  000A5A  EF41  F005         	goto	l3169
  3513  000A5E                     u3300:
  3514  000A5E  C042  F046         	movff	pinMode@pin,??_pinMode
  3515  000A62  0EE8               	movlw	-24
  3516  000A64  2646               	addwf	??_pinMode^0,f,c
  3517  000A66  0E01               	movlw	1
  3518  000A68  6E47               	movwf	(??_pinMode+1)^0,c
  3519  000A6A  2A46               	incf	??_pinMode^0,f,c
  3520  000A6C  EF3A  F005         	goto	u3314
  3521  000A70                     u3315:
  3522  000A70  90D8               	bcf	status,0,c
  3523  000A72  3647               	rlcf	(??_pinMode+1)^0,f,c
  3524  000A74                     u3314:
  3525  000A74  2E46               	decfsz	??_pinMode^0,f,c
  3526  000A76  EF38  F005         	goto	u3315
  3527  000A7A  5047               	movf	(??_pinMode+1)^0,w,c
  3528  000A7C  1295               	iorwf	149,f,c	;volatile
  3529  000A7E  EF8E  F005         	goto	l255
  3530  000A82                     l3169:
  3531                           
  3532                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
  3533  000A82  C042  F046         	movff	pinMode@pin,??_pinMode
  3534  000A86  0EE8               	movlw	-24
  3535  000A88  2646               	addwf	??_pinMode^0,f,c
  3536  000A8A  0E01               	movlw	1
  3537  000A8C  6E47               	movwf	(??_pinMode+1)^0,c
  3538  000A8E  2A46               	incf	??_pinMode^0,f,c
  3539  000A90  EF4C  F005         	goto	u3324
  3540  000A94                     u3325:
  3541  000A94  90D8               	bcf	status,0,c
  3542  000A96  3647               	rlcf	(??_pinMode+1)^0,f,c
  3543  000A98                     u3324:
  3544  000A98  2E46               	decfsz	??_pinMode^0,f,c
  3545  000A9A  EF4A  F005         	goto	u3325
  3546  000A9E  5047               	movf	(??_pinMode+1)^0,w,c
  3547  000AA0  0AFF               	xorlw	255
  3548  000AA2  1695               	andwf	149,f,c	;volatile
  3549  000AA4  EF8E  F005         	goto	l255
  3550  000AA8                     l3171:
  3551  000AA8  BE43               	btfsc	(pinMode@pin+1)^0,7,c
  3552  000AAA  EF62  F005         	goto	u3330
  3553  000AAE  5043               	movf	(pinMode@pin+1)^0,w,c
  3554  000AB0  E107               	bnz	u3331
  3555  000AB2  0E28               	movlw	40
  3556  000AB4  5C42               	subwf	pinMode@pin^0,w,c
  3557  000AB6  B0D8               	btfsc	status,0,c
  3558  000AB8  EF60  F005         	goto	u3331
  3559  000ABC  EF62  F005         	goto	u3330
  3560  000AC0                     u3331:
  3561  000AC0  EF8E  F005         	goto	l255
  3562  000AC4                     u3330:
  3563  000AC4                     
  3564                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
  3565  000AC4  5044               	movf	pinMode@type^0,w,c
  3566  000AC6  1045               	iorwf	(pinMode@type+1)^0,w,c
  3567  000AC8  B4D8               	btfsc	status,2,c
  3568  000ACA  EF69  F005         	goto	u3341
  3569  000ACE  EF6B  F005         	goto	u3340
  3570  000AD2                     u3341:
  3571  000AD2  EF7D  F005         	goto	l3177
  3572  000AD6                     u3340:
  3573  000AD6  C042  F046         	movff	pinMode@pin,??_pinMode
  3574  000ADA  0EE0               	movlw	-32
  3575  000ADC  2646               	addwf	??_pinMode^0,f,c
  3576  000ADE  0E01               	movlw	1
  3577  000AE0  6E47               	movwf	(??_pinMode+1)^0,c
  3578  000AE2  2A46               	incf	??_pinMode^0,f,c
  3579  000AE4  EF76  F005         	goto	u3354
  3580  000AE8                     u3355:
  3581  000AE8  90D8               	bcf	status,0,c
  3582  000AEA  3647               	rlcf	(??_pinMode+1)^0,f,c
  3583  000AEC                     u3354:
  3584  000AEC  2E46               	decfsz	??_pinMode^0,f,c
  3585  000AEE  EF74  F005         	goto	u3355
  3586  000AF2  5047               	movf	(??_pinMode+1)^0,w,c
  3587  000AF4  1296               	iorwf	150,f,c	;volatile
  3588  000AF6  EF8E  F005         	goto	l255
  3589  000AFA                     l3177:
  3590                           
  3591                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  3592  000AFA  C042  F046         	movff	pinMode@pin,??_pinMode
  3593  000AFE  0EE0               	movlw	-32
  3594  000B00  2646               	addwf	??_pinMode^0,f,c
  3595  000B02  0E01               	movlw	1
  3596  000B04  6E47               	movwf	(??_pinMode+1)^0,c
  3597  000B06  2A46               	incf	??_pinMode^0,f,c
  3598  000B08  EF88  F005         	goto	u3364
  3599  000B0C                     u3365:
  3600  000B0C  90D8               	bcf	status,0,c
  3601  000B0E  3647               	rlcf	(??_pinMode+1)^0,f,c
  3602  000B10                     u3364:
  3603  000B10  2E46               	decfsz	??_pinMode^0,f,c
  3604  000B12  EF86  F005         	goto	u3365
  3605  000B16  5047               	movf	(??_pinMode+1)^0,w,c
  3606  000B18  0AFF               	xorlw	255
  3607  000B1A  1696               	andwf	150,f,c	;volatile
  3608  000B1C                     l255:
  3609  000B1C  0012               	return		;funcret
  3610  000B1E                     __end_of_pinMode:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function _lcdCommand *****************
  3614 ;; Defined at:
  3615 ;;		line 48 in file "lcd.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  cmd             1    wreg     unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  cmd             1   22[COMRAM] unsigned char 
  3620 ;;  old_D           1   21[COMRAM] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3630 ;;      Params:         0       0       0       0       0       0       0
  3631 ;;      Locals:         2       0       0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0
  3633 ;;      Totals:         2       0       0       0       0       0       0
  3634 ;;Total ram usage:        2 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    5
  3637 ;; This function calls:
  3638 ;;		_Delay2ms
  3639 ;;		_Delay40us
  3640 ;;		_digitalWrite
  3641 ;; This function is called by:
  3642 ;;		_lcdInit
  3643 ;;		_cmd
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text25
  3648  0016EE                     __ptext25:
  3649                           	callstack 0
  3650  0016EE                     _lcdCommand:
  3651                           	callstack 22
  3652                           
  3653                           ;incstack = 0
  3654                           ;lcdCommand@cmd stored from wreg
  3655  0016EE  6E49               	movwf	lcdCommand@cmd^0,c
  3656  0016F0                     
  3657                           ;lcd.c: 50: unsigned char old_D;;lcd.c: 51: old_D = PORTD;
  3658  0016F0  CF83 F048          	movff	3971,lcdCommand@old_D	;volatile
  3659  0016F4                     
  3660                           ;lcd.c: 54: TRISD = 0x00;
  3661  0016F4  0E00               	movlw	0
  3662  0016F6  6E95               	movwf	149,c	;volatile
  3663  0016F8                     
  3664                           ;lcd.c: 56: digitalWrite(PIN_E2, 0);
  3665  0016F8  0E00               	movlw	0
  3666  0016FA  6E43               	movwf	(digitalWrite@pin+1)^0,c
  3667  0016FC  0E22               	movlw	34
  3668  0016FE  6E42               	movwf	digitalWrite@pin^0,c
  3669  001700  0E00               	movlw	0
  3670  001702  6E45               	movwf	(digitalWrite@value+1)^0,c
  3671  001704  0E00               	movlw	0
  3672  001706  6E44               	movwf	digitalWrite@value^0,c
  3673  001708  EC8F  F005         	call	_digitalWrite	;wreg free
  3674  00170C                     
  3675                           ;lcd.c: 57: PORTD = cmd;
  3676  00170C  C049  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3677  001710                     
  3678                           ;lcd.c: 59: digitalWrite(PIN_E1, 1);
  3679  001710  0E00               	movlw	0
  3680  001712  6E43               	movwf	(digitalWrite@pin+1)^0,c
  3681  001714  0E21               	movlw	33
  3682  001716  6E42               	movwf	digitalWrite@pin^0,c
  3683  001718  0E00               	movlw	0
  3684  00171A  6E45               	movwf	(digitalWrite@value+1)^0,c
  3685  00171C  0E01               	movlw	1
  3686  00171E  6E44               	movwf	digitalWrite@value^0,c
  3687  001720  EC8F  F005         	call	_digitalWrite	;wreg free
  3688  001724                     
  3689                           ;lcd.c: 60: digitalWrite(PIN_E1, 0);
  3690  001724  0E00               	movlw	0
  3691  001726  6E43               	movwf	(digitalWrite@pin+1)^0,c
  3692  001728  0E21               	movlw	33
  3693  00172A  6E42               	movwf	digitalWrite@pin^0,c
  3694  00172C  0E00               	movlw	0
  3695  00172E  6E45               	movwf	(digitalWrite@value+1)^0,c
  3696  001730  0E00               	movlw	0
  3697  001732  6E44               	movwf	digitalWrite@value^0,c
  3698  001734  EC8F  F005         	call	_digitalWrite	;wreg free
  3699  001738                     
  3700                           ;lcd.c: 63: PORTD= old_D;
  3701  001738  C048  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3702  00173C                     
  3703                           ;lcd.c: 65: if((cmd == 0x02)||(cmd == 0x01)){
  3704  00173C  0E02               	movlw	2
  3705  00173E  1849               	xorwf	lcdCommand@cmd^0,w,c
  3706  001740  B4D8               	btfsc	status,2,c
  3707  001742  EFA5  F00B         	goto	u3151
  3708  001746  EFA7  F00B         	goto	u3150
  3709  00174A                     u3151:
  3710  00174A  EFAF  F00B         	goto	l3113
  3711  00174E                     u3150:
  3712  00174E  0449               	decf	lcdCommand@cmd^0,w,c
  3713  001750  A4D8               	btfss	status,2,c
  3714  001752  EFAD  F00B         	goto	u3161
  3715  001756  EFAF  F00B         	goto	u3160
  3716  00175A                     u3161:
  3717  00175A  EFB3  F00B         	goto	l3115
  3718  00175E                     u3160:
  3719  00175E                     l3113:
  3720                           
  3721                           ;lcd.c: 66: Delay2ms();
  3722  00175E  ECE9  F00C         	call	_Delay2ms	;wreg free
  3723                           
  3724                           ;lcd.c: 67: }else{
  3725  001762  EFB5  F00B         	goto	l316
  3726  001766                     l3115:
  3727                           
  3728                           ;lcd.c: 68: Delay40us();
  3729  001766  EC03  F00D         	call	_Delay40us	;wreg free
  3730  00176A                     l316:
  3731  00176A  0012               	return		;funcret
  3732  00176C                     __end_of_lcdCommand:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _digitalWrite *****************
  3736 ;; Defined at:
  3737 ;;		line 14 in file "io.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  pin             2   15[COMRAM] int 
  3740 ;;  value           2   17[COMRAM] int 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3752 ;;      Params:         4       0       0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0
  3754 ;;      Temps:          2       0       0       0       0       0       0
  3755 ;;      Totals:         6       0       0       0       0       0       0
  3756 ;;Total ram usage:        6 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    3
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_lcdCommand
  3763 ;;		_lcdData
  3764 ;;		_clear_SCL
  3765 ;;		_clear_SDA
  3766 ;;		_ssdUpdate
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text26
  3771  000B1E                     __ptext26:
  3772                           	callstack 0
  3773  000B1E                     _digitalWrite:
  3774                           	callstack 23
  3775  000B1E                     
  3776                           ;io.c: 16: if(pin <8){
  3777  000B1E  BE43               	btfsc	(digitalWrite@pin+1)^0,7,c
  3778  000B20  EF9D  F005         	goto	u2830
  3779  000B24  5043               	movf	(digitalWrite@pin+1)^0,w,c
  3780  000B26  E107               	bnz	u2831
  3781  000B28  0E08               	movlw	8
  3782  000B2A  5C42               	subwf	digitalWrite@pin^0,w,c
  3783  000B2C  B0D8               	btfsc	status,0,c
  3784  000B2E  EF9B  F005         	goto	u2831
  3785  000B32  EF9D  F005         	goto	u2830
  3786  000B36                     u2831:
  3787  000B36  EFC7  F005         	goto	l2995
  3788  000B3A                     u2830:
  3789  000B3A                     
  3790                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  3791  000B3A  5044               	movf	digitalWrite@value^0,w,c
  3792  000B3C  1045               	iorwf	(digitalWrite@value+1)^0,w,c
  3793  000B3E  B4D8               	btfsc	status,2,c
  3794  000B40  EFA4  F005         	goto	u2841
  3795  000B44  EFA6  F005         	goto	u2840
  3796  000B48                     u2841:
  3797  000B48  EFB6  F005         	goto	l2993
  3798  000B4C                     u2840:
  3799  000B4C  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3800  000B50  0E01               	movlw	1
  3801  000B52  6E47               	movwf	(??_digitalWrite+1)^0,c
  3802  000B54  2A46               	incf	??_digitalWrite^0,f,c
  3803  000B56  EFAF  F005         	goto	u2854
  3804  000B5A                     u2855:
  3805  000B5A  90D8               	bcf	status,0,c
  3806  000B5C  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3807  000B5E                     u2854:
  3808  000B5E  2E46               	decfsz	??_digitalWrite^0,f,c
  3809  000B60  EFAD  F005         	goto	u2855
  3810  000B64  5047               	movf	(??_digitalWrite+1)^0,w,c
  3811  000B66  1280               	iorwf	128,f,c	;volatile
  3812  000B68  EFB5  F006         	goto	l221
  3813  000B6C                     l2993:
  3814                           
  3815                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  3816  000B6C  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3817  000B70  0E01               	movlw	1
  3818  000B72  6E47               	movwf	(??_digitalWrite+1)^0,c
  3819  000B74  2A46               	incf	??_digitalWrite^0,f,c
  3820  000B76  EFBF  F005         	goto	u2864
  3821  000B7A                     u2865:
  3822  000B7A  90D8               	bcf	status,0,c
  3823  000B7C  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3824  000B7E                     u2864:
  3825  000B7E  2E46               	decfsz	??_digitalWrite^0,f,c
  3826  000B80  EFBD  F005         	goto	u2865
  3827  000B84  5047               	movf	(??_digitalWrite+1)^0,w,c
  3828  000B86  0AFF               	xorlw	255
  3829  000B88  1680               	andwf	128,f,c	;volatile
  3830  000B8A  EFB5  F006         	goto	l221
  3831  000B8E                     l2995:
  3832  000B8E  BE43               	btfsc	(digitalWrite@pin+1)^0,7,c
  3833  000B90  EFD5  F005         	goto	u2870
  3834  000B94  5043               	movf	(digitalWrite@pin+1)^0,w,c
  3835  000B96  E107               	bnz	u2871
  3836  000B98  0E10               	movlw	16
  3837  000B9A  5C42               	subwf	digitalWrite@pin^0,w,c
  3838  000B9C  B0D8               	btfsc	status,0,c
  3839  000B9E  EFD3  F005         	goto	u2871
  3840  000BA2  EFD5  F005         	goto	u2870
  3841  000BA6                     u2871:
  3842  000BA6  EF03  F006         	goto	l3003
  3843  000BAA                     u2870:
  3844  000BAA                     
  3845                           ;io.c: 20: pin -=8;
  3846  000BAA  0EF8               	movlw	248
  3847  000BAC  2642               	addwf	digitalWrite@pin^0,f,c
  3848  000BAE  0EFF               	movlw	255
  3849  000BB0  2243               	addwfc	(digitalWrite@pin+1)^0,f,c
  3850                           
  3851                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  3852  000BB2  5044               	movf	digitalWrite@value^0,w,c
  3853  000BB4  1045               	iorwf	(digitalWrite@value+1)^0,w,c
  3854  000BB6  B4D8               	btfsc	status,2,c
  3855  000BB8  EFE0  F005         	goto	u2881
  3856  000BBC  EFE2  F005         	goto	u2880
  3857  000BC0                     u2881:
  3858  000BC0  EFF2  F005         	goto	l3001
  3859  000BC4                     u2880:
  3860  000BC4  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3861  000BC8  0E01               	movlw	1
  3862  000BCA  6E47               	movwf	(??_digitalWrite+1)^0,c
  3863  000BCC  2A46               	incf	??_digitalWrite^0,f,c
  3864  000BCE  EFEB  F005         	goto	u2894
  3865  000BD2                     u2895:
  3866  000BD2  90D8               	bcf	status,0,c
  3867  000BD4  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3868  000BD6                     u2894:
  3869  000BD6  2E46               	decfsz	??_digitalWrite^0,f,c
  3870  000BD8  EFE9  F005         	goto	u2895
  3871  000BDC  5047               	movf	(??_digitalWrite+1)^0,w,c
  3872  000BDE  1281               	iorwf	129,f,c	;volatile
  3873  000BE0  EFB5  F006         	goto	l221
  3874  000BE4                     l3001:
  3875                           
  3876                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  3877  000BE4  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3878  000BE8  0E01               	movlw	1
  3879  000BEA  6E47               	movwf	(??_digitalWrite+1)^0,c
  3880  000BEC  2A46               	incf	??_digitalWrite^0,f,c
  3881  000BEE  EFFB  F005         	goto	u2904
  3882  000BF2                     u2905:
  3883  000BF2  90D8               	bcf	status,0,c
  3884  000BF4  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3885  000BF6                     u2904:
  3886  000BF6  2E46               	decfsz	??_digitalWrite^0,f,c
  3887  000BF8  EFF9  F005         	goto	u2905
  3888  000BFC  5047               	movf	(??_digitalWrite+1)^0,w,c
  3889  000BFE  0AFF               	xorlw	255
  3890  000C00  1681               	andwf	129,f,c	;volatile
  3891  000C02  EFB5  F006         	goto	l221
  3892  000C06                     l3003:
  3893  000C06  BE43               	btfsc	(digitalWrite@pin+1)^0,7,c
  3894  000C08  EF11  F006         	goto	u2910
  3895  000C0C  5043               	movf	(digitalWrite@pin+1)^0,w,c
  3896  000C0E  E107               	bnz	u2911
  3897  000C10  0E18               	movlw	24
  3898  000C12  5C42               	subwf	digitalWrite@pin^0,w,c
  3899  000C14  B0D8               	btfsc	status,0,c
  3900  000C16  EF0F  F006         	goto	u2911
  3901  000C1A  EF11  F006         	goto	u2910
  3902  000C1E                     u2911:
  3903  000C1E  EF3F  F006         	goto	l3011
  3904  000C22                     u2910:
  3905  000C22                     
  3906                           ;io.c: 24: pin -=16;
  3907  000C22  0EF0               	movlw	240
  3908  000C24  2642               	addwf	digitalWrite@pin^0,f,c
  3909  000C26  0EFF               	movlw	255
  3910  000C28  2243               	addwfc	(digitalWrite@pin+1)^0,f,c
  3911                           
  3912                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  3913  000C2A  5044               	movf	digitalWrite@value^0,w,c
  3914  000C2C  1045               	iorwf	(digitalWrite@value+1)^0,w,c
  3915  000C2E  B4D8               	btfsc	status,2,c
  3916  000C30  EF1C  F006         	goto	u2921
  3917  000C34  EF1E  F006         	goto	u2920
  3918  000C38                     u2921:
  3919  000C38  EF2E  F006         	goto	l3009
  3920  000C3C                     u2920:
  3921  000C3C  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3922  000C40  0E01               	movlw	1
  3923  000C42  6E47               	movwf	(??_digitalWrite+1)^0,c
  3924  000C44  2A46               	incf	??_digitalWrite^0,f,c
  3925  000C46  EF27  F006         	goto	u2934
  3926  000C4A                     u2935:
  3927  000C4A  90D8               	bcf	status,0,c
  3928  000C4C  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3929  000C4E                     u2934:
  3930  000C4E  2E46               	decfsz	??_digitalWrite^0,f,c
  3931  000C50  EF25  F006         	goto	u2935
  3932  000C54  5047               	movf	(??_digitalWrite+1)^0,w,c
  3933  000C56  1282               	iorwf	130,f,c	;volatile
  3934  000C58  EFB5  F006         	goto	l221
  3935  000C5C                     l3009:
  3936                           
  3937                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  3938  000C5C  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3939  000C60  0E01               	movlw	1
  3940  000C62  6E47               	movwf	(??_digitalWrite+1)^0,c
  3941  000C64  2A46               	incf	??_digitalWrite^0,f,c
  3942  000C66  EF37  F006         	goto	u2944
  3943  000C6A                     u2945:
  3944  000C6A  90D8               	bcf	status,0,c
  3945  000C6C  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3946  000C6E                     u2944:
  3947  000C6E  2E46               	decfsz	??_digitalWrite^0,f,c
  3948  000C70  EF35  F006         	goto	u2945
  3949  000C74  5047               	movf	(??_digitalWrite+1)^0,w,c
  3950  000C76  0AFF               	xorlw	255
  3951  000C78  1682               	andwf	130,f,c	;volatile
  3952  000C7A  EFB5  F006         	goto	l221
  3953  000C7E                     l3011:
  3954  000C7E  BE43               	btfsc	(digitalWrite@pin+1)^0,7,c
  3955  000C80  EF4D  F006         	goto	u2950
  3956  000C84  5043               	movf	(digitalWrite@pin+1)^0,w,c
  3957  000C86  E107               	bnz	u2951
  3958  000C88  0E20               	movlw	32
  3959  000C8A  5C42               	subwf	digitalWrite@pin^0,w,c
  3960  000C8C  B0D8               	btfsc	status,0,c
  3961  000C8E  EF4B  F006         	goto	u2951
  3962  000C92  EF4D  F006         	goto	u2950
  3963  000C96                     u2951:
  3964  000C96  EF7B  F006         	goto	l3019
  3965  000C9A                     u2950:
  3966  000C9A                     
  3967                           ;io.c: 28: pin -=24;
  3968  000C9A  0EE8               	movlw	232
  3969  000C9C  2642               	addwf	digitalWrite@pin^0,f,c
  3970  000C9E  0EFF               	movlw	255
  3971  000CA0  2243               	addwfc	(digitalWrite@pin+1)^0,f,c
  3972                           
  3973                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  3974  000CA2  5044               	movf	digitalWrite@value^0,w,c
  3975  000CA4  1045               	iorwf	(digitalWrite@value+1)^0,w,c
  3976  000CA6  B4D8               	btfsc	status,2,c
  3977  000CA8  EF58  F006         	goto	u2961
  3978  000CAC  EF5A  F006         	goto	u2960
  3979  000CB0                     u2961:
  3980  000CB0  EF6A  F006         	goto	l3017
  3981  000CB4                     u2960:
  3982  000CB4  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  3983  000CB8  0E01               	movlw	1
  3984  000CBA  6E47               	movwf	(??_digitalWrite+1)^0,c
  3985  000CBC  2A46               	incf	??_digitalWrite^0,f,c
  3986  000CBE  EF63  F006         	goto	u2974
  3987  000CC2                     u2975:
  3988  000CC2  90D8               	bcf	status,0,c
  3989  000CC4  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  3990  000CC6                     u2974:
  3991  000CC6  2E46               	decfsz	??_digitalWrite^0,f,c
  3992  000CC8  EF61  F006         	goto	u2975
  3993  000CCC  5047               	movf	(??_digitalWrite+1)^0,w,c
  3994  000CCE  1283               	iorwf	131,f,c	;volatile
  3995  000CD0  EFB5  F006         	goto	l221
  3996  000CD4                     l3017:
  3997                           
  3998                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  3999  000CD4  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  4000  000CD8  0E01               	movlw	1
  4001  000CDA  6E47               	movwf	(??_digitalWrite+1)^0,c
  4002  000CDC  2A46               	incf	??_digitalWrite^0,f,c
  4003  000CDE  EF73  F006         	goto	u2984
  4004  000CE2                     u2985:
  4005  000CE2  90D8               	bcf	status,0,c
  4006  000CE4  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  4007  000CE6                     u2984:
  4008  000CE6  2E46               	decfsz	??_digitalWrite^0,f,c
  4009  000CE8  EF71  F006         	goto	u2985
  4010  000CEC  5047               	movf	(??_digitalWrite+1)^0,w,c
  4011  000CEE  0AFF               	xorlw	255
  4012  000CF0  1683               	andwf	131,f,c	;volatile
  4013  000CF2  EFB5  F006         	goto	l221
  4014  000CF6                     l3019:
  4015  000CF6  BE43               	btfsc	(digitalWrite@pin+1)^0,7,c
  4016  000CF8  EF89  F006         	goto	u2990
  4017  000CFC  5043               	movf	(digitalWrite@pin+1)^0,w,c
  4018  000CFE  E107               	bnz	u2991
  4019  000D00  0E28               	movlw	40
  4020  000D02  5C42               	subwf	digitalWrite@pin^0,w,c
  4021  000D04  B0D8               	btfsc	status,0,c
  4022  000D06  EF87  F006         	goto	u2991
  4023  000D0A  EF89  F006         	goto	u2990
  4024  000D0E                     u2991:
  4025  000D0E  EFB5  F006         	goto	l221
  4026  000D12                     u2990:
  4027  000D12                     
  4028                           ;io.c: 32: pin -=32;
  4029  000D12  0EE0               	movlw	224
  4030  000D14  2642               	addwf	digitalWrite@pin^0,f,c
  4031  000D16  0EFF               	movlw	255
  4032  000D18  2243               	addwfc	(digitalWrite@pin+1)^0,f,c
  4033                           
  4034                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  4035  000D1A  5044               	movf	digitalWrite@value^0,w,c
  4036  000D1C  1045               	iorwf	(digitalWrite@value+1)^0,w,c
  4037  000D1E  B4D8               	btfsc	status,2,c
  4038  000D20  EF94  F006         	goto	u3001
  4039  000D24  EF96  F006         	goto	u3000
  4040  000D28                     u3001:
  4041  000D28  EFA6  F006         	goto	l3025
  4042  000D2C                     u3000:
  4043  000D2C  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  4044  000D30  0E01               	movlw	1
  4045  000D32  6E47               	movwf	(??_digitalWrite+1)^0,c
  4046  000D34  2A46               	incf	??_digitalWrite^0,f,c
  4047  000D36  EF9F  F006         	goto	u3014
  4048  000D3A                     u3015:
  4049  000D3A  90D8               	bcf	status,0,c
  4050  000D3C  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  4051  000D3E                     u3014:
  4052  000D3E  2E46               	decfsz	??_digitalWrite^0,f,c
  4053  000D40  EF9D  F006         	goto	u3015
  4054  000D44  5047               	movf	(??_digitalWrite+1)^0,w,c
  4055  000D46  1284               	iorwf	132,f,c	;volatile
  4056  000D48  EFB5  F006         	goto	l221
  4057  000D4C                     l3025:
  4058                           
  4059                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  4060  000D4C  C042  F046         	movff	digitalWrite@pin,??_digitalWrite
  4061  000D50  0E01               	movlw	1
  4062  000D52  6E47               	movwf	(??_digitalWrite+1)^0,c
  4063  000D54  2A46               	incf	??_digitalWrite^0,f,c
  4064  000D56  EFAF  F006         	goto	u3024
  4065  000D5A                     u3025:
  4066  000D5A  90D8               	bcf	status,0,c
  4067  000D5C  3647               	rlcf	(??_digitalWrite+1)^0,f,c
  4068  000D5E                     u3024:
  4069  000D5E  2E46               	decfsz	??_digitalWrite^0,f,c
  4070  000D60  EFAD  F006         	goto	u3025
  4071  000D64  5047               	movf	(??_digitalWrite+1)^0,w,c
  4072  000D66  0AFF               	xorlw	255
  4073  000D68  1684               	andwf	132,f,c	;volatile
  4074  000D6A                     l221:
  4075  000D6A  0012               	return		;funcret
  4076  000D6C                     __end_of_digitalWrite:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _Delay2ms *****************
  4080 ;; Defined at:
  4081 ;;		line 37 in file "lcd.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  i               1   16[COMRAM] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4095 ;;      Params:         0       0       0       0       0       0       0
  4096 ;;      Locals:         1       0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0
  4098 ;;      Totals:         1       0       0       0       0       0       0
  4099 ;;Total ram usage:        1 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    4
  4102 ;; This function calls:
  4103 ;;		_Delay40us
  4104 ;; This function is called by:
  4105 ;;		_lcdCommand
  4106 ;;		_lcdInit
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text27
  4111  0019D2                     __ptext27:
  4112                           	callstack 0
  4113  0019D2                     _Delay2ms:
  4114                           	callstack 22
  4115  0019D2                     
  4116                           ;lcd.c: 39: unsigned char i;;lcd.c: 40: for(i=0; i < 50; i++)
  4117  0019D2  0E00               	movlw	0
  4118  0019D4  6E43               	movwf	Delay2ms@i^0,c
  4119  0019D6                     l3033:
  4120                           
  4121                           ;lcd.c: 41: {;lcd.c: 42: Delay40us();
  4122  0019D6  EC03  F00D         	call	_Delay40us	;wreg free
  4123  0019DA  2A43               	incf	Delay2ms@i^0,f,c
  4124  0019DC  0E31               	movlw	49
  4125  0019DE  6443               	cpfsgt	Delay2ms@i^0,c
  4126  0019E0  EFF4  F00C         	goto	u3031
  4127  0019E4  EFF6  F00C         	goto	u3030
  4128  0019E8                     u3031:
  4129  0019E8  EFEB  F00C         	goto	l3033
  4130  0019EC                     u3030:
  4131  0019EC  0012               	return		;funcret
  4132  0019EE                     __end_of_Delay2ms:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _Delay40us *****************
  4136 ;; Defined at:
  4137 ;;		line 31 in file "lcd.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  i               1   15[COMRAM] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4151 ;;      Params:         0       0       0       0       0       0       0
  4152 ;;      Locals:         1       0       0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0
  4154 ;;      Totals:         1       0       0       0       0       0       0
  4155 ;;Total ram usage:        1 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    3
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_Delay2ms
  4162 ;;		_lcdCommand
  4163 ;;		_lcdData
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text28
  4168  001A06                     __ptext28:
  4169                           	callstack 0
  4170  001A06                     _Delay40us:
  4171                           	callstack 23
  4172  001A06                     
  4173                           ;lcd.c: 33: unsigned char i;;lcd.c: 34: for(i=0; i < 25; i++);
  4174  001A06  0E00               	movlw	0
  4175  001A08  6E42               	movwf	Delay40us@i^0,c
  4176  001A0A                     l2983:
  4177  001A0A  2A42               	incf	Delay40us@i^0,f,c
  4178  001A0C  0E18               	movlw	24
  4179  001A0E  6442               	cpfsgt	Delay40us@i^0,c
  4180  001A10  EF0C  F00D         	goto	u2821
  4181  001A14  EF0E  F00D         	goto	u2820
  4182  001A18                     u2821:
  4183  001A18  EF05  F00D         	goto	l2983
  4184  001A1C                     u2820:
  4185  001A1C  0012               	return		;funcret
  4186  001A1E                     __end_of_Delay40us:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _kpInit *****************
  4190 ;; Defined at:
  4191 ;;		line 87 in file "keypad.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4205 ;;      Params:         0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0
  4208 ;;      Totals:         0       0       0       0       0       0       0
  4209 ;;Total ram usage:        0 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    3
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_initKp
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text29
  4220  001A66                     __ptext29:
  4221                           	callstack 0
  4222  001A66                     _kpInit:
  4223                           	callstack 26
  4224  001A66                     
  4225                           ;keypad.c: 89: TRISB &= 0x07;
  4226  001A66  0E07               	movlw	7
  4227  001A68  1693               	andwf	147,f,c	;volatile
  4228                           
  4229                           ;keypad.c: 91: TRISD |= 0x0f;
  4230  001A6A  0E0F               	movlw	15
  4231  001A6C  1295               	iorwf	149,f,c	;volatile
  4232  001A6E  0012               	return		;funcret
  4233  001A70                     __end_of_kpInit:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _getLcdDriver *****************
  4237 ;; Defined at:
  4238 ;;		line 22 in file "drv_lcd.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2   15[COMRAM] PTR struct .
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4252 ;;      Params:         2       0       0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0
  4255 ;;      Totals:         2       0       0       0       0       0       0
  4256 ;;Total ram usage:        2 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    3
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text30
  4267  00197E                     __ptext30:
  4268                           	callstack 0
  4269  00197E                     _getLcdDriver:
  4270                           	callstack 27
  4271  00197E                     
  4272                           ;drv_lcd.c: 23: myself.initFunc = initLCD;
  4273  00197E  0E5C               	movlw	low _initLCD
  4274  001980  6E20               	movwf	(_myself@drv_lcd$F591+3)^0,c
  4275  001982  0E1A               	movlw	high _initLCD
  4276  001984  6E21               	movwf	(_myself@drv_lcd$F591+4)^0,c
  4277                           
  4278                           ;drv_lcd.c: 24: my_funcs[LCD_CMD] = cmd;
  4279  001986  0E80               	movlw	low _cmd
  4280  001988  6E2D               	movwf	(_my_funcs@drv_lcd$F595+2)^0,c
  4281  00198A  0E1A               	movlw	high _cmd
  4282  00198C  6E2E               	movwf	(_my_funcs@drv_lcd$F595+3)^0,c
  4283                           
  4284                           ;drv_lcd.c: 25: my_funcs[LCD_DATA] = data;
  4285  00198E  0E78               	movlw	low _data
  4286  001990  6E2B               	movwf	_my_funcs@drv_lcd$F595^0,c
  4287  001992  0E1A               	movlw	high _data
  4288  001994  6E2C               	movwf	(_my_funcs@drv_lcd$F595+1)^0,c
  4289                           
  4290                           ;drv_lcd.c: 26: myself.funcoes = my_funcs;
  4291  001996  0E2B               	movlw	low _my_funcs@drv_lcd$F595
  4292  001998  6E1E               	movwf	(_myself@drv_lcd$F591+1)^0,c
  4293  00199A  0E00               	movlw	high _my_funcs@drv_lcd$F595
  4294  00199C  6E1F               	movwf	(_myself@drv_lcd$F591+2)^0,c
  4295                           
  4296                           ;drv_lcd.c: 27: return &myself;
  4297  00199E  0E1D               	movlw	low _myself@drv_lcd$F591
  4298  0019A0  6E42               	movwf	?_getLcdDriver^0,c
  4299  0019A2  0E00               	movlw	high _myself@drv_lcd$F591
  4300  0019A4  6E43               	movwf	(?_getLcdDriver+1)^0,c
  4301  0019A6  0012               	return		;funcret
  4302  0019A8                     __end_of_getLcdDriver:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _getKeypadDriver *****************
  4306 ;; Defined at:
  4307 ;;		line 23 in file "drv_keypad.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  2   15[COMRAM] PTR struct .
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4321 ;;      Params:         2       0       0       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0
  4324 ;;      Totals:         2       0       0       0       0       0       0
  4325 ;;Total ram usage:        2 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    3
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text31
  4336  0019A8                     __ptext31:
  4337                           	callstack 0
  4338  0019A8                     _getKeypadDriver:
  4339                           	callstack 27
  4340  0019A8                     
  4341                           ;drv_keypad.c: 24: myself.initFunc = initKp;
  4342  0019A8  0E48               	movlw	low _initKp
  4343  0019AA  6E1B               	movwf	(_myself@drv_keypad$F631+3)^0,c
  4344  0019AC  0E1A               	movlw	high _initKp
  4345  0019AE  6E1C               	movwf	(_myself@drv_keypad$F631+4)^0,c
  4346                           
  4347                           ;drv_keypad.c: 25: my_funcs[KP_DB] = debounce;
  4348  0019B0  0E8E               	movlw	low _debounce
  4349  0019B2  6E29               	movwf	(_my_funcs@drv_keypad$F635+2)^0,c
  4350  0019B4  0E1A               	movlw	high _debounce
  4351  0019B6  6E2A               	movwf	(_my_funcs@drv_keypad$F635+3)^0,c
  4352                           
  4353                           ;drv_keypad.c: 26: my_funcs[KP_READ] = read;
  4354  0019B8  0E1E               	movlw	low _read
  4355  0019BA  6E27               	movwf	_my_funcs@drv_keypad$F635^0,c
  4356  0019BC  0E1A               	movlw	high _read
  4357  0019BE  6E28               	movwf	(_my_funcs@drv_keypad$F635+1)^0,c
  4358                           
  4359                           ;drv_keypad.c: 27: myself.funcoes = my_funcs;
  4360  0019C0  0E27               	movlw	low _my_funcs@drv_keypad$F635
  4361  0019C2  6E19               	movwf	(_myself@drv_keypad$F631+1)^0,c
  4362  0019C4  0E00               	movlw	high _my_funcs@drv_keypad$F635
  4363  0019C6  6E1A               	movwf	(_myself@drv_keypad$F631+2)^0,c
  4364                           
  4365                           ;drv_keypad.c: 28: return &myself;
  4366  0019C8  0E18               	movlw	low _myself@drv_keypad$F631
  4367  0019CA  6E42               	movwf	?_getKeypadDriver^0,c
  4368  0019CC  0E00               	movlw	high _myself@drv_keypad$F631
  4369  0019CE  6E43               	movwf	(?_getKeypadDriver+1)^0,c
  4370  0019D0  0012               	return		;funcret
  4371  0019D2                     __end_of_getKeypadDriver:
  4372                           	callstack 0
  4373                           
  4374 ;; *************** function _ISR *****************
  4375 ;; Defined at:
  4376 ;;		line 20 in file "main.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4390 ;;      Params:         0       0       0       0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0
  4392 ;;      Temps:          6       0       0       0       0       0       0
  4393 ;;      Totals:         6       0       0       0       0       0       0
  4394 ;;Total ram usage:        6 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    2
  4397 ;; This function calls:
  4398 ;;		_KernelClock
  4399 ;; This function is called by:
  4400 ;;		Interrupt level 2
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	intcode
  4405  000008                     __pintcode:
  4406                           	callstack 0
  4407  000008                     _ISR:
  4408                           	callstack 22
  4409                           
  4410                           ;incstack = 0
  4411  000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4412  00000A  ED54  F00C         	call	int_func,f	;refresh shadow registers
  4413                           
  4414                           	psect	intcode_body
  4415  0018A8                     __pintcode_body:
  4416                           	callstack 22
  4417  0018A8                     int_func:
  4418                           	callstack 22
  4419  0018A8  0006               	pop		; remove dummy address from shadow register refresh
  4420  0018AA  CFE1 F03C          	movff	fsr1l,??_ISR
  4421  0018AE  CFE2 F03D          	movff	fsr1h,??_ISR+1
  4422  0018B2  CFD9 F03E          	movff	fsr2l,??_ISR+2
  4423  0018B6  CFDA F03F          	movff	fsr2h,??_ISR+3
  4424  0018BA  CFF3 F040          	movff	prodl,??_ISR+4
  4425  0018BE  CFF4 F041          	movff	prodh,??_ISR+5
  4426  0018C2                     
  4427                           ;main.c: 22: if (((INTCON) & (1<<(2)))){
  4428  0018C2  A4F2               	btfss	242,2,c	;volatile
  4429  0018C4  EF66  F00C         	goto	i2u398_41
  4430  0018C8  EF68  F00C         	goto	i2u398_40
  4431  0018CC                     i2u398_41:
  4432  0018CC  EF6F  F00C         	goto	i2l40
  4433  0018D0                     i2u398_40:
  4434  0018D0                     
  4435                           ;main.c: 24: TMR0H = (63535 >> 8);
  4436  0018D0  0EF8               	movlw	248
  4437  0018D2  6ED7               	movwf	215,c	;volatile
  4438                           
  4439                           ;main.c: 25: TMR0L = (63535 & 0x00FF);
  4440  0018D4  0E2F               	movlw	47
  4441  0018D6  6ED6               	movwf	214,c	;volatile
  4442  0018D8                     
  4443                           ;main.c: 27: KernelClock();
  4444  0018D8  EC2D  F00B         	call	_KernelClock	;wreg free
  4445  0018DC                     
  4446                           ;main.c: 30: ((INTCON) &= ~(1<<(2)));
  4447  0018DC  94F2               	bcf	242,2,c	;volatile
  4448  0018DE                     i2l40:
  4449  0018DE  C041  FFF4         	movff	??_ISR+5,prodh
  4450  0018E2  C040  FFF3         	movff	??_ISR+4,prodl
  4451  0018E6  C03F  FFDA         	movff	??_ISR+3,fsr2h
  4452  0018EA  C03E  FFD9         	movff	??_ISR+2,fsr2l
  4453  0018EE  C03D  FFE2         	movff	??_ISR+1,fsr1h
  4454  0018F2  C03C  FFE1         	movff	??_ISR,fsr1l
  4455  0018F6  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4456  0018F8  0011               	retfie		f
  4457  0018FA                     __end_of_ISR:
  4458                           	callstack 0
  4459                           
  4460 ;; *************** function _KernelClock *****************
  4461 ;; Defined at:
  4462 ;;		line 57 in file "kernel.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  proc            1    8[COMRAM] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4476 ;;      Params:         0       0       0       0       0       0       0
  4477 ;;      Locals:         1       0       0       0       0       0       0
  4478 ;;      Temps:          2       0       0       0       0       0       0
  4479 ;;      Totals:         3       0       0       0       0       0       0
  4480 ;;Total ram usage:        3 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    1
  4483 ;; This function calls:
  4484 ;;		i2___awmod
  4485 ;; This function is called by:
  4486 ;;		_ISR
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text33
  4491  00165A                     __ptext33:
  4492                           	callstack 0
  4493  00165A                     _KernelClock:
  4494                           	callstack 22
  4495  00165A                     
  4496                           ;kernel.c: 58: unsigned char proc;;kernel.c: 59: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  4497  00165A  C017  F03B         	movff	_start,KernelClock@proc
  4498  00165E  EF6D  F00B         	goto	i2l3473
  4499  001662                     i2l3467:
  4500                           
  4501                           ;kernel.c: 60: if ((pool[proc]->start)>(-30000)) {
  4502  001662  503B               	movf	KernelClock@proc^0,w,c
  4503  001664  0D02               	mullw	2
  4504  001666  0EB0               	movlw	low _pool
  4505  001668  24F3               	addwf	243,w,c
  4506  00166A  6ED9               	movwf	fsr2l,c
  4507  00166C  0E00               	movlw	high _pool
  4508  00166E  20F4               	addwfc	prodh,w,c
  4509  001670  6EDA               	movwf	fsr2h,c
  4510  001672  EE10 F004          	lfsr	1,4
  4511  001676  50DE               	movf	postinc2,w,c
  4512  001678  26E1               	addwf	fsr1l,f,c
  4513  00167A  50DD               	movf	postdec2,w,c
  4514  00167C  22E2               	addwfc	fsr1h,f,c
  4515  00167E  0E01               	movlw	1
  4516  001680  AEE3               	btfss	plusw1,7,c
  4517  001682  EF4E  F00B         	goto	i2u383_40
  4518  001686  0ED1               	movlw	209
  4519  001688  5CE6               	subwf	postinc1,w,c
  4520  00168A  0E8A               	movlw	138
  4521  00168C  58E6               	subwfb	postinc1,w,c
  4522  00168E  A0D8               	btfss	status,0,c
  4523  001690  EF4C  F00B         	goto	i2u383_41
  4524  001694  EF4E  F00B         	goto	i2u383_40
  4525  001698                     i2u383_41:
  4526  001698  EF5F  F00B         	goto	i2l3471
  4527  00169C                     i2u383_40:
  4528  00169C                     
  4529                           ;kernel.c: 61: pool[proc]->start--;
  4530  00169C  503B               	movf	KernelClock@proc^0,w,c
  4531  00169E  0D02               	mullw	2
  4532  0016A0  0EB0               	movlw	low _pool
  4533  0016A2  24F3               	addwf	243,w,c
  4534  0016A4  6ED9               	movwf	fsr2l,c
  4535  0016A6  0E00               	movlw	high _pool
  4536  0016A8  20F4               	addwfc	prodh,w,c
  4537  0016AA  6EDA               	movwf	fsr2h,c
  4538  0016AC  EE10 F004          	lfsr	1,4
  4539  0016B0  50DE               	movf	postinc2,w,c
  4540  0016B2  26E1               	addwf	fsr1l,f,c
  4541  0016B4  50DD               	movf	postdec2,w,c
  4542  0016B6  22E2               	addwfc	fsr1h,f,c
  4543  0016B8  06E6               	decf	postinc1,f,c
  4544  0016BA  0E00               	movlw	0
  4545  0016BC  5AE5               	subwfb	postdec1,f,c
  4546  0016BE                     i2l3471:
  4547  0016BE  0E01               	movlw	1
  4548  0016C0  243B               	addwf	KernelClock@proc^0,w,c
  4549  0016C2  6E33               	movwf	i2___awmod@dividend^0,c
  4550  0016C4  6A34               	clrf	(i2___awmod@dividend+1)^0,c
  4551  0016C6  0E00               	movlw	0
  4552  0016C8  2234               	addwfc	(i2___awmod@dividend+1)^0,f,c
  4553  0016CA  0E00               	movlw	0
  4554  0016CC  6E36               	movwf	(i2___awmod@divisor+1)^0,c
  4555  0016CE  0E0A               	movlw	10
  4556  0016D0  6E35               	movwf	i2___awmod@divisor^0,c
  4557  0016D2  EC83  F00A         	call	i2___awmod	;wreg free
  4558  0016D6  5033               	movf	?i2___awmod^0,w,c
  4559  0016D8  6E3B               	movwf	KernelClock@proc^0,c
  4560  0016DA                     i2l3473:
  4561  0016DA  5016               	movf	_end^0,w,c
  4562  0016DC  183B               	xorwf	KernelClock@proc^0,w,c
  4563  0016DE  A4D8               	btfss	status,2,c
  4564  0016E0  EF74  F00B         	goto	i2u384_41
  4565  0016E4  EF76  F00B         	goto	i2u384_40
  4566  0016E8                     i2u384_41:
  4567  0016E8  EF31  F00B         	goto	i2l3467
  4568  0016EC                     i2u384_40:
  4569  0016EC  0012               	return		;funcret
  4570  0016EE                     __end_of_KernelClock:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function i2___awmod *****************
  4574 ;; Defined at:
  4575 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  dividend        2    0[COMRAM] int 
  4578 ;;  divisor         2    2[COMRAM] int 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  sign            1    5[COMRAM] unsigned char 
  4581 ;;  counter         1    4[COMRAM] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  2    0[COMRAM] int 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4591 ;;      Params:         4       0       0       0       0       0       0
  4592 ;;      Locals:         2       0       0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0
  4594 ;;      Totals:         6       0       0       0       0       0       0
  4595 ;;Total ram usage:        6 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_KernelClock
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text34
  4605  001506                     __ptext34:
  4606                           	callstack 0
  4607  001506                     i2___awmod:
  4608                           	callstack 22
  4609  001506  0E00               	movlw	0
  4610  001508  6E38               	movwf	i2___awmod@sign^0,c
  4611  00150A  BE34               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4612  00150C  EF8C  F00A         	goto	i2u377_40
  4613  001510  EF8A  F00A         	goto	i2u377_41
  4614  001514                     i2u377_41:
  4615  001514  EF92  F00A         	goto	i2l3437
  4616  001518                     i2u377_40:
  4617  001518  6C33               	negf	i2___awmod@dividend^0,c
  4618  00151A  1E34               	comf	(i2___awmod@dividend+1)^0,f,c
  4619  00151C  B0D8               	btfsc	status,0,c
  4620  00151E  2A34               	incf	(i2___awmod@dividend+1)^0,f,c
  4621  001520  0E01               	movlw	1
  4622  001522  6E38               	movwf	i2___awmod@sign^0,c
  4623  001524                     i2l3437:
  4624  001524  BE36               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4625  001526  EF99  F00A         	goto	i2u378_40
  4626  00152A  EF97  F00A         	goto	i2u378_41
  4627  00152E                     i2u378_41:
  4628  00152E  EF9D  F00A         	goto	i2l3441
  4629  001532                     i2u378_40:
  4630  001532  6C35               	negf	i2___awmod@divisor^0,c
  4631  001534  1E36               	comf	(i2___awmod@divisor+1)^0,f,c
  4632  001536  B0D8               	btfsc	status,0,c
  4633  001538  2A36               	incf	(i2___awmod@divisor+1)^0,f,c
  4634  00153A                     i2l3441:
  4635  00153A  5035               	movf	i2___awmod@divisor^0,w,c
  4636  00153C  1036               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4637  00153E  B4D8               	btfsc	status,2,c
  4638  001540  EFA4  F00A         	goto	i2u379_41
  4639  001544  EFA6  F00A         	goto	i2u379_40
  4640  001548                     i2u379_41:
  4641  001548  EFCA  F00A         	goto	i2l3457
  4642  00154C                     i2u379_40:
  4643  00154C  0E01               	movlw	1
  4644  00154E  6E37               	movwf	i2___awmod@counter^0,c
  4645  001550  EFAE  F00A         	goto	i2l3447
  4646  001554                     i2l3445:
  4647  001554  90D8               	bcf	status,0,c
  4648  001556  3635               	rlcf	i2___awmod@divisor^0,f,c
  4649  001558  3636               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4650  00155A  2A37               	incf	i2___awmod@counter^0,f,c
  4651  00155C                     i2l3447:
  4652  00155C  AE36               	btfss	(i2___awmod@divisor+1)^0,7,c
  4653  00155E  EFB3  F00A         	goto	i2u380_41
  4654  001562  EFB5  F00A         	goto	i2u380_40
  4655  001566                     i2u380_41:
  4656  001566  EFAA  F00A         	goto	i2l3445
  4657  00156A                     i2u380_40:
  4658  00156A                     i2l3449:
  4659  00156A  5035               	movf	i2___awmod@divisor^0,w,c
  4660  00156C  5C33               	subwf	i2___awmod@dividend^0,w,c
  4661  00156E  5036               	movf	(i2___awmod@divisor+1)^0,w,c
  4662  001570  5834               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4663  001572  A0D8               	btfss	status,0,c
  4664  001574  EFBE  F00A         	goto	i2u381_41
  4665  001578  EFC0  F00A         	goto	i2u381_40
  4666  00157C                     i2u381_41:
  4667  00157C  EFC4  F00A         	goto	i2l3453
  4668  001580                     i2u381_40:
  4669  001580  5035               	movf	i2___awmod@divisor^0,w,c
  4670  001582  5E33               	subwf	i2___awmod@dividend^0,f,c
  4671  001584  5036               	movf	(i2___awmod@divisor+1)^0,w,c
  4672  001586  5A34               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4673  001588                     i2l3453:
  4674  001588  90D8               	bcf	status,0,c
  4675  00158A  3236               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4676  00158C  3235               	rrcf	i2___awmod@divisor^0,f,c
  4677  00158E  2E37               	decfsz	i2___awmod@counter^0,f,c
  4678  001590  EFB5  F00A         	goto	i2l3449
  4679  001594                     i2l3457:
  4680  001594  5038               	movf	i2___awmod@sign^0,w,c
  4681  001596  B4D8               	btfsc	status,2,c
  4682  001598  EFD0  F00A         	goto	i2u382_41
  4683  00159C  EFD2  F00A         	goto	i2u382_40
  4684  0015A0                     i2u382_41:
  4685  0015A0  EFD6  F00A         	goto	i2l3461
  4686  0015A4                     i2u382_40:
  4687  0015A4  6C33               	negf	i2___awmod@dividend^0,c
  4688  0015A6  1E34               	comf	(i2___awmod@dividend+1)^0,f,c
  4689  0015A8  B0D8               	btfsc	status,0,c
  4690  0015AA  2A34               	incf	(i2___awmod@dividend+1)^0,f,c
  4691  0015AC                     i2l3461:
  4692  0015AC  C033  F033         	movff	i2___awmod@dividend,?i2___awmod
  4693  0015B0  C034  F034         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4694  0015B4  0012               	return		;funcret
  4695  0015B6                     __end_ofi2___awmod:
  4696                           	callstack 0
  4697                           
  4698                           	psect	text35
  4699  000000                     __ptext35:
  4700                           	callstack 0
  4701  000000                     
  4702                           	psect	rparam
  4703  0000                     
  4704                           	psect	temp
  4705  000065                     btemp:
  4706                           	callstack 0
  4707  000065                     	ds	1
  4708  0000                     int$flags	set	btemp
  4709  0000                     wtemp8	set	btemp+1
  4710  0000                     ttemp5	set	btemp+1
  4711  0000                     ttemp6	set	btemp+4
  4712  0000                     ttemp7	set	btemp+8
  4713                           
  4714                           	psect	idloc
  4715                           
  4716                           ;Config register IDLOC0 @ 0x200000
  4717                           ;	unspecified, using default values
  4718  200000                     	org	2097152
  4719  200000  FF                 	db	255
  4720                           
  4721                           ;Config register IDLOC1 @ 0x200001
  4722                           ;	unspecified, using default values
  4723  200001                     	org	2097153
  4724  200001  FF                 	db	255
  4725                           
  4726                           ;Config register IDLOC2 @ 0x200002
  4727                           ;	unspecified, using default values
  4728  200002                     	org	2097154
  4729  200002  FF                 	db	255
  4730                           
  4731                           ;Config register IDLOC3 @ 0x200003
  4732                           ;	unspecified, using default values
  4733  200003                     	org	2097155
  4734  200003  FF                 	db	255
  4735                           
  4736                           ;Config register IDLOC4 @ 0x200004
  4737                           ;	unspecified, using default values
  4738  200004                     	org	2097156
  4739  200004  FF                 	db	255
  4740                           
  4741                           ;Config register IDLOC5 @ 0x200005
  4742                           ;	unspecified, using default values
  4743  200005                     	org	2097157
  4744  200005  FF                 	db	255
  4745                           
  4746                           ;Config register IDLOC6 @ 0x200006
  4747                           ;	unspecified, using default values
  4748  200006                     	org	2097158
  4749  200006  FF                 	db	255
  4750                           
  4751                           ;Config register IDLOC7 @ 0x200007
  4752                           ;	unspecified, using default values
  4753  200007                     	org	2097159
  4754  200007  FF                 	db	255
  4755                           
  4756                           	psect	config
  4757                           
  4758                           ; Padding undefined space
  4759  300000                     	org	3145728
  4760  300000  FF                 	db	255
  4761                           
  4762                           ;Config register CONFIG1H @ 0x300001
  4763                           ;	Oscillator Selection bits
  4764                           ;	OSC = HS, HS oscillator
  4765                           ;	Fail-Safe Clock Monitor Enable bit
  4766                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4767                           ;	Internal/External Oscillator Switchover bit
  4768                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4769  300001                     	org	3145729
  4770  300001  02                 	db	2
  4771                           
  4772                           ;Config register CONFIG2L @ 0x300002
  4773                           ;	Power-up Timer Enable bit
  4774                           ;	PWRT = OFF, PWRT disabled
  4775                           ;	Brown-out Reset Enable bits
  4776                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4777                           ;	Brown Out Reset Voltage bits
  4778                           ;	BORV = 2, 
  4779  300002                     	org	3145730
  4780  300002  11                 	db	17
  4781                           
  4782                           ;Config register CONFIG2H @ 0x300003
  4783                           ;	Watchdog Timer Enable bit
  4784                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4785                           ;	Watchdog Timer Postscale Select bits
  4786                           ;	WDTPS = 1, 1:1
  4787  300003                     	org	3145731
  4788  300003  00                 	db	0
  4789                           
  4790                           ; Padding undefined space
  4791  300004                     	org	3145732
  4792  300004  FF                 	db	255
  4793                           
  4794                           ;Config register CONFIG3H @ 0x300005
  4795                           ;	CCP2 MUX bit
  4796                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4797                           ;	PORTB A/D Enable bit
  4798                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4799                           ;	Low-Power Timer1 Oscillator Enable bit
  4800                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4801                           ;	MCLR Pin Enable bit
  4802                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4803  300005                     	org	3145733
  4804  300005  83                 	db	131
  4805                           
  4806                           ;Config register CONFIG4L @ 0x300006
  4807                           ;	Stack Full/Underflow Reset Enable bit
  4808                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4809                           ;	Single-Supply ICSP Enable bit
  4810                           ;	LVP = OFF, Single-Supply ICSP disabled
  4811                           ;	Extended Instruction Set Enable bit
  4812                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4813                           ;	Background Debugger Enable bit
  4814                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4815  300006                     	org	3145734
  4816  300006  80                 	db	128
  4817                           
  4818                           ; Padding undefined space
  4819  300007                     	org	3145735
  4820  300007  FF                 	db	255
  4821                           
  4822                           ;Config register CONFIG5L @ 0x300008
  4823                           ;	Code Protection bit
  4824                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4825                           ;	Code Protection bit
  4826                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4827                           ;	Code Protection bit
  4828                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4829                           ;	Code Protection bit
  4830                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4831  300008                     	org	3145736
  4832  300008  0F                 	db	15
  4833                           
  4834                           ;Config register CONFIG5H @ 0x300009
  4835                           ;	Boot Block Code Protection bit
  4836                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4837                           ;	Data EEPROM Code Protection bit
  4838                           ;	CPD = OFF, Data EEPROM not code-protected
  4839  300009                     	org	3145737
  4840  300009  C0                 	db	192
  4841                           
  4842                           ;Config register CONFIG6L @ 0x30000A
  4843                           ;	Write Protection bit
  4844                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4845                           ;	Write Protection bit
  4846                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4847                           ;	Write Protection bit
  4848                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4849                           ;	Write Protection bit
  4850                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4851  30000A                     	org	3145738
  4852  30000A  0F                 	db	15
  4853                           
  4854                           ;Config register CONFIG6H @ 0x30000B
  4855                           ;	Configuration Register Write Protection bit
  4856                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4857                           ;	Boot Block Write Protection bit
  4858                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4859                           ;	Data EEPROM Write Protection bit
  4860                           ;	WRTD = OFF, Data EEPROM not write-protected
  4861  30000B                     	org	3145739
  4862  30000B  E0                 	db	224
  4863                           
  4864                           ;Config register CONFIG7L @ 0x30000C
  4865                           ;	Table Read Protection bit
  4866                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4867                           ;	Table Read Protection bit
  4868                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4869                           ;	Table Read Protection bit
  4870                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4871                           ;	Table Read Protection bit
  4872                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4873  30000C                     	org	3145740
  4874  30000C  0F                 	db	15
  4875                           
  4876                           ;Config register CONFIG7H @ 0x30000D
  4877                           ;	Boot Block Table Read Protection bit
  4878                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4879  30000D                     	org	3145741
  4880  30000D  40                 	db	64
  4881                           tosu	equ	0xFFF
  4882                           tosh	equ	0xFFE
  4883                           tosl	equ	0xFFD
  4884                           stkptr	equ	0xFFC
  4885                           pclatu	equ	0xFFB
  4886                           pclath	equ	0xFFA
  4887                           pcl	equ	0xFF9
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           prodh	equ	0xFF4
  4893                           prodl	equ	0xFF3
  4894                           indf0	equ	0xFEF
  4895                           postinc0	equ	0xFEE
  4896                           postdec0	equ	0xFED
  4897                           preinc0	equ	0xFEC
  4898                           plusw0	equ	0xFEB
  4899                           fsr0h	equ	0xFEA
  4900                           fsr0l	equ	0xFE9
  4901                           wreg	equ	0xFE8
  4902                           indf1	equ	0xFE7
  4903                           postinc1	equ	0xFE6
  4904                           postdec1	equ	0xFE5
  4905                           preinc1	equ	0xFE4
  4906                           plusw1	equ	0xFE3
  4907                           fsr1h	equ	0xFE2
  4908                           fsr1l	equ	0xFE1
  4909                           bsr	equ	0xFE0
  4910                           indf2	equ	0xFDF
  4911                           postinc2	equ	0xFDE
  4912                           postdec2	equ	0xFDD
  4913                           preinc2	equ	0xFDC
  4914                           plusw2	equ	0xFDB
  4915                           fsr2h	equ	0xFDA
  4916                           fsr2l	equ	0xFD9
  4917                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        24
    BSS         70
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     46     100
    BANK0           128     24      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    kernelLoop$1404	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    my_funcs$0	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    my_funcs$0	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    my_funcs$0	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    kernelLoop$1403	PTR struct . size(2) Largest target is 6
		 -> main@p4(BANK0[6]), main@p3(BANK0[6]), main@p2(BANK0[6]), main@p1(BANK0[6]), 

    ?_getKeypadDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    ?_getKeypadDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    ?_getLcdDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    ?_getLcdDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    S25$2$0	PTR void  size(2) Largest target is 1535
		 -> NULL(NULL[0]), RAM(DATA[1535]), 

    keypad.funcoes$0	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    lcd.funcoes$0	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    sp__getKeypadDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    sp__getKeypadDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    my_funcs@drv_keypad$F635	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> read(), debounce(), data(), cmd(), 
		 -> inverte(), changePORTD(), 

    initKp@parameters	PTR void  size(2) Largest target is 1535
		 -> NULL(NULL[0]), RAM(DATA[1535]), 

    read@parameters	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    sp__getLcdDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    sp__getLcdDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    my_funcs@drv_lcd$F595	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> read(), debounce(), data(), cmd(), 
		 -> inverte(), changePORTD(), 

    initLCD@parameters	PTR void  size(2) Largest target is 1535
		 -> NULL(NULL[0]), RAM(DATA[1535]), 

    data@parameters	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    cmd@parameters	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> read(), debounce(), data(), cmd(), 
		 -> inverte(), changePORTD(), 

    initGenerico@parameters	PTR void  size(2) Largest target is 1535
		 -> NULL(NULL[0]), RAM(DATA[1535]), 

    inverte@parameters	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    changePORTD@parameters	PTR void  size(2) Largest target is 1535
		 -> press@value(COMRAM[2]), NULL(NULL[0]), RAM(DATA[1535]), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 6
		 -> main@p4(BANK0[6]), main@p3(BANK0[6]), main@p2(BANK0[6]), main@p1(BANK0[6]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 6
		 -> main@p4(BANK0[6]), main@p3(BANK0[6]), main@p2(BANK0[6]), main@p1(BANK0[6]), 

    pool	PTR struct .[10] size(2) Largest target is 6
		 -> main@p4(BANK0[6]), main@p3(BANK0[6]), main@p2(BANK0[6]), main@p1(BANK0[6]), 

    F2438.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    p4.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    F2435.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    p3.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    F2432.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    p2.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    F2429.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    S57$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    p1.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> press(), db(), time(), disp(), 

    sp__getKeypadDriver	PTR struct . size(2) Largest target is 6
		 -> myself@drv_keypad$F631(COMRAM[5]), 

    sp__getLcdDriver	PTR struct . size(2) Largest target is 6
		 -> myself@drv_lcd$F591(COMRAM[5]), 

    press@value	PTR unsigned int  size(2) Largest target is 2
		 -> press@x(COMRAM[2]), 

    keypad.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    keypad.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    keypad	PTR struct . size(2) Largest target is 6
		 -> myself@drv_keypad$F631(COMRAM[5]), NULL(NULL[0]), 

    S25$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    lcd.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initKp(), initLCD(), initGenerico(), 

    S25$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    lcd.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_keypad$F635(COMRAM[4]), my_funcs@drv_lcd$F595(COMRAM[4]), my_funcs(COMRAM[4]), 

    lcd	PTR struct . size(2) Largest target is 6
		 -> myself@drv_lcd$F591(COMRAM[5]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _kernelLoop->_press
    _time->___awmod
    _press->_changePORTD
    _press->_cmd
    _press->_data
    _press->_inverte
    _press->_read
    _kernelAddProc->___awmod
    _disp->_changePORTD
    _disp->_cmd
    _disp->_data
    _disp->_inverte
    _disp->_read
    ___awmod->___awdiv
    _db->_changePORTD
    _db->_cmd
    _db->_data
    _db->_inverte
    _db->_read
    _read->___awmod
    _inverte->___awmod
    _debounce->___awmod
    _data->___awmod
    _lcdData->_digitalWrite
    _cmd->___awmod
    _changePORTD->___awmod
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   49641
                                              0 BANK0     24    24      0
                    _getKeypadDriver
                       _getLcdDriver
                       _initGenerico *
                             _initKp *
                            _initLCD *
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   39188
                                             37 COMRAM     9     9      0
                            ___awmod
                                 _db *
                               _disp *
                      _kernelAddProc
                              _press *
                               _time *
 ---------------------------------------------------------------------------------
 (2) _time                                                 0     0      0    4048
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _press                                                6     6      0    8727
                                             31 COMRAM     6     6      0
                        _changePORTD *
                                _cmd *
                               _data *
                           _debounce *
                            _inverte *
                               _read *
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2855
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _disp                                                 2     2      0   12500
                                             31 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                        _changePORTD *
                                _cmd *
                               _data *
                           _debounce *
                            _inverte *
                               _read *
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2343
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _db                                                   0     0      0    8452
                        _changePORTD *
                                _cmd *
                               _data *
                           _debounce *
                            _inverte *
                               _read *
 ---------------------------------------------------------------------------------
 (3) _read                                                 2     0      2     416
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             _kpRead
 ---------------------------------------------------------------------------------
 (4) _kpRead                                               2     0      2       0
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _inverte                                              2     0      2       0
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _debounce                                             0     0      0     455
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _kpDebounce
 ---------------------------------------------------------------------------------
 (4) _kpDebounce                                          10    10      0     455
                                             15 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _data                                                 2     0      2    3676
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            _lcdData
 ---------------------------------------------------------------------------------
 (4) _lcdData                                              2     2      0    3645
                                             21 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _cmd                                                  2     0      2    3874
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _changePORTD                                          2     0      2      31
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     0      2    7150
                                             23 COMRAM     2     0      2
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    7119
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _lcdCommand                                           2     2      0    3843
                                             21 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _Delay2ms                                             1     1      0     136
                                             16 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (5) _Delay40us                                            1     1      0      68
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initKp                                               2     0      2     161
                                             23 COMRAM     2     0      2
                             _kpInit
 ---------------------------------------------------------------------------------
 (2) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initGenerico                                         2     0      2      31
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getLcdDriver                                         2     0      2       0
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getKeypadDriver                                      2     0      2       0
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (8) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getKeypadDriver
   _getLcdDriver
   _initGenerico *
   _initKp *
     _kpInit
   _initLCD *
     _lcdInit
       _Delay2ms
         _Delay40us
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _pinMode
   _kernelAddProc *
     ___awmod
       ___awdiv (ARG)
   _kernelInit *
   _kernelLoop *
     ___awmod
       ___awdiv (ARG)
     _db *
       _changePORTD *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
       _cmd *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdCommand (ARG)
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _data *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdData (ARG)
           _Delay40us
           _digitalWrite
       _debounce *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _kpDebounce (ARG)
       _inverte *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
       _read *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _kpRead (ARG)
     _disp *
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _changePORTD *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
       _cmd *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdCommand (ARG)
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _data *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdData (ARG)
           _Delay40us
           _digitalWrite
       _debounce *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _kpDebounce (ARG)
       _inverte *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
       _read *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _kpRead (ARG)
     _kernelAddProc *
       ___awmod
         ___awdiv (ARG)
     _press *
       _changePORTD *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
       _cmd *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdCommand (ARG)
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _data *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdData (ARG)
           _Delay40us
           _digitalWrite
       _debounce *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _kpDebounce (ARG)
       _inverte *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
       _read *
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _kpRead (ARG)
     _time *
       ___awdiv
       ___awmod
         ___awdiv (ARG)
   _timerInit *

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      44       5       53.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2E      64       1       79.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      15        0.0%
DATA                 0      0      A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jun 28 20:32:07 2021

                      l43 08CE                        l46 1852                        l64 0F52  
                      l49 197C                        l90 1658                        l93 0F54  
                      l77 138E                        l86 1A46              ___awdiv@sign 0047  
                      _v0 0012                        _v1 0011                        _v2 0010  
                      _v3 000F                        _db 1940                       ?_db 0033  
                     l122 1A8C                       l221 0D6A                       l125 1A96  
                     l304 1A1C                       l128 1A5A                       l322 17E2  
                     l316 176A                       l309 19EC                       l255 0B1C  
                     l319 18A6                       l520 1A86                       l291 1A6E  
                     l523 1A7E                       l507 1A76                       l268 1A3C  
                     l526 1A64                       l286 126C                       l542 1A92  
                     l551 19D0                       l287 1284                       l288 128C  
                     l529 19A6                       l545 1A32                       l548 1A50  
                     l785 1454                       l798 1504                       _PR2 000FCB  
                     _ISR 0008                       _cmd 1A80                       _end 0016  
                     _lcd 0063              ___awmod@sign 004F                       prod 000FF3  
                     tosl 000FFD                       wreg 000FE8                      ??_db 0052  
                    ?_ISR 0033           _getKeypadDriver 19A8                      l3001 0BE4  
                    l3011 0C7E                      l3003 0C06                      l3021 0D12  
                    l3013 0C9A                      l3005 0C22                      l3101 170C  
                    l3023 0D2C                      l3015 0CB4                      l3007 0C3C  
                    l3111 174E                      l3103 1710                      l3033 19D6  
                    l3025 0D4C                      l3017 0CD4                      l3009 0C5C  
                    l3113 175E                      l3105 1724                      l3121 185E  
                    l3041 1114                      l3201 13AC                      ?_cmd 0050  
                    l3035 19DA                      l3027 19D2                      l3019 0CF6  
                    l3115 1766                      l3107 1738                      l3131 18A2  
                    l3123 1872                      l3051 1120                      l3043 1118  
                    l3211 13D2                      l3203 13B0                      l3037 19DC  
                    l3109 173C                      l3141 08EC                      l3125 1876  
                    l3117 1856                      l3061 116E                      l3053 1162  
                    l3045 111C                      l3133 1A88                      l3221 1408  
                    l3213 13E4                      l3205 13BE                      l3301 1804  
                    l3151 096E                      l3143 08FE                      l3127 188A  
                    l3119 185A                      l3071 11BA                      l3063 118A  
                    l3039 1A34                      l3135 1A94                      l3223 141E  
                    l3215 13EC                      l3231 1434                      l3207 13C6  
                    l3303 1834                      l3311 197A                      l3161 0A0A  
                    l3153 0992                      l3145 091E                      l3401 17B6  
                    l3129 189E                      l3081 1232                      l3073 11EA  
                    l3233 1444                      l3225 1426                      l3217 13F4  
                    l3209 13CA                      l3241 145A                      l3305 1850  
                    l3321 0DCE                      l3171 0AA8                      l3163 0A30  
                    l3155 09B8                      l3147 0940                      l3139 08D0  
                    l3411 17D0                      l3403 17BA                      l3091 127C  
                    l3083 1242                      l3075 121E                      l3059 116A  
                    l3235 144C                      l3227 1428                      l3219 1402  
                    l3251 148A                      l3243 1468                      l3331 0E16  
                    l3323 0DD2                      l3315 0D6C                      l3173 0AC4  
                    l3165 0A4C                      l3157 09D4                      l3149 095C  
                    l3413 17D6                      l3405 17C0                      l3093 1288  
                    l3085 125A                      l3077 1220                      l3069 118E  
                    l3229 142E                      l3261 14D0                      l3253 149C  
                    l3245 1470                      l3309 1940                      l3341 0E78  
                    l3333 0E32                      l3325 0DEE                      l3317 0D74  
                    l3501 0FE8                      l3095 16F0                      l3175 0AD6  
                    l3167 0A5E                      l3159 09E6                      l3415 17DC  
                    l3407 17C4                      l3087 1260                      l3079 1230  
                    l3191 1A1E                      l3183 1A78                      l3271 14FC  
                    l3263 14D8                      l3255 14A4                      l3247 1474  
                    l3239 1456                      l3351 0EC4                      l3343 0E80  
                    l3335 0E3A                      l3327 0DF6                      l3319 0DB2  
                    l3511 108C                      l3503 0FFA                      l3097 16F4  
                    l3177 0AFA                      l3169 0A82                      l3409 17CA  
                    l3089 1264                      l3265 14DE                      l3257 14AC  
                    l3249 1482                      l3281 06F8                      l3361 0F26  
                    l3353 0EE0                      l3345 0E9A                      l3337 0E58  
                    l3329 0E12                      l3513 10D6                      l3505 1012  
                    l3601 1338                      l3099 16F8                      l3187 1A8E  
                    l3179 1A80                      l3195 1392                      l3259 14BA  
                    l3267 14E4                      l3371 15B6                      l3291 0876  
                    l3283 0736                      l3275 0612                      l3363 0F2C  
                    l3355 0EE6                      l3347 0EA0                      l3339 0E5C  
                    l3515 10F2                      l3507 103A                      l3611 1376  
                    l3603 134E                      l3381 1A66                      l3517 1A52  
                    l3197 1396                      l3269 14F4                      l3373 15EC  
                    l3293 08CC                      l3285 078C                      l3277 064C  
                    l3365 0F48                      l3357 0F02                      l3349 0EBC  
                    l3509 1052                      l3621 138A                      l3613 1382  
                    l3605 1352                      l3391 17A0                      l3383 176C  
                    l3519 1A56                      l3199 13A4                      l3375 1604  
                    l3287 07E2                      l3279 06A2                      l3367 0F50  
                    l3359 0F0A                      l3615 1384                      l3607 135E  
                    l3393 17A4                      l3385 1794                      l3377 163C  
                    l3297 17E4                      l3289 0820                      l3617 1386  
                    l3609 136A                      l3475 197E                      l3395 17A8  
                    l3387 1798                      l3571 1A60                      l3299 17E8  
                    l3491 0F54                      l3483 1A70                      l3619 1388  
                    l3397 17AC                      l3389 179C                      l3493 0F66  
                    l3485 1A74                      l3479 19A8                      l3399 17B2  
                    l3575 1A48                      l3487 1A3E                      l3495 0F72  
                    l3591 12A6                      l3569 1A5C                      l3577 1A4C  
                    l3497 0FC8                      l3593 12D4                      l3499 0FCC  
                    l3595 1302                      l3597 1314                      l3589 128E  
                    l2983 1A0A                      l2991 0B4C                      l3599 1326  
                    l2985 1A0C                      l2977 1A06                      l2993 0B6C  
                    l2995 0B8E                      l2987 0B1E                      l2997 0BAA  
                    l2989 0B3A                      l2999 0BC4                      u3000 0D2C  
                    u3001 0D28                      u3030 19EC                      u3014 0D3E  
                    u3110 1230                      u3031 19E8                      u3015 0D3A  
                    u3111 122C                      u3024 0D5E                      u3120 1242  
                    u3104 1208                      u3025 0D5A                      u3121 123E  
                    u3105 1202                      u3210 095C                      u3130 125A  
                    u3211 0958                      u3131 1256                      u4011 130C  
                    u3300 0A5E                      u3220 096E                      u3204 0930  
                    u3140 127C                      u3060 118A                      u3044 1136  
                    u3301 0A5A                      u3221 096A                      u3205 092C  
                    u3141 1278                      u3061 1186                      u3045 1132  
                    u4021 131E                      u3150 174E                      u3054 1156  
                    u3151 174A                      u3055 1152                      u4031 1330  
                    u3160 175E                      u3080 11BA                      u3400 1402  
                    u4008 12EE                      u3161 175A                      u3081 11B6  
                    u3401 13FE                      u4041 1342                      u4009 1302  
                    u3330 0AC4                      u3314 0A74                      u3250 09D4  
                    u3234 0984                      u3170 08EC                      u3074 11A0  
                    u3410 141E                      u3331 0AC0                      u3315 0A70  
                    u3251 09D0                      u3235 0980                      u3171 08E8  
                    u3075 119C                      u3411 141A                      u3340 0AD6  
                    u3324 0A98                      u3260 09E6                      u3244 09A8  
                    u3180 08FE                      u3420 1444                      u3341 0AD2  
                    u3325 0A94                      u3261 09E2                      u3245 09A4  
                    u3181 08FA                      u3421 1440                      u3094 11D8  
                    u3430 1468                      u3095 11D2                      u3431 1464  
                    u3440 1482                      u3600 0DCE                      u3441 147E  
                    u3601 0DCA                      u3354 0AEC                      u3290 0A4C  
                    u3274 09FC                      u3194 0910                      u3370 13A4  
                    u3450 149C                      u3610 0DEE                      u3355 0AE8  
                    u3291 0A48                      u3275 09F8                      u3195 090C  
                    u3371 13A0                      u3451 1498                      u3611 0DEA  
                    u2820 1A1C                      u3364 0B10                      u3284 0A20  
                    u3380 13BE                      u3460 14BA                      u3508 068E  
                    u3700 0F26                      u3620 0E12                      u2821 1A18  
                    u3365 0B0C                      u3285 0A1C                      u3381 13BA  
                    u3461 14B6                      u3509 06A2                      u3701 0F22  
                    u3621 0E0E                      u2910 0C22                      u2830 0B3A  
                    u3390 13E4                      u3470 14D0                      u3518 06E4  
                    u3710 0F48                      u3630 0E32                      u2911 0C1E  
                    u2831 0B36                      u3391 13E0                      u3471 14CC  
                    u3519 06F8                      u3711 0F44                      u3631 0E2E  
                    u2920 0C3C                      u2904 0BF6                      u2840 0B4C  
                    u3480 14F4                      u3720 15EC                      u3528 0722  
                    u3640 0E58                      u2921 0C38                      u2905 0BF2  
                    u2841 0B48                      u3481 14F0                      u3721 15E8  
                    u3529 0736                      u3641 0E54                      u3538 0778  
                    u3650 0E78                      u3539 078C                      u3651 0E74  
                    u3548 07CE                      u3660 0E9A                      u3900 10D6  
                    u3549 07E2                      u3661 0E96                      u3901 10D2  
                    u2950 0C9A                      u2934 0C4E                      u2870 0BAA  
                    u2854 0B5E                      u3558 080C                      u3670 0EBC  
                    u2951 0C96                      u2935 0C4A                      u2871 0BA6  
                    u2855 0B5A                      u3559 0820                      u3671 0EB8  
                    u2960 0CB4                      u2944 0C6E                      u2880 0BC4  
                    u2864 0B7E                      u3568 0862                      u3680 0EE0  
                    u2961 0CB0                      u2945 0C6A                      u2881 0BC0  
                    u2865 0B7A                      u3569 0876                      u3681 0EDC  
                    u3578 08B8                      u3498 0638                      u3690 0F02  
                    u3850 0F66                      u3579 08CC                      u3499 064C  
                    u3691 0EFE                      u3851 0F62                      u3588 1966  
                    u3860 0FC8                      u3589 197A                      u3861 0FC4  
                    u2990 0D12                      u2974 0CC6                      u2894 0BD6  
                    u3598 0D9E                      u3870 0FFA                      u2991 0D0E  
                    u2975 0CC2                      u2895 0BD2                      u3599 0DB2  
                    u3871 0FF6                      i2l40 18DE                      u2984 0CE6  
                    u3880 108C                      u2985 0CE2                      u3881 1088  
                    _PIR1 000F9E                      u3898 10B2                      u3899 10C6  
                    u3998 12C0                      u3999 12D4                      _RCON 000FD0  
         fp__initGenerico 0000                      _data 1A78                      _disp 0612  
                    _main 128E                      _read 1A1E                      _hour 0007  
                    _time 17E4                      _pool 00B0                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 0065  
      kernelLoop@tempProc 005D                      prodh 000FF4                      prodl 000FF3  
                    start 000E             ??_KernelClock 0039              ___param_bank 000000  
           cmd@parameters 0050                     ??_ISR 003C                     ??_cmd 0052  
                   ?_data 0050                     ?_disp 0033                     ?_main 0033  
                   ?_read 0050           __end_of___awdiv 1456           __end_of___awmod 1506  
                   ?_time 0033                     _T0CON 000FD5           ___awdiv@divisor 0044  
                   _T2CON 000FCA                     i2l111 16EC           ___awdiv@counter 0046  
                   i2l798 15B4                     _RCREG 000FAE                     _RCSTA 000FAB  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _SPBRG 000FAF  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _PORTD 000F83                     _PORTE 000F84                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96                     _TXREG 000FAD                     _TXSTA 000FAC  
    __size_of_changePORTD 0006           __end_of_lcdData 18A8           __end_of_lcdInit 17E4  
         __end_of_initLCD 1A66                     _count 000D      __end_of_getLcdDriver 19A8  
         __end_of_pinMode 0B1E                     _valor 0005                     _press 0D6C  
                   fp__db 0000           __end_of_inverte 1A98                     _start 0017  
                   pclath 000FFA                     tablat 000FF5                     plusw1 000FE3  
                   plusw2 000FDB                     ttemp5 0066                     ttemp6 0069  
                   ttemp7 006D                     status 000FD8                     wtemp8 0066  
  __size_of_kernelAddProc 00A4          __end_of_Delay2ms 19EE        __size_ofi2___awmod 00B0  
           ?_initGenerico 004A      __end_of_digitalWrite 0D6C           __initialization 18FA  
            __end_of_data 1A80              __end_of_disp 08D0              __end_of_main 1392  
            __end_of_read 1A34              __end_of_time 1854        __size_of_Delay40us 0018  
     __end_of_KernelClock 16EE                    ??_data 0052                    ??_disp 0052  
                  ??_main 0061                    ??_read 0052                    ??_time 0050  
           __activetblptr 000002   __end_of_getKeypadDriver 19D2                    _ADCON0 000FC2  
                  _ADCON2 000FC0                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  _CCPR1L 000FBE          ___awdiv@dividend 0042                    ?_press 0033  
                  i2l3431 150A                    i2l3441 153A                    i2l3433 1518  
                  i2l3451 1580                    i2l3443 154C                    i2l3435 1520  
                  i2l3461 15AC                    i2l3453 1588                    i2l3445 1554  
                  i2l3437 1524                    i2l3429 1506                    i2l3455 158E  
                  i2l3447 155C                    i2l3439 1532                    i2l3471 16BE  
                  i2l3449 156A                    i2l3457 1594                    i2l3473 16DA  
                  i2l3465 165A                    i2l3459 15A4                    i2l3467 1662  
                  i2l3469 169C                    i2l3581 18C2                    i2l3583 18D0  
                  i2l3585 18D8                    i2l3587 18DC                    _INTCON 000FF2  
                  _SPBRGH 000FB0               kernelLoop@p 0060          __end_of_debounce 1A94  
          ??_initGenerico 004C                 ??___awdiv 0046                 ??___awmod 004E  
                  _kpInit 1A66                    _kpRead 1A34                    _initKp 1A48  
                  _keypad 0061                    clear_0 1920                    clear_1 192C  
        ___awdiv@quotient 0048                    _minute 0009                    _second 000B  
         ___awmod@divisor 004C                 ??_lcdData 0048                 ??_lcdInit 004A  
         ___awmod@counter 004E                    fp__cmd 0000                    _myself 0022  
           _kernelAddProc 15B6                    main@p1 0098                    main@p2 009E  
                  main@p3 00A4                    main@p4 00AA                 ??_initLCD 004C  
               ??_pinMode 0046         __end_ofi2___awmod 15B6                 ??_inverte 0052  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                    press@x 0054            i2___awmod@sign 0038  
       __end_of_Delay40us 1A1E                __accesstop 0080   __end_of__initialization 1932  
        initKp@parameters 004A            data@parameters 0050             ___rparam_used 000001  
             _KernelClock 165A               pinMode@type 0044            __pcstackCOMRAM 0033  
            __pidataBANK0 19EE             __end_of_press 0F54            ?_kernelAddProc 0050  
              __end_of_db 197E          ?_getKeypadDriver 0042     __size_of_getLcdDriver 002A  
               ?_Delay2ms 0033                   ??_press 0052                __pbssBANK0 00B0  
   __size_of_digitalWrite 024E                __pnvCOMRAM 0061                _lcdCommand 16EE  
            _getLcdDriver 197E                   ?_kpInit 0033                   ?_kpRead 0042  
                 _CCP1CON 000FBD                   ?_initKp 004A                   _BAUDCON 000FB8  
              _kpDebounce 1114        __size_of_timerInit 0008                ??_Delay2ms 0043  
               ?_debounce 0033      __end_of_initGenerico 1A5C              _digitalWrite 0B1E  
   _my_funcs@drv_lcd$F595 002B                   __Hparam 0000                   __Lparam 0000  
         kpDebounce@old_D 0047  _my_funcs@drv_keypad$F635 0027           kpDebounce@tempo 0015  
              _kernelInit 1A3E                _kernelLoop 0F54            read@parameters 0050  
                 ___awdiv 1392                   ___awmod 1456           ??_kernelAddProc 0052  
            __psmallconst 0600           __size_of_kpInit 000A           __size_of_kpRead 000A  
         __size_of_initKp 000A                   __pcinit 18FA                   _lcdData 1854  
                 __ramtop 0600             ??_changePORTD 0052                   _lcdInit 176C  
                 __ptext0 128E                   __ptext1 1A70                   __ptext2 0F54  
                 __ptext3 0D6C                   __ptext4 1940                   __ptext5 0612  
                 __ptext6 17E4                   __ptext7 15B6                   __ptext8 1456  
                 __ptext9 1392                   _display 0013                   _initLCD 1A5C  
            __size_of_ISR 18F2              __size_of_cmd 0008                   _pinMode 08D0  
        ___awmod@dividend 004A                   _inverte 1A94                ??_debounce 0050  
                 fp__data 0000                   fp__disp 0000                   fp__read 0000  
               Delay2ms@i 0043                   fp__time 0000                   _started 0014  
     kpDebounce@valorNovo 0003            __pintcode_body 18A8      end_of_initialization 1932  
           __Lmediumconst 0000                   int_func 18A8         __end_of_timerInit 1A78  
                 postdec1 000FE5                   postdec2 000FDD               ?_lcdCommand 0033  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
             ?_kpDebounce 0033            _valor@ssd$F554 0601                fp__initLCD 0000  
     __end_of_changePORTD 1A8E            kernelLoop@next 005F                fp__inverte 0000  
               i2___awmod 1506     changePORTD@parameters 0050                 _Delay40us 1A06  
            ?_KernelClock 0033               ?_kernelInit 0033               ?_kernelLoop 0033  
   __size_of_initGenerico 000A            __end_of_kpInit 1A70            __end_of_kpRead 1A3E  
  __end_of_valor@ssd$F554 0611            __end_of_initKp 1A52         inverte@parameters 0050  
     start_initialization 18FA               __end_of_ISR 18FA               __end_of_cmd 1A88  
       __size_of_Delay2ms 001C                ?i2___awmod 0033       __size_of_lcdCommand 007E  
         KernelClock@proc 003B       __size_of_kpDebounce 017A                ?_Delay40us 0033  
            _initGenerico 1A52                  ??_kpInit 0042                  ??_kpRead 0044  
             __pdataBANK0 0080                  ??_initKp 004C               _changePORTD 1A88  
             __pbssCOMRAM 0001             __pcstackBANK0 0098      kernelAddProc@newProc 0050  
              pinMode@pin 0042         __size_of_debounce 0006       __size_of_kernelInit 000A  
     __size_of_kernelLoop 01C0  __size_of_getKeypadDriver 002A                 __pintcode 0008  
                ?___awdiv 0042                  ?___awmod 004A                  ?_lcdData 0033  
                ?_lcdInit 0033             lcdCommand@cmd 0049                  ?_initLCD 004A  
             __smallconst 0600                  ?_pinMode 0042                  ?_inverte 0050  
     _myself@drv_lcd$F591 001D               ??i2___awmod 0037            __size_of_press 01E8  
             __size_of_db 003E               ??_Delay40us 0042                  i2u380_40 156A  
                i2u380_41 1566                  i2u381_40 1580                  i2u381_41 157C  
                i2u382_40 15A4                  i2u382_41 15A0                  i2u383_40 169C  
                i2u383_41 1698                  i2u384_40 16EC                  i2u384_41 16E8  
                i2u377_40 1518                  i2u377_41 1514                  i2u378_40 1532  
                i2u378_41 152E                  i2u379_40 154C                  i2u379_41 1548  
                i2u398_40 18D0                  i2u398_41 18CC              ??_lcdCommand 0048  
               main@F2432 008C                 main@F2435 0086                 main@F2429 0092  
               main@F2438 0080                 _timerInit 1A70      __size_of_KernelClock 0094  
              press@value 0056              ??_kpDebounce 0042     __end_of_kernelAddProc 165A  
               fp__initKp 0000           lcdCommand@old_D 0048     kpDebounce@valorAntigo 0001  
                _Delay2ms 19D2                 copy_data0 190E        i2___awmod@dividend 0033  
      __end_of_lcdCommand 176C              lcdData@old_D 0049              lcdData@valor 0048  
      __end_of_kpDebounce 128E                  __Hrparam 0000         ??_getKeypadDriver 0044  
                __Lrparam 0000              ??_kernelInit 0042              ??_kernelLoop 0058  
              ?_timerInit 0033          __size_of___awdiv 00C4          __size_of___awmod 00B0  
        __size_of_lcdData 0054          __size_of_lcdInit 0078          __size_of_initLCD 000A  
                _debounce 1A8E          __size_of_pinMode 024E          __size_of_inverte 0004  
                __ptext10 1A78                  __ptext11 1A80                  __ptext20 1A48  
                __ptext12 1A94                  __ptext21 1A52                  __ptext13 1A88  
                __ptext30 197E                  __ptext22 1A5C                  __ptext14 1A1E  
                __ptext31 19A8                  __ptext23 176C                  __ptext15 1A34  
                __ptext24 08D0                  __ptext16 1A8E                  __ptext33 165A  
                __ptext25 16EE                  __ptext17 1114                  __ptext34 1506  
                __ptext26 0B1E                  __ptext18 1854                  __ptext35 0000  
                __ptext27 19D2                  __ptext19 1A3E                  __ptext28 1A06  
                __ptext29 1A66        __end_of_kernelInit 1A48            fp__changePORTD 0000  
      __end_of_kernelLoop 1114             __size_of_data 0008             __size_of_disp 02BE  
           __size_of_main 0104             __size_of_read 0016             __size_of_time 0070  
              Delay40us@i 0042                  _my_funcs 002F                  int$flags 0065  
           ?_getLcdDriver 0042                  fp__press 0000              ?_changePORTD 0050  
       i2___awmod@divisor 0035         i2___awmod@counter 0037             ?_digitalWrite 0042  
  _myself@drv_keypad$F631 0018                  intlevel2 0000         digitalWrite@value 0044  
  initGenerico@parameters 004A            ??_getLcdDriver 0044               ??_timerInit 0042  
             kpDebounce@i 004B               kpDebounce@j 004A               kpDebounce@k 0048  
          ??_digitalWrite 0046           digitalWrite@pin 0042               fp__debounce 0000  
       initLCD@parameters 004A  
